<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='trips+ (bixi)' inline='true' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.0xofw0u1qreusv10z4ieq04jjmh3'>
            <connection class='mysql' dbname='bixi' odbc-native-protocol='' one-time-sql='' port='3306' server='127.0.0.1' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.0xofw0u1qreusv10z4ieq04jjmh3' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.0xofw0u1qreusv10z4ieq04jjmh3' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.0xofw0u1qreusv10z4ieq04jjmh3' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.0xofw0u1qreusv10z4ieq04jjmh3' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>19</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[start_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_station_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[end_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_station_code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_sec</remote-name>
            <remote-type>3</remote-type>
            <local-name>[duration_sec]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>duration_sec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_member</remote-name>
            <remote-type>16</remote-type>
            <local-name>[is_member]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>is_member</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_E436E804F5824BE1A09B6159A4888209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_1563593561652801544:qk]&quot;' value='% of Total Revenue' />
        </aliases>
      </column>
      <column caption='Revenue' datatype='real' name='[Calculation_1563593561652801544]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF([Calculation_2618843249007489028] &lt;= 30) THEN 2.99&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;30) AND ([Calculation_2618843249007489028] &lt;= 45) THEN 4.79&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;45) AND ([Calculation_2618843249007489028] &lt;= 60) THEN 7.79&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column caption='Trip Length Bin' datatype='string' name='[Calculation_2559733504488513538]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF([Calculation_2618843249007489028] &lt;= 30) THEN &quot;30 Mins or Less&quot;&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;30) AND ([Calculation_2618843249007489028] &lt;= 45) THEN &quot;30 to 45 Mins&quot;&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;45) AND ([Calculation_2618843249007489028] &lt;= 60) THEN &quot;45 to 60 Mins&quot;&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column caption='Duration Mins' datatype='real' name='[Calculation_2618843249007489028]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[duration_sec]/60' />
      </column>
      <column aggregation='Sum' caption='Round Trip Stations' datatype='integer' name='[Calculation_2779283986484445184]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF ([start_station_code]=[end_station_code]) THEN 1 ELSE 0 END' />
      </column>
      <column caption='% Member Trips' datatype='real' name='[Calculation_961518585424773130]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(INT([Is Member (copy)_2905947724885282821]=1)) / TOTAL(COUNT([Is Member (copy)_2905947724885282821]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% Round Trips' datatype='real' name='[Calculation_961518585438228492]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(INT([start_station_code] == [end_station_code])) / TOTAL(COUNT([start_station_code]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='None' caption='Duration Mins (bin)' datatype='integer' name='[Duration Mins (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_2618843249007489028]' peg='0' size='5' />
      </column>
      <column aggregation='Avg' caption='Duration Mins (Average)' datatype='real' name='[Duration Mins (copy)_1563593561621929989]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[duration_sec]/60' />
      </column>
      <column aggregation='Sum' caption='Id (copy)' datatype='integer' name='[Id (copy)_2779283986491154433]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[id]' />
      </column>
      <column caption='Is Member (Measure)' datatype='integer' name='[Is Member (copy)_2905947724885282821]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[is_member]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Code' datatype='integer' name='[code]' role='dimension' type='ordinal' />
      <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
      <column caption='End Date' datatype='datetime' name='[end_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Is Member (Dimension)' datatype='integer' name='[is_member]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:ok]' pivot='key' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_member]' derivation='Count' name='[cnt:is_member:ok]' pivot='key' type='ordinal' />
      <column-instance column='[is_member]' derivation='Count' name='[cnt:is_member:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start_date]' derivation='Day' name='[dy:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Duration Mins (bin)]' derivation='None' name='[none:Duration Mins (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[is_member]' derivation='None' name='[none:is_member:ok]' pivot='key' type='ordinal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[is_member]' derivation='Count' name='[pcto:cnt:is_member:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Count' name='[pcto:cnt:is_member:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Count' name='[pcto:cnt:is_member:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' />
          <order field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]' />
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1563593561652801544]' derivation='Sum' name='[pcto:sum:Calculation_1563593561652801544:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcto:sum:is_member:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_961518585438228492]' derivation='Sum' name='[sum:Calculation_961518585438228492:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[sum:is_member:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_961518585424773130]' derivation='User' name='[usr:Calculation_961518585424773130:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_961518585438228492]' derivation='User' name='[usr:Calculation_961518585438228492:ok:3]' pivot='key' type='ordinal'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_961518585438228492]' derivation='User' name='[usr:Calculation_961518585438228492:ok:6]' pivot='key' type='ordinal'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_961518585438228492]' derivation='User' name='[usr:Calculation_961518585438228492:qk:10]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:ok]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_961518585438228492]' derivation='User' name='[usr:Calculation_961518585438228492:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[start_station_code]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_961518585438228492]' derivation='User' name='[usr:Calculation_961518585438228492:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_961518585438228492]' derivation='User' name='[usr:Calculation_961518585438228492:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_961518585438228492]' derivation='User' name='[usr:Calculation_961518585438228492:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[name]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_961518585438228492]' derivation='User' name='[usr:Calculation_961518585438228492:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Name)' hidden='true' name='[Action (Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[cnt:is_member:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:is_member:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:is_member:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:is_member:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_961518585438228492:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:8]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585426243595:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585424773130:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:10]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:6]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:is_member:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>138499</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>599509</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>731851</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>483445</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>587447</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>149794</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>656049</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>839938</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>195662</bucket>
            </map>
            <map to='#e15759'>
              <bucket>481540</bucket>
            </map>
            <map to='#e15759'>
              <bucket>559506</bucket>
            </map>
            <map to='#edc948'>
              <bucket>604358</bucket>
            </map>
            <map to='#edc948'>
              <bucket>741835</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>163417</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>657865</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>860732</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;6e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alexandre-DeSève / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bennett / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boyer / Bélanger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chabot / St-Zotique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clark / Rachel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de Bordeaux / Jean-Talon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de Gaspé / St-Viateur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de la Roche / Everett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;des Érables / Gauthier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;du Square Ahmerst / Wolfe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fleury / Lajeunesse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Girouard / de Terrebonne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hôpital général juif (de la Côte Ste-Catherine / Légaré)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeanne-Mance / St-Viateur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lincoln / du Fort&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marché Maisonneuve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Metcalfe / du Square Dorchester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Métro Outremont (Wiseman / Van Horne)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montcalm / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parc du Pélican (2e avenue / St-Joseph)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Plessis / René-Lévesque&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ross / de l&apos;Église&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St-André / Duluth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St-Dominique / St-Zotique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ste-Famille / des Pins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Villeneuve / de l&apos;Hôtel-de-Ville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1ère avenue / Masson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beatty / de Verdun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Berri / Sherbrooke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cartier / St-Joseph&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHSLD St-Michel (Jarry / 8e avenue)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;d&apos;Orléans / Masson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de Chateaubriand / Beaubien&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de la Commune / King&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de Marseille / Viau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;du Mont-Royal / Augustin-Frigon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Émile-Duployé / Sherbrooke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gascon / de Rouen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hélène-Baillargeon / St-Denis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hutchison/ Prince-Arthur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LaSalle / Sénécal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lucien L&apos;Allier / St-Jacques&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McEachran / Van Horne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Métro Joliette  (Joliette / Hochelaga)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Métro St-Michel (Shaughnessy / St-Michel)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Omer-Lavallée / du Midway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peel / avenue des Canadiens de Montréal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rachel / de Brébeuf&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sherbrooke / Frontenac&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St-Cuthbert / St-Urbain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St-Urbain / René-Lévesque&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University / des Pins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;35e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bel Air / St-Antoine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bloomfield / Van Horne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cathcart / Union&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clark / Fleury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Darling / Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de Gaspé / de Liège&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de la Gauchetière / Robert-Bourassa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de Repentigny / Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;du Parc-La Fontaine / Duluth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fabre / St-Zotique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gauthier / Papineau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henri-Julien / Villeray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jardin Botanique (Pie-IX / Sherbrooke)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laval / Rachel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mansfield / Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mentana / Marie-Anne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Métro Longueuil - Université de Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Milton / du Parc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ottawa / St-Thomas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Place du Commerce&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rivard / Rachel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Square St-Louis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St-Dominique / Jean-Talon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ste-Catherine / Labelle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Victoria / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10e avenue / Masson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Argyle / Bannantyne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berlioz / de l&apos;Île des Soeurs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boyer / St-Zotique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chambord / Laurier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Complexe sportif Claude-Robillard (Émile-Journault)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de Bordeaux / Sherbrooke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de l&apos;Église / Bannantyne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de Lanaudière / Bélanger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Desjardins / Hochelaga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dunlop / Van Horne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fullum / Gilford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Boulevard / Sherbrooke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hôtel-de-Ville (du Champs-de-Mars / Gosford)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Ronde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Logan / de Champlain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marmier / St-Denis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Métro Bonaventure (de la Gauchetière / Mansfield)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Métro Pie-IX (Pierre-de-Coubertin / Pie-IX)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Napoléon /  St-Dominique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parc Père-Marquette (Chambord / Rosemont)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;President-Kennedy / Robert Bourassa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roy / St-Christophe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St-André / St-Antoine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St-Jacques / St-Laurent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Terrasse Mercure / Fullum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waverly / Fairmount&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7e avenue / St-Joseph&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alma / Beaubien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benny / de Monkland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boyer / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chambord / Beaubien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clark / St-Viateur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de Bordeaux / Marie-Anne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de Hampton / de Monkland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de la Roche / Fleury&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;des Érables / Rachel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Duluth / de l&apos;Esplanade&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fortune / Wellington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Godin / Bannantyne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hôpital Maisonneuve-Rosemont (Rosemont / Chatelain)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jogues / Allard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lincoln / Lambert Closse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marcil / Sherbrooke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metcalfe / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Métro Papineau (Cartier / Ste-Catherine)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozart / St-Laurent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parc J.-Arthur-Champagne (de Chambly / du Mont-Royal)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pontiac / Gilford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rouen / Fullum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St-André / Laurier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St-Germain / Hochelaga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ste-Famille / Sherbrooke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Villeneuve / du Parc&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4e avenue / Masson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alexandra / Jean Talon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bélanger / St-Denis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bourbonnière / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chabot / de Bellechasse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clark / Guilbault&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Davaar / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de Gaspé / Fairmount&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de la Montagne / Sherbrooke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de St-Vallier / St-Zotique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;du Parc-La Fontaine / Roy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faillon / St-Denis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gauvin / Notre-Dame&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hillside / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jean-Brillant / McKenna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Le Caron / Marc-Sauvalle &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mansfield / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Messier / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Métro Lucien-L&apos;Allier (Lucien l&apos;Allier / Argyle)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Milton / Durocher&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ottawa / William&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Place Jean-Paul Riopelle (Viger / de Bleury)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Robin / de la Visitation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Square Victoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St-Dominique / Maguire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ste-Catherine / McGill College&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria Hall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;16e avenue / St-Joseph&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Basile-Routhier / Gouin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Berri / Jean-Talon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cartier / Masson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHSLD Benjamin-Victor-Rousselot (Dickson / Sherbrooke)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cypress / Peel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de Chambly / Rachel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de Maisonneuve / Mansfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Drummond / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ellendale / de la Côte-des-Neiges&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Garnier / St-Joseph&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamel / Sauvé&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hutchison / Sherbrooke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LaSalle / 4e avenue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louis-Hébert / St-Zotique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette / St-Grégoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Métro Jean-Drapeau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Métro Sauvé (Berri / Sauvé)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Notre-Dame / St-Gabriel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Parthenais / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Queen / Wellington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sanguinet / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St-Charles / Sauvé&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St-Urbain / Beaubien&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Union / President-Kennedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wolfe / René-Lévesque&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1ère avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;26e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beaucourt / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Berri / St-Grégoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Casgrain / de Bellechasse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;City Councillors / du President-Kennedy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;d&apos;Oxford / de Monkland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de Clifton / Sherbrooke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de la Commune / McGill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de Mentana / Laurier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;du Mont-Royal / Clark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Émile-Journault / de Chateaubriand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gascon / Rachel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henri-Julien / de Castelnau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Island / Centre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laurier / 15e avenue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mackay / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McGill / des Récollets&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Métro Langelier (Sherbrooke / Langelier)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Métro Verdun (Willibrord / de Verdun)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ontario / du Havre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pierre-de-Coubertin / Aird&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Regina / de Verdun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Square Phillips&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St-Denis / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St-Zotique / 39e avenue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;15e avenue / Masson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aylwin / Ontario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Berri / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cartier / Bélanger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chauveau / de l&apos;Assomption&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crescent / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de Bullion / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Roy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de Maisonneuve / Aylmer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drolet / Laurier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Édouard-Montpetit (Université de Montréal)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gare Canora&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guizot / St-Laurent&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hutchison / Edouard Charles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laporte / St-Antoine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louis-Hébert / Belllechasse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marquette / Laurier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Métro Crémazie (Crémazie / Lajeunesse)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Métro Préfontaine (Moreau / Hochelaga)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Notre-Dame / de la Montagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Parthenais / Mont-Royal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Quai de la navette fluviale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sanguinet / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St-Charles / Charlotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St-Mathieu /Ste-Catherine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tupper / Atwater&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilderton  / Van Horne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5e avenue / Bannantyne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alexandra / Waverly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belmont / du Beaver Hall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bourgeoys / Favard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chabot / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clark / Laurier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Bellechasse / de St-Vallier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Gaspé / Jarry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de la Roche /  de Bellechasse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Vendôme / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;du Président-Kennedy / McGill College&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faillon / St-Hubert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georges-Vanier / Notre-Dame&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hochelaga / Chapleau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeanne d&apos;Arc / Ontario&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leman / de Chateaubriand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marché Atwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Messier / Hochelaga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Métro Monk (Allard / Beaulieu)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Milton / University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm / St-Remi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Place Longueuil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockland / Lajoie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St-Alexandre / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St-Dominique / Rachel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ste-Catherine / St-Denis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Viger / Jeanne Mance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10e Avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atwater / Sherbrooke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bernard / Clark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Briand / le Caron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Champagneur / Jean-Talon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congres&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de Bordeaux /Gilford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de l&apos;Église / de Verdun&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de Lanaudière / Gilford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dézéry / Ontario&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Durocher / Bernard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fullum / Jean Langlois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Trunk / Hibernia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hudson / de Kent&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lajeunesse / de Castelnau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Logan / Fullum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marquette / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Métro Cadillac (Sherbrooke / de Cadillac)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Métro Place St-Henri (St-Ferdinand / St-Jacques)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Natatorium (LaSalle / Rolland)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parc Plage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prince-Arthur / du Parc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy / St-Denis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St-André / St-Grégoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St-Jacques / St-Pierre&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tolhurst / Fleury&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waverly / St-Zotique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Augustin-Cantin / Shearer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bernard / Jeanne-Mance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Calixa-Lavallée / Rachel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapleau / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Côte St-Antoine / Clarke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de Brébeuf / Laurier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de l&apos;Esplanade / Fairmount&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de Lanaudière / Marie-Anne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dorion / Ontario&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duvernay / Charlevoix&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fullum / Sherbrooke &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greene / Workman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hutchison / Beaubien&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lajeunesse / Villeray (place Tapéo)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Louis Hémon / Rosemont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marquette / Fleury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Métro Charlevoix (Centre / Charlevoix)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Métro Place-d&apos;Armes (Viger / St-Urbain)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nazareth / William&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parc Rosemont (Dandurand / d&apos;Iberville)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prince-Arthur / St-Urbain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roy / St-Laurent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St-André / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St-Marc / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Towers / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Waverly / Van Horne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;16e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Basile-Routhier / Chabanel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Berri / Gilford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cartier / Marie-Anne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chomedey / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crescent / René-Lévesque&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de Bullion / St-Joseph&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de Maisonneuve / Greene&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Drolet / St-Zotique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Édouard-Montpetit / Stirling&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garnier / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guy / Notre-Dame&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hutchison / Fairmount&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Larivière / de Lorimier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Louis-Hébert / Jean-Talon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marquette / Rachel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Métro Georges-Vanier (St-Antoine / Canning)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Métro Rosemont (Rosemont / de St-Vallier)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Notre-Dame / Peel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Parthenais / St-Joseph&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Queen / Ottawa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sanguinet / Ontario&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St-Charles / Montarville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St-Nicolas / Place d&apos;Youville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tupper / du Fort&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wilson / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Basin / Richmond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Berri / Rachel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cartier / Rosemont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHSLD Éloria-Lepage (de la Pépinière / de Marseille)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;d&apos;Orléans / Hochelaga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de Champlain / Ontario&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de la Commune / Berri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de Maisonneuve / Robert-Bourassa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Drummond / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elsdale / Louis-Hébert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gary Carter / St-Laurent&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamilton / Jolicoeur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hutchison / Van Horne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LaSalle / Crawford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louis-Hémon / Villeray&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marquette / Villeray&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Métro Jolicoeur (Drake / de Sève)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Métro St-Laurent (de Maisonneuve / St-Laurent)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Notre-Dame-de-Grâce / Décarie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paul Boutet / des Regrattiers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quesnel / Vinet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shearer / Centre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St-Charles / St-Sylvestre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St-Urbain / de la Gauchetière&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Union / René-Lévesque&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wolfe / Robin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;8e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Angus (Molson / William-Tremblay)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Benny Crescent / Benny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boyer / Jean-Talon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chambord / Bélanger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Collège Édouard-Montpetit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de Bordeaux / Masson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de Kent / de la Côte-des-Neiges&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de la Roche / St-Joseph&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;des Seigneurs / Workman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Duluth / St-Denis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Francis / Fleury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gordon / Wellington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hôpital Santa Cabrini (St-Zotique / Jeanne-Jugan)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joliette / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lionel-Groulx / George-Vanier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marie-Anne / de la Roche&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Métro Acadie (de l&apos;Acadie / Beaumont)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Métro Parc  (Ogilvy / Hutchison)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muray / Notre-Dame&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parc Jeanne Mance (monument à sir George-Étienne Cartier)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poupart / Ontario&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rousselot / Jarry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St-André / Ontario&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St-Hubert / Rachel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stuart / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Villeneuve / St-Laurent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5e avenue / de Verdun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alexandre-de-Sève / la Fontaine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belmore / Sherbrooke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boyer / Beaubien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chabot / Everett&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clark / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de Bordeaux / Beaubien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de Gaspé / Marmier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de la Roche / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;des Érables / Bélanger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;du Rosaire / St-Hubert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairmount / St-Dominique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gilford / de Brébeuf&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hogan / Ontario&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeanne Mance / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lespérance / de Rouen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marché Jean-Talon (Henri-Julien / Jean-Talon)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Metcalfe / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Métro Mont-Royal (Rivard / du Mont-Royal)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Molson / Beaubien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papineau / René-Lévesque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plessis / Ontario&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ropery / Augustin-Cantin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St-André / Cherrier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St-Dominique / St-Viateur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ste-Catherine / Ste-Élisabeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ville-Marie / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1ère  avenue /St-Zotique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beaudry / Ontario&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bishop / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Casgrain / Mozart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clark / de Liège&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dandurand / de Lorimier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de Darlington / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de la Commune / Place Jacques-Cartier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de Monkland / Girouard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;du Mont-Royal / du Parc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ernest-Gendreau / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gatineau / Swail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henri-Julien / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jacques-Casault / Christophe-Colomb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Laurier / de Bordeaux&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maguire / Henri-Julien&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McGill / Place d&apos;Youville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Métro Lasalle (de Rushbrooke / Caisse)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Métro Villa-Maria (Décarie / de Monkland)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ontario / Sicard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre-de-Coubertin / Louis-Veuillot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Resther / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Square Sir-Georges-Étienne-Cartier / Léa Roback&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St-Dominique / Bernard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St-Zotique / Clark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vallières / St-Laurent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aylmer / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Berri / Cherrier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Calixa-Lavallée / Sherbrooke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlevoix / Lionel-Groulx&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cote St-Paul / St-Ambroise&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de Brébeuf / St-Grégoire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de l&apos;Esplanade / Laurier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de Liège / Lajeunesse&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drolet / Beaubien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eadie / Dubois&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fullum / St-Joseph&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guizot / St-Denis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hutchison / des Pins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lambert-Closse / Tupper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Louis-Hébert / Bélanger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marquette / Jean-Talon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Métro Côte-des-Neiges (Lacombe / de la Côte-des-Neiges)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Métro Place-des-Arts (de Maisonneuve / de Bleury)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Notre-Dame / Chatham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Row O / Sherbrooke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prince-Arthur / Ste-Famille&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ryde / Charlevoix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St-Antoine / St-François-Xavier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St-Mathieu / Sherbrooke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trans Island / Queen-Mary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Broadway / Sherbrooke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;9e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann / William&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bercy / Ontario&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boyer / Rosemont&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chambord / Jean-Talon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coloniale / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de Bordeaux / Rachel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de Kent / Victoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de la Salle / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Desjardins / de Rouen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Duluth / St-Laurent&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;François-Perrault / L.-O.-David&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gounod / St-Denis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hôtel-de-Ville 2 (du Champs-de-Mars / Gosford)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joseph-Manceau / René-Lévesque&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Logan / d&apos;Iberville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marie-Anne / St-Hubert&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Métro Angrignon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Métro Peel (de Maisonneuve / Stanley)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Murray / William&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Parc Outremont (Bloomfield / Elmwood)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poupart / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rousselot / Villeray&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St-André / Robin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St-Jacques / Gauvin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Terrasse Guindon / Fullum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Villeneuve / St-Urbain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2e avenue / Wellington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;30e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beaudry / Sherbrooke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bloomfield / Bernard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Casino de Montréal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clark / Evans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dandurand / Papineau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de Gaspé / Dante&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de la Commune / St-Sulpice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de Montmorency / Richardson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;du Mont-Royal / Vincent-d&apos;Indy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fabre / Beaubien&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gauthier / De Lorimier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Henri-Julien / Jarry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jacques-Le Ber / de la Pointe Nord&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laval / Duluth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mansfield / René-Lévesque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McKenna / Édouard-Montpetit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Métro Laurier (Rivard / Laurier)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milton / Clark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ontario / Viau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Place de la paix (Pl. du marché / St-Dominique)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Resther / St-Joseph&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Square Sir-Georges-Etienne-Cartier / Ste-Émilie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St-Dominique / Gounod&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ste-Catherine / Dézéry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valois / Ontario&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_961518585438228492:ok:3]' type='palette'>
            <map to='#499894'>
              <bucket>0.0069603953504559059</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.0074877750611246942</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.0092787047997250748</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.0096724089240327587</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.010037730476258276</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.010445299615173173</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.010750750750750751</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.011271277411439963</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.011892270024484085</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.012009803921568628</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.012385692788517189</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.012796469939327083</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.012914453196556146</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.013024282560706401</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.013500107828337287</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.013880771478667446</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.014137995863884189</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.014675363178179662</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.014858233369683751</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.015526464576175358</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.01574682770218621</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.016297895304910954</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.016414661410837205</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.016978136069378282</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.017188157710116458</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.018009572210983371</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.018676733558513809</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.019010585439619788</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.019794980558501239</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.020390509144834406</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.021297509829619921</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.021775147928994081</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.022568093385214007</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.022898266274124959</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.024297646165527716</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.025378632828489563</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.025436261461106183</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.025820220957482425</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.028109627547434995</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.032517061421116017</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.033005694389031955</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.036280846063454761</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.03760078986341945</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.042381974248927042</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.050246747420367881</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.05160575858250277</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.065371488579679712</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.074910424131322387</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.11062138443980953</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.13134907796829506</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.0021960401561628554</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.005910755910755911</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.008881922675026124</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.0096102509343299527</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.010126171007743542</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.010552301660293334</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.010999548736462094</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.011112711213517664</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.011611030478955007</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.011639762107051827</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.012180210684725357</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.012385818238117356</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.012761921186513753</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.01284480943356496</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.013208890295024915</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.013470106724691741</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.013791713454838617</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.014282351094718669</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.014584949573312645</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.015296577528337185</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.0159930212271009</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.016046018770814411</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.016739772625548294</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.01690038244399927</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.017435191557696718</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.017562853362203777</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.018365567126660851</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.018765001090988435</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.019320127170457325</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.019704433497536946</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.020745131244707875</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.020967741935483872</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.022271906440794565</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.022434099831744252</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.023809523809523808</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.024909040022390149</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.025233459169481422</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.027194656488549619</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.027757307786784573</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.030264617334812234</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.030374753451676527</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.034787915776624961</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.034808552958727</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.039124668435013263</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.044889586098708821</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.048959608323133418</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.061667301103920824</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.073805202661826982</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.082864450127877243</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.092410794333871255</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.0065951263134361726</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.0066825775656324578</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.0085345747260207553</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.0089586050662456233</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.010211524434719184</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.010744050607490712</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.011146496815286623</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.011366327255505565</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.011807294133567901</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.01189801699716714</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.012287915307906801</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.012488250302135087</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.012826465467208358</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.012917719741645605</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.013290747990933443</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.013602251407129456</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.013950538998097653</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.014418921992267455</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.01472376063757936</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.015399422521655439</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.016068240428486411</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.016146393972012917</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.016817939135077415</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.017087931648273408</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.017557489123679305</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.017835378240026002</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.018505586592178772</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.018850574712643679</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.019549370444002651</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.020050774571265736</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.021154133652264914</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.021397105097545627</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.022661396574440051</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.023298309730470534</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.023996082272282077</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.025227230569467633</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.025525766575694334</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.027829028290282904</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.028044871794871796</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.031584062196307092</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.032445990775952747</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.035745550043770058</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.040473463153875525</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.040750323415265202</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.049570853039061134</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.049622437971952538</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.064258423063563733</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.06469849246231156</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.09714937286202964</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.10997442455242967</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.0078326060199171987</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.0083612808379657285</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.0091843088418430887</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.0095033171956248885</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.010165794066317627</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.010631484565133855</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.011346511834057264</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.011374354990845031</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.011463250168577209</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.01199069378989441</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.012512187195320117</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.012604663725578464</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.013008976193573565</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.013446316216764766</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.01352293862368258</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.013987192450286484</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.014209445585215606</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.014844582957434594</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.014909720955681197</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.015651582170806397</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.015864527629233512</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.016416269695859288</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.016427889207258836</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.017094017094017096</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.017270687427755491</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.018011695906432749</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.018107517790460086</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.019080659150043366</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.019098967376405009</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.020530145530145531</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.021541860648623058</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.022194585286520616</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.023099769002309978</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.023496819207880156</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.02434705621956618</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.024575695858791581</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.026188752111996137</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.028490028490028491</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.029197080291970802</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.033540708682715713</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.033661315380631794</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.03668440212825539</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.040847665847665846</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.043120344962759703</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.044751381215469614</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.053860819828408006</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.053966789667896677</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.071983947830448966</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.14725483973341796</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.26923392052437528</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.007269869338834856</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.0077587092796218273</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.0093018043258993616</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.0096903949293027786</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.010057315886233374</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.010481602030120813</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.011289282093816239</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.011341222879684419</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.011937876680574873</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.012016704836319548</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.012468030690537084</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.012586363879813614</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.012915706523285254</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.0130388721375601</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.013502896985171363</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.013888888888888888</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.014149302199713922</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.014875327683960252</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.015331244404655327</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.015610803667299909</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.015836230204712243</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.016325027617527924</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.016415523192187895</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.017198120523698738</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.017603170902308229</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.018020022246941044</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.0188646288209607</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.019031507718333687</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.019837126748799332</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.020481927710843374</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.021354367064255482</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.021854695806261076</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.022918685250055901</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.02332469455757127</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.02409136378792931</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.024311183144246355</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.025844101709045435</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.025881640684122902</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.028268925357331921</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.032726192833102359</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.033083484104419747</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.036299172716528785</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.037806011775643009</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.042386609071274298</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.042553191489361701</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.051695136108412899</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.052176339285714288</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.067048242027800492</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.12631578947368421</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.13171080887616321</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.00721636546184739</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0083841463414634151</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0087050240424473551</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0089801317764379666</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0097653403293980461</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.010266370699223086</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.011154979006078838</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.011278195488721804</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.011833333333333333</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.011903663375472917</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.012319950965369293</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.012522686025408349</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.012845215157353885</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.012918765053645719</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.013395931142410016</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.013633980073413739</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.014026273093630607</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.014542621567227163</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.014739418210134045</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.015451049186964442</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.015596793992346017</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.016137555383927481</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.016937075202806403</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.017093109671939697</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.017590936195587357</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.017866304511845482</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.018582243633860976</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.019045005488474206</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.019594023118127996</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.02028155571462658</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.021413797298941478</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.022002200220022004</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.022469410456062291</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.022721893491124259</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.024103831891223733</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.025276582667486169</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.02572741194486983</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.027837259100642397</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.028563348416289592</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.031588962892483349</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.032456631225517625</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.035866261398176294</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.03717472118959108</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.041582150101419878</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.04171074505062717</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.050161812297734629</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0647870425914817</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.06513324731948214</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.10006949270326616</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.1115819209039548</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.0081667741242209321</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.0088035214085634261</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.0095611669526844811</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.0099424693907655994</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.010523499509497904</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.010849155017734195</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.011049723756906077</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.011533708636550871</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.01157080390178271</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.01211340206185567</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.012347335928063348</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.0127420998980632</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.012829802651208389</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.013130782594642641</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.013743864346273985</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.01424346201743462</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.014482651796778191</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.015109391998065998</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.015199668370871909</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.015910671193095832</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.015949493271307527</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.016690397089068186</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.016775204022751629</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.01728276524243879</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.017542320849048328</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.018311664530305805</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.018488308863512777</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.019225795327183378</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.019629372353059806</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.020706834812392962</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.020751879699248119</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.02214943066604274</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.02236319206180732</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.023740858996807085</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.024599765716516987</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.024901703800786368</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.027106899011515338</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.028515240904621434</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.029918576027267562</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.029923723841189125</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.034568547859106978</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.038487357350637727</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.040019286403085823</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.044579533941236066</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.046720835751596052</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.058786741713570984</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.059441526126624275</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.07783018867924528</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.080733944954128445</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.23311092577147624</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.0052562417871222077</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.0062546537602382723</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.0089076077747924382</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.0096547955187175523</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.010134952035120048</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.010737790093522688</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.011002366788204439</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.011196067722555981</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.011647781224283092</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.011674259681093395</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.012191040780226609</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.012389380530973451</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.012762871646120376</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.012885204541358804</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.013241409498796236</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.013470980737756514</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.013867791339778758</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.014300708475465758</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.014660493827160493</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.015345005149330586</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.016005007153075821</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.01604744461887319</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.016741911211437172</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.016925426317129042</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.017654986522911052</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.01774860199367858</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.018393981268232766</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.018788658872322929</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.019380820538635792</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.019713583797711067</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.02088698140200286</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.020999353866034891</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.02246298302636331</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.023115773115773116</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.023818862542342664</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.025000000000000001</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.02538339502908514</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.027323280932520587</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.027929373996789728</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.031050429420832415</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.031431897555296857</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.034869739478957919</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.035044957209403101</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.039795259614497834</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.049351797289334122</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.051516886090440757</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.061810154525386317</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.061951754385964911</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.090180360721442893</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.092772384034519956</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.0081623134328358202</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.008665934334187721</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.0094540092805412198</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.0096640071918193057</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.010473513036767542</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.010754681995178936</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.010960930670432386</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.011467889908256881</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.011511029522405129</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.012075075469221683</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.012269938650306749</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.012613337233109097</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.013103660412180867</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.013363782457921001</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.013615566947797806</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.014114326040931546</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.014354066985645933</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.01507537688442211</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.015127598000526177</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.015859974995534917</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.015931232091690544</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.016670941266991535</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.016679984019176988</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.017179970668342762</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.01747742499271774</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.018231950931292554</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.018388791593695272</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.019152404237978812</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.019400608078760678</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.020695144600689837</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.021887436043206369</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.022290354656943984</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.023391812865497075</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.023514211886304908</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.024547483263079595</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.024620609147829778</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.026599113362887904</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.0270003292723082</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.02933088909257562</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.029893014474512272</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.034372135655362054</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.03813327727559386</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.039256597503960433</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.043751872939766255</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.046354297168629419</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.057899901864573111</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.07170542635658915</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.07513555383423702</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.078107810781078105</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.20060180541624875</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.0067883374137547295</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.007306929923432702</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.0087250211089220375</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.0090544560858879831</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.0099547511312217188</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.01030084100016933</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.011199037438104494</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.011306532663316583</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.011869972584581086</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.011948858883976581</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.012337824006196575</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.012522958757722491</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.012892376681614351</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.012954766274425131</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.013426853707414829</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.013691295701392076</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.014071294559099437</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.014580571861389889</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.014780266701701373</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.015453981115431111</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.015689512799339389</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.016212438853948286</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.016273732526601293</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.017130620985010708</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.01760130986492018</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.017927517193416273</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.018674019300664244</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.018906381782400901</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.020202756910509809</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.020377358490566037</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.021218343600273786</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.021463119709794438</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.022543352601156069</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.022836154583200256</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.023626879410862226</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.024133663366336634</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.025733289717588051</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.027928238204076521</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.028648903560481019</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.031733594515181193</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.034406623735050601</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.036115569823434994</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.037257438551099614</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.041952400161355388</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.042021276595744679</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.050524170064065232</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.065146579804560262</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.065312192785662068</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.10818065118450228</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.11856017997750282</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.0079805690492713386</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.0084340736575766097</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.0093187660668380464</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.0095460984171952951</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.010689655172413793</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.010691209966067029</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.010855949895615866</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.011492628703311195</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.012002743484224965</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.012101421436803688</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.012526900716281758</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.01269130272489735</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.013012644677861777</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.013288800454803866</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.013544536271808998</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.014029152778468734</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.014229662568663353</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.014993710691823899</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.015351157733145708</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.015681719181065777</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.015867958195258731</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.016444061467758151</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.016493748337323755</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.017128205128205128</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.017399999999999999</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.018148403399954053</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.018165900634712191</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.019109850819874246</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.019291161956034097</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.020546017450042219</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.021773430104133795</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.022212729602733874</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.02283356258596974</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.02315879097488293</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.024356103023516238</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.024583062594758502</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.026215644820295984</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.026586102719033233</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.028706252457727094</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.029228023203926819</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.033572635135135136</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.036997319034852545</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.038793103448275863</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.043248438250840938</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.0449438202247191</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.054275473630312342</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.054417788180222353</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.072489082969432309</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.17917179171791717</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.189</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.0080701919016562661</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.0085939365003580813</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.009348576872692629</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.0095588235294117654</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.010214439791904581</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.010712340374024088</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.010875898232666537</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.011409013120365089</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.011507528191344155</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.012039747660083288</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.012164933870853668</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.012568989306657468</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.013018200202224469</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.013325005205080159</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.013578138343296327</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.01402940779711318</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.014324114027021292</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.015031035061231338</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.015036150745409175</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.015696811143321783</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.015889393314073463</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.016513956957170253</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.016584887144259076</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.017163504968383016</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.017426659804426144</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.018188854489164085</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.018259935553168637</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.019119496855345912</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.019302371154223005</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.020310809481656339</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.020585472761427678</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.02227342549923195</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.022844011895106785</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.023179380729977512</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.024422442244224421</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.024604869713797523</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.026261268828041882</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.026789768427425458</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.029021387800013756</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.029717411121239743</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.033809340023157081</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.038020247469066369</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.03881915388191539</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.043256997455470736</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.0452510016497761</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.054738562091503268</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.057546429505623858</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.074045917591607113</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.18464763747782617</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.0081642454076119586</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.0087231216570341392</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.0094801223241590214</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.0098260732489096735</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.010485810485810486</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.010772913816689466</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.011046309528407555</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.011485715801480145</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.011562760758135653</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.012075775491207325</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.012681772066283395</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.012723289518031682</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.013118793940711748</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.013383709016393443</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.013636363636363636</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.014131701631701632</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.014452817455854234</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.015107804433647131</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.015157116451016635</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.015894039735099338</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.015943221559349928</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.016676593210244194</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.01675424567816617</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.017221873035826524</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.017527087316762269</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.018260155929421418</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.018476903870162296</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.019216735587448311</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.019565914679781887</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.020652898067954697</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.020723504817305945</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.022293782511766162</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.023003194888178913</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.023424657534246576</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.024564264600958109</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.024753867791842476</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.026690811747106528</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.027110289587184228</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.029881055990716564</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.029910842680471672</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.034556213017751476</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.038197621225983532</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.041362530413625302</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.044388992373387691</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.046637116978223161</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.058333333333333334</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.059006211180124224</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.077071290944123308</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.078579117330462869</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.20434616850934045</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.0081923180230996512</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.0088359865634584488</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.0095839440748675155</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.0099861729912428948</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.010546623794212218</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.01093611866016175</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.011073613161780215</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.011581834806461445</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.012147702438055233</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.01214895677436394</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.012379550321199143</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.012752858399296393</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.012829845313921747</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.013177252435064936</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.013767900395189733</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.01427994072477435</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.01450199203187251</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.015230267134050526</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.015267175572519083</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.015956708755376716</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.016039823008849558</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.016693049359620089</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.016778523489932886</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.017344570660803714</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.017547117259307399</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.018357260531889855</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.018585407499835817</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.0192466318394281</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.019658753709198812</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.020762964434730777</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.021953896816684963</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.022149562282459657</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.022388059701492536</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.023742026931254431</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.024788391777509067</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.025063594194224152</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.02710843373493976</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.027601399507580667</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.030123339658444024</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.030194805194805194</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.034703504043126686</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.034730992674917908</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.038932419196865818</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.044750430292598967</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.046747175691468641</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.06006006006006006</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.060227889310906134</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.08720165382446908</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.2166724078539442</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.30196707589285715</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.0074312608372553877</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.0079691650606802441</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.009007219021127227</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.0093295185968404037</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.010080300700495473</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.010486349665521606</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.011341683803826261</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.011382918552036199</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.011948908117016894</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.012017821550005862</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.012483777269637229</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.01259360108917631</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.012931726907630522</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.013091933546008204</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.013521545319465082</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.013916690496616146</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.014162505674080799</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.014877102199223804</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.015350877192982455</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.015621910223452639</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.01584979273347964</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.016380617084739132</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.016420212283407423</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.017042086544161231</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.017262963695064901</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.01783166904422254</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.018090791817679218</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.019029374201787994</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.020129487934078871</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.020517603170902309</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.021374045801526718</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.021960442117510179</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.022613372448355946</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.0230020642878207</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.024332029437114631</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.025380710659898477</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.025950085082246173</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.025992664646786796</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.028295376121463076</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.033135509396636995</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.033210627400768244</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.036453201970443348</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.038240649950973524</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.042436687200547572</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.043041293423639937</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.052076777847702961</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.067392067392067392</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.071074380165289261</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.13760324139005767</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.13766233766233765</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.0068223563369194436</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.0073693907093038561</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.008870618779749026</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.0091330195225324904</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.010020331106593087</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.010376260667183864</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.011214615175906665</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.011335138930685124</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.011872048662060134</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.011962572545303802</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.012344004340748779</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.012537729277919666</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.012894165709179114</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.013019500824378874</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.013435225808131435</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.013862380713209442</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.014083783089180159</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.014601644457045648</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.014801378559767821</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.015506807866868382</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.015740616171128749</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.01624108995759271</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.016281997482165338</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.016975537435137137</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.017164790615431059</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.017980267418384061</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.018675995694294942</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.018907563025210083</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.019726623174899038</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.020387243735763099</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.021223571026609857</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.021733730750124192</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.02255741269194184</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.022842903125324474</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.023732470334412083</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.024290313140181447</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.025744670612578797</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.028046421663442941</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.028140799389487742</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.032329988851727984</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.03256846780162842</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.036249342912213073</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.037540942302847068</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.042270531400966184</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.050136809914694998</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.051505858299913498</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.06534382483749572</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.073830155979202769</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.11033468186833395</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.22994512673112097</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.0053244592346089852</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.0066019863367587119</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.0084007272271330955</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.0089190911021448296</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.010140231988722083</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.010624279360896063</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.011085274179062242</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.011198395453785726</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.011701416327274937</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.011879758466789184</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.012261014131338321</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.012420022581859239</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.012767402376910018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.01289068494552151</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.013255392721883748</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.013503004595263345</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.013881859590774348</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.014326219967169079</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.014677180107736748</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.015356614719599591</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.016055314660728934</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.016062823487417454</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.016751503933364182</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.016985710434079267</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.017530190884300741</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.017765848670756645</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.01839506172839506</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.018795888399412628</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.019400900201769364</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.019940915805022157</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.020897185845639453</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.021132272371510566</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.022364217252396165</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.022555690185478608</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.023841354723707665</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.025078369905956112</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.025440613026819922</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.027349973446627721</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.02800982800982801</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.031369294605809131</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.034342848862483698</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.035300816094135511</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.039974619289340103</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.040266328471781868</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.049077891082664353</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.049431076291736618</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.061979648473635525</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.063270063270063265</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.093253968253968256</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.093589304079533767</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.0080843306649758268</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.0086340491476643785</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.0094193468426597253</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.0095656343858055073</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.010239471511147812</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.010744950121594123</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.010894350139346339</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.011466058185966913</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.011507979589621105</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.012052730696798493</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.01258379395507468</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.012703739213806327</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.013070127997115558</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.013340796716111578</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.013580741079597438</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.014036350548857298</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.014327971898687373</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.015039457918439863</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.015537428555574053</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.015795293002685201</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.016173570019723867</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.016521123436393673</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.01667157970587272</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.01717557251908397</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.017450682852807285</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.018199977804905117</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.018333333333333333</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.019122609673790775</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.01932707143437187</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.020678959159055661</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.021873047049370591</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.022281313038694298</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.022915843540102725</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.023203760352159965</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.024422567209390383</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.024606759071795669</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.026315789473684209</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.026889040163376447</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.029873321989033842</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.033854586490407866</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.034030683403068342</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.038107029852799561</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.040911699598261866</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.043359694573220614</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.046105919003115267</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.057569818716315529</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.057956777996070727</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.074937027707808565</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.077064220183486243</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.19320843091334894</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.0074678707884682184</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.0082012430583649001</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.0091703293721851434</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.0093765564434050118</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.010089876208241479</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.010611956137247965</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.010823689584751531</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.011455239711497667</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.011984591239834499</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.012046908315565033</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.012502332524724762</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.012597241867043847</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.012999452654625068</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.01317492955601249</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.013522884882108182</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.013926842919698416</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.014166571461213298</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.014725916315277327</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.014899822470200354</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.015640720753681513</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.015860075594752835</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.01638394704178734</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.016426615879062016</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.017269119382173119</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.017680973734785395</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.017997184797908707</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.018103951722795407</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.019050593379138038</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.020186915887850466</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.020528151469855507</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.021430822565395524</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.021966527196652718</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.022652757078986587</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.023004325599685412</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.02430824928885441</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.0244745177080334</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.02606516290726817</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.026185627000290951</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.028445586346118552</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.03324646051982813</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.033358042994810974</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.036545528787260105</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.038245219347581551</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.042682926829268296</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.044710578842315371</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.052377670572019294</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.052887364208118924</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.070292887029288709</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.14369501466275661</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.15205047318611986</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.0066104617742862616</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.0083358142304257223</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.0084652189915347814</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.0089294904786412759</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.010160118320365249</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.010624625139233998</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.011141796019426721</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.011213905242500702</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.011786194299893166</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.011883956658511011</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.012275731822474031</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.012486273233822752</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.012806999051333404</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.012896825396825396</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.013258826517653035</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.013527758257203091</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.01391793466503209</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.014694607717863533</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.015317919075144508</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.01536983669548511</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.016063312960351041</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.016126770438928621</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.016791979949874688</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.017061107976233943</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.017556279201472461</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.017834714895754836</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.01844872049196588</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.018850141376060319</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.01953125</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.019997872566748218</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.020898641588296761</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.021210952564596992</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.022594614950103557</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.023235923022095508</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.023983039618391412</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.025142560912389839</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.025462962962962962</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.027377118050693181</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.028028412363217507</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.031388012618296532</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.032033847083711091</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.035498612697894567</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.036184210526315791</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.040134033965425329</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.04945316214931051</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.052004648460197561</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.062639821029082776</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.063740040618653335</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.094058011827654178</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.10183496482673912</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_961518585438228492:ok:6]' type='palette'>
            <map to='#499894'>
              <bucket>0.0069603953504559059</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.0074877750611246942</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.0092787047997250748</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.0096724089240327587</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.010037730476258276</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.010445299615173173</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.010750750750750751</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.011271277411439963</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.011892270024484085</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.012009803921568628</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.012385692788517189</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.012796469939327083</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.012914453196556146</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.013024282560706401</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.013500107828337287</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.013880771478667446</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.014137995863884189</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.014675363178179662</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.014858233369683751</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.015526464576175358</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.01574682770218621</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.016297895304910954</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.016414661410837205</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.016978136069378282</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.017188157710116458</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.018009572210983371</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.018676733558513809</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.019010585439619788</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.019794980558501239</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.020390509144834406</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.021297509829619921</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.021775147928994081</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.022568093385214007</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.022898266274124959</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.024297646165527716</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.025378632828489563</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.025436261461106183</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.025820220957482425</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.028109627547434995</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.032517061421116017</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.033005694389031955</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.036280846063454761</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.03760078986341945</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.042381974248927042</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.050246747420367881</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.05160575858250277</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.065371488579679712</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.074910424131322387</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.11062138443980953</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.13134907796829506</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.0021960401561628554</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.005910755910755911</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.008881922675026124</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.0096102509343299527</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.010126171007743542</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.010552301660293334</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.010999548736462094</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.011112711213517664</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.011611030478955007</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.011639762107051827</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.012180210684725357</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.012385818238117356</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.012761921186513753</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.01284480943356496</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.013208890295024915</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.013470106724691741</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.013791713454838617</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.014282351094718669</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.014584949573312645</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.015296577528337185</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.0159930212271009</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.016046018770814411</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.016739772625548294</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.01690038244399927</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.017435191557696718</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.017562853362203777</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.018365567126660851</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.018765001090988435</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.019320127170457325</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.019704433497536946</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.020745131244707875</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.020967741935483872</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.022271906440794565</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.022434099831744252</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.023809523809523808</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.024909040022390149</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.025233459169481422</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.027194656488549619</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.027757307786784573</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.030264617334812234</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.030374753451676527</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.034787915776624961</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.034808552958727</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.039124668435013263</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.044889586098708821</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.048959608323133418</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.061667301103920824</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.073805202661826982</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.082864450127877243</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.092410794333871255</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.0065951263134361726</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.0066825775656324578</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.0085345747260207553</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.0089586050662456233</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.010211524434719184</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.010744050607490712</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.011146496815286623</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.011366327255505565</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.011807294133567901</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.01189801699716714</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.012287915307906801</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.012488250302135087</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.012826465467208358</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.012917719741645605</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.013290747990933443</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.013602251407129456</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.013950538998097653</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.014418921992267455</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.01472376063757936</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.015399422521655439</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.016068240428486411</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.016146393972012917</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.016817939135077415</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.017087931648273408</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.017557489123679305</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.017835378240026002</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.018505586592178772</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.018850574712643679</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.019549370444002651</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.020050774571265736</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.021154133652264914</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.021397105097545627</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.022661396574440051</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.023298309730470534</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.023996082272282077</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.025227230569467633</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.025525766575694334</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.027829028290282904</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.028044871794871796</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.031584062196307092</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.032445990775952747</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.035745550043770058</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.040473463153875525</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.040750323415265202</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.049570853039061134</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.049622437971952538</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.064258423063563733</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.06469849246231156</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.09714937286202964</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.10997442455242967</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.0078326060199171987</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.0083612808379657285</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.0091843088418430887</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.0095033171956248885</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.010165794066317627</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.010631484565133855</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.011346511834057264</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.011374354990845031</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.011463250168577209</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.01199069378989441</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.012512187195320117</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.012604663725578464</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.013008976193573565</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.013446316216764766</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.01352293862368258</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.013987192450286484</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.014209445585215606</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.014844582957434594</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.014909720955681197</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.015651582170806397</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.015864527629233512</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.016416269695859288</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.016427889207258836</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.017094017094017096</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.017270687427755491</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.018011695906432749</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.018107517790460086</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.019080659150043366</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.019098967376405009</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.020530145530145531</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.021541860648623058</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.022194585286520616</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.023099769002309978</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.023496819207880156</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.02434705621956618</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.024575695858791581</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.026188752111996137</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.028490028490028491</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.029197080291970802</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.033540708682715713</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.033661315380631794</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.03668440212825539</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.040847665847665846</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.043120344962759703</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.044751381215469614</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.053860819828408006</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.053966789667896677</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.071983947830448966</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.14725483973341796</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.26923392052437528</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.007269869338834856</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.0077587092796218273</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.0093018043258993616</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.0096903949293027786</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.010057315886233374</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.010481602030120813</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.011289282093816239</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.011341222879684419</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.011937876680574873</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.012016704836319548</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.012468030690537084</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.012586363879813614</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.012915706523285254</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.0130388721375601</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.013502896985171363</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.013888888888888888</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.014149302199713922</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.014875327683960252</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.015331244404655327</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.015610803667299909</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.015836230204712243</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.016325027617527924</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.016415523192187895</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.017198120523698738</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.017603170902308229</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.018020022246941044</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.0188646288209607</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.019031507718333687</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.019837126748799332</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.020481927710843374</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.021354367064255482</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.021854695806261076</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.022918685250055901</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.02332469455757127</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.02409136378792931</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.024311183144246355</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.025844101709045435</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.025881640684122902</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.028268925357331921</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.032726192833102359</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.033083484104419747</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.036299172716528785</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.037806011775643009</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.042386609071274298</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.042553191489361701</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.051695136108412899</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.052176339285714288</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.067048242027800492</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.12631578947368421</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.13171080887616321</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.00721636546184739</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0083841463414634151</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0087050240424473551</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0089801317764379666</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0097653403293980461</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.010266370699223086</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.011154979006078838</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.011278195488721804</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.011833333333333333</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.011903663375472917</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.012319950965369293</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.012522686025408349</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.012845215157353885</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.012918765053645719</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.013395931142410016</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.013633980073413739</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.014026273093630607</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.014542621567227163</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.014739418210134045</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.015451049186964442</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.015596793992346017</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.016137555383927481</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.016937075202806403</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.017093109671939697</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.017590936195587357</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.017866304511845482</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.018582243633860976</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.019045005488474206</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.019594023118127996</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.02028155571462658</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.021413797298941478</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.022002200220022004</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.022469410456062291</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.022721893491124259</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.024103831891223733</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.025276582667486169</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.02572741194486983</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.027837259100642397</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.028563348416289592</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.031588962892483349</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.032456631225517625</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.035866261398176294</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.03717472118959108</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.041582150101419878</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.04171074505062717</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.050161812297734629</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0647870425914817</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.06513324731948214</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.10006949270326616</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.1115819209039548</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.0081667741242209321</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.0088035214085634261</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.0095611669526844811</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.0099424693907655994</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.010523499509497904</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.010849155017734195</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.011049723756906077</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.011533708636550871</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.01157080390178271</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.01211340206185567</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.012347335928063348</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.0127420998980632</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.012829802651208389</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.013130782594642641</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.013743864346273985</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.01424346201743462</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.014482651796778191</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.015109391998065998</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.015199668370871909</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.015910671193095832</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.015949493271307527</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.016690397089068186</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.016775204022751629</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.01728276524243879</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.017542320849048328</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.018311664530305805</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.018488308863512777</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.019225795327183378</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.019629372353059806</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.020706834812392962</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.020751879699248119</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.02214943066604274</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.02236319206180732</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.023740858996807085</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.024599765716516987</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.024901703800786368</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.027106899011515338</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.028515240904621434</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.029918576027267562</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.029923723841189125</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.034568547859106978</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.038487357350637727</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.040019286403085823</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.044579533941236066</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.046720835751596052</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.058786741713570984</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.059441526126624275</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.07783018867924528</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.080733944954128445</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.23311092577147624</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.0052562417871222077</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.0062546537602382723</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.0089076077747924382</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.0096547955187175523</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.010134952035120048</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.010737790093522688</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.011002366788204439</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.011196067722555981</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.011647781224283092</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.011674259681093395</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.012191040780226609</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.012389380530973451</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.012762871646120376</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.012885204541358804</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.013241409498796236</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.013470980737756514</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.013867791339778758</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.014300708475465758</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.014660493827160493</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.015345005149330586</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.016005007153075821</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.01604744461887319</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.016741911211437172</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.016925426317129042</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.017654986522911052</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.01774860199367858</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.018393981268232766</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.018788658872322929</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.019380820538635792</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.019713583797711067</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.02088698140200286</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.020999353866034891</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.02246298302636331</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.023115773115773116</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.023818862542342664</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.025000000000000001</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.02538339502908514</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.027323280932520587</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.027929373996789728</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.031050429420832415</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.031431897555296857</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.034869739478957919</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.035044957209403101</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.039795259614497834</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.049351797289334122</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.051516886090440757</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.061810154525386317</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.061951754385964911</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.090180360721442893</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.092772384034519956</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.0081623134328358202</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.008665934334187721</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.0094540092805412198</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.0096640071918193057</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.010473513036767542</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.010754681995178936</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.010960930670432386</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.011467889908256881</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.011511029522405129</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.012075075469221683</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.012269938650306749</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.012613337233109097</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.013103660412180867</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.013363782457921001</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.013615566947797806</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.014114326040931546</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.014354066985645933</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.01507537688442211</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.015127598000526177</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.015859974995534917</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.015931232091690544</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.016670941266991535</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.016679984019176988</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.017179970668342762</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.01747742499271774</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.018231950931292554</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.018388791593695272</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.019152404237978812</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.019400608078760678</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.020695144600689837</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.021887436043206369</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.022290354656943984</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.023391812865497075</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.023514211886304908</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.024547483263079595</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.024620609147829778</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.026599113362887904</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.0270003292723082</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.02933088909257562</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.029893014474512272</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.034372135655362054</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.03813327727559386</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.039256597503960433</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.043751872939766255</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.046354297168629419</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.057899901864573111</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.07170542635658915</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.07513555383423702</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.078107810781078105</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.20060180541624875</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.0067883374137547295</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.007306929923432702</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.0087250211089220375</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.0090544560858879831</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.0099547511312217188</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.01030084100016933</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.011199037438104494</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.011306532663316583</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.011869972584581086</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.011948858883976581</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.012337824006196575</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.012522958757722491</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.012892376681614351</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.012954766274425131</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.013426853707414829</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.013691295701392076</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.014071294559099437</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.014580571861389889</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.014780266701701373</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.015453981115431111</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.015689512799339389</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.016212438853948286</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.016273732526601293</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.017130620985010708</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.01760130986492018</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.017927517193416273</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.018674019300664244</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.018906381782400901</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.020202756910509809</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.020377358490566037</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.021218343600273786</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.021463119709794438</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.022543352601156069</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.022836154583200256</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.023626879410862226</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.024133663366336634</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.025733289717588051</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.027928238204076521</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.028648903560481019</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.031733594515181193</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.034406623735050601</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.036115569823434994</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.037257438551099614</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.041952400161355388</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.042021276595744679</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.050524170064065232</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.065146579804560262</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.065312192785662068</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.10818065118450228</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.11856017997750282</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.0079805690492713386</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.0084340736575766097</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.0093187660668380464</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.0095460984171952951</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.010689655172413793</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.010691209966067029</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.010855949895615866</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.011492628703311195</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.012002743484224965</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.012101421436803688</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.012526900716281758</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.01269130272489735</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.013012644677861777</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.013288800454803866</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.013544536271808998</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.014029152778468734</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.014229662568663353</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.014993710691823899</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.015351157733145708</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.015681719181065777</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.015867958195258731</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.016444061467758151</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.016493748337323755</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.017128205128205128</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.017399999999999999</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.018148403399954053</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.018165900634712191</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.019109850819874246</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.019291161956034097</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.020546017450042219</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.021773430104133795</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.022212729602733874</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.02283356258596974</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.02315879097488293</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.024356103023516238</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.024583062594758502</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.026215644820295984</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.026586102719033233</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.028706252457727094</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.029228023203926819</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.033572635135135136</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.036997319034852545</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.038793103448275863</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.043248438250840938</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.0449438202247191</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.054275473630312342</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.054417788180222353</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.072489082969432309</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.17917179171791717</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.189</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.0080701919016562661</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.0085939365003580813</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.009348576872692629</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.0095588235294117654</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.010214439791904581</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.010712340374024088</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.010875898232666537</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.011409013120365089</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.011507528191344155</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.012039747660083288</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.012164933870853668</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.012568989306657468</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.013018200202224469</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.013325005205080159</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.013578138343296327</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.01402940779711318</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.014324114027021292</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.015031035061231338</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.015036150745409175</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.015696811143321783</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.015889393314073463</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.016513956957170253</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.016584887144259076</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.017163504968383016</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.017426659804426144</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.018188854489164085</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.018259935553168637</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.019119496855345912</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.019302371154223005</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.020310809481656339</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.020585472761427678</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.02227342549923195</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.022844011895106785</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.023179380729977512</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.024422442244224421</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.024604869713797523</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.026261268828041882</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.026789768427425458</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.029021387800013756</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.029717411121239743</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.033809340023157081</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.038020247469066369</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.03881915388191539</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.043256997455470736</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.0452510016497761</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.054738562091503268</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.057546429505623858</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.074045917591607113</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.18464763747782617</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.0081642454076119586</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.0087231216570341392</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.0094801223241590214</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.0098260732489096735</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.010485810485810486</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.010772913816689466</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.011046309528407555</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.011485715801480145</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.011562760758135653</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.012075775491207325</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.012681772066283395</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.012723289518031682</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.013118793940711748</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.013383709016393443</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.013636363636363636</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.014131701631701632</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.014452817455854234</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.015107804433647131</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.015157116451016635</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.015894039735099338</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.015943221559349928</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.016676593210244194</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.01675424567816617</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.017221873035826524</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.017527087316762269</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.018260155929421418</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.018476903870162296</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.019216735587448311</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.019565914679781887</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.020652898067954697</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.020723504817305945</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.022293782511766162</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.023003194888178913</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.023424657534246576</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.024564264600958109</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.024753867791842476</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.026690811747106528</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.027110289587184228</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.029881055990716564</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.029910842680471672</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.034556213017751476</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.038197621225983532</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.041362530413625302</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.044388992373387691</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.046637116978223161</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.058333333333333334</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.059006211180124224</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.077071290944123308</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.078579117330462869</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.20434616850934045</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.0081923180230996512</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.0088359865634584488</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.0095839440748675155</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.0099861729912428948</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.010546623794212218</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.01093611866016175</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.011073613161780215</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.011581834806461445</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.012147702438055233</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.01214895677436394</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.012379550321199143</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.012752858399296393</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.012829845313921747</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.013177252435064936</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.013767900395189733</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.01427994072477435</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.01450199203187251</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.015230267134050526</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.015267175572519083</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.015956708755376716</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.016039823008849558</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.016693049359620089</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.016778523489932886</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.017344570660803714</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.017547117259307399</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.018357260531889855</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.018585407499835817</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.0192466318394281</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.019658753709198812</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.020762964434730777</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.021953896816684963</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.022149562282459657</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.022388059701492536</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.023742026931254431</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.024788391777509067</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.025063594194224152</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.02710843373493976</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.027601399507580667</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.030123339658444024</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.030194805194805194</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.034703504043126686</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.034730992674917908</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.038932419196865818</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.044750430292598967</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.046747175691468641</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.06006006006006006</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.060227889310906134</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.08720165382446908</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.2166724078539442</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.30196707589285715</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.0074312608372553877</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.0079691650606802441</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.009007219021127227</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.0093295185968404037</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.010080300700495473</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.010486349665521606</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.011341683803826261</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.011382918552036199</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.011948908117016894</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.012017821550005862</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.012483777269637229</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.01259360108917631</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.012931726907630522</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.013091933546008204</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.013521545319465082</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.013916690496616146</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.014162505674080799</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.014877102199223804</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.015350877192982455</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.015621910223452639</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.01584979273347964</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.016380617084739132</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.016420212283407423</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.017042086544161231</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.017262963695064901</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.01783166904422254</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.018090791817679218</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.019029374201787994</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.020129487934078871</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.020517603170902309</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.021374045801526718</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.021960442117510179</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.022613372448355946</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.0230020642878207</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.024332029437114631</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.025380710659898477</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.025950085082246173</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.025992664646786796</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.028295376121463076</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.033135509396636995</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.033210627400768244</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.036453201970443348</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.038240649950973524</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.042436687200547572</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.043041293423639937</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.052076777847702961</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.067392067392067392</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.071074380165289261</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.13760324139005767</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.13766233766233765</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.0068223563369194436</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.0073693907093038561</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.008870618779749026</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.0091330195225324904</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.010020331106593087</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.010376260667183864</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.011214615175906665</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.011335138930685124</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.011872048662060134</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.011962572545303802</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.012344004340748779</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.012537729277919666</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.012894165709179114</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.013019500824378874</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.013435225808131435</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.013862380713209442</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.014083783089180159</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.014601644457045648</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.014801378559767821</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.015506807866868382</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.015740616171128749</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.01624108995759271</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.016281997482165338</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.016975537435137137</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.017164790615431059</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.017980267418384061</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.018675995694294942</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.018907563025210083</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.019726623174899038</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.020387243735763099</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.021223571026609857</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.021733730750124192</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.02255741269194184</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.022842903125324474</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.023732470334412083</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.024290313140181447</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.025744670612578797</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.028046421663442941</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.028140799389487742</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.032329988851727984</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.03256846780162842</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.036249342912213073</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.037540942302847068</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.042270531400966184</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.050136809914694998</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.051505858299913498</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.06534382483749572</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.073830155979202769</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.11033468186833395</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.22994512673112097</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.0053244592346089852</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.0066019863367587119</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.0084007272271330955</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.0089190911021448296</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.010140231988722083</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.010624279360896063</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.011085274179062242</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.011198395453785726</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.011701416327274937</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.011879758466789184</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.012261014131338321</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.012420022581859239</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.012767402376910018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.01289068494552151</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.013255392721883748</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.013503004595263345</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.013881859590774348</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.014326219967169079</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.014677180107736748</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.015356614719599591</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.016055314660728934</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.016062823487417454</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.016751503933364182</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.016985710434079267</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.017530190884300741</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.017765848670756645</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.01839506172839506</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.018795888399412628</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.019400900201769364</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.019940915805022157</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.020897185845639453</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.021132272371510566</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.022364217252396165</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.022555690185478608</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.023841354723707665</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.025078369905956112</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.025440613026819922</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.027349973446627721</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.02800982800982801</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.031369294605809131</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.034342848862483698</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.035300816094135511</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.039974619289340103</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.040266328471781868</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.049077891082664353</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.049431076291736618</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.061979648473635525</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.063270063270063265</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.093253968253968256</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.093589304079533767</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.0080843306649758268</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.0086340491476643785</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.0094193468426597253</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.0095656343858055073</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.010239471511147812</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.010744950121594123</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.010894350139346339</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.011466058185966913</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.011507979589621105</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.012052730696798493</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.01258379395507468</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.012703739213806327</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.013070127997115558</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.013340796716111578</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.013580741079597438</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.014036350548857298</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.014327971898687373</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.015039457918439863</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.015537428555574053</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.015795293002685201</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.016173570019723867</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.016521123436393673</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.01667157970587272</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.01717557251908397</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.017450682852807285</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.018199977804905117</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.018333333333333333</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.019122609673790775</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.01932707143437187</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.020678959159055661</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.021873047049370591</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.022281313038694298</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.022915843540102725</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.023203760352159965</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.024422567209390383</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.024606759071795669</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.026315789473684209</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.026889040163376447</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.029873321989033842</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.033854586490407866</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.034030683403068342</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.038107029852799561</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.040911699598261866</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.043359694573220614</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.046105919003115267</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.057569818716315529</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.057956777996070727</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.074937027707808565</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.077064220183486243</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.19320843091334894</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.0074678707884682184</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.0082012430583649001</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.0091703293721851434</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.0093765564434050118</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.010089876208241479</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.010611956137247965</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.010823689584751531</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.011455239711497667</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.011984591239834499</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.012046908315565033</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.012502332524724762</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.012597241867043847</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.012999452654625068</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.01317492955601249</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.013522884882108182</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.013926842919698416</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.014166571461213298</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.014725916315277327</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.014899822470200354</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.015640720753681513</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.015860075594752835</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.01638394704178734</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.016426615879062016</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.017269119382173119</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.017680973734785395</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.017997184797908707</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.018103951722795407</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.019050593379138038</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.020186915887850466</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.020528151469855507</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.021430822565395524</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.021966527196652718</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.022652757078986587</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.023004325599685412</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.02430824928885441</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.0244745177080334</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.02606516290726817</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.026185627000290951</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.028445586346118552</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.03324646051982813</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.033358042994810974</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.036545528787260105</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.038245219347581551</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.042682926829268296</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.044710578842315371</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.052377670572019294</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.052887364208118924</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.070292887029288709</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.14369501466275661</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.15205047318611986</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.0066104617742862616</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.0083358142304257223</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.0084652189915347814</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.0089294904786412759</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.010160118320365249</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.010624625139233998</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.011141796019426721</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.011213905242500702</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.011786194299893166</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.011883956658511011</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.012275731822474031</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.012486273233822752</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.012806999051333404</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.012896825396825396</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.013258826517653035</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.013527758257203091</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.01391793466503209</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.014694607717863533</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.015317919075144508</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.01536983669548511</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.016063312960351041</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.016126770438928621</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.016791979949874688</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.017061107976233943</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.017556279201472461</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.017834714895754836</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.01844872049196588</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.018850141376060319</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.01953125</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.019997872566748218</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.020898641588296761</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.021210952564596992</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.022594614950103557</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.023235923022095508</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.023983039618391412</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.025142560912389839</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.025462962962962962</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.027377118050693181</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.028028412363217507</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.031388012618296532</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.032033847083711091</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.035498612697894567</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.036184210526315791</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.040134033965425329</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.04945316214931051</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.052004648460197561</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.062639821029082776</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.063740040618653335</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.094058011827654178</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.10183496482673912</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Duration Mins (bin):ok]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>23</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>22</bucket>
            </map>
            <map to='#35628f'>
              <bucket>21</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>20</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>4</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>19</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>18</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>17</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>16</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>0</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>15</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>14</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>13</bucket>
            </map>
            <map to='#6394be'>
              <bucket>12</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>11</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>10</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>9</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>8</bucket>
            </map>
            <map to='#87d180'>
              <bucket>1</bucket>
            </map>
            <map to='#94a323'>
              <bucket>6</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>5</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>7</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>2</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[dy:start_date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wd:start_date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:start_date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:is_member:ok]' type='palette'>
            <map to='#97cfd0'>
              <bucket>0</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='id' />
        <field-sort-custom-order field='Id (copy)_2779283986491154433' />
        <field-sort-custom-order field='start_date' />
        <field-sort-custom-order field='start_station_code' />
        <field-sort-custom-order field='end_date' />
        <field-sort-custom-order field='end_station_code' />
        <field-sort-custom-order field='duration_sec' />
        <field-sort-custom-order field='Calculation_2618843249007489028' />
        <field-sort-custom-order field='Calculation_2559733504488513538' />
        <field-sort-custom-order field='Duration Mins (copy)_1563593561621929989' />
        <field-sort-custom-order field='is_member' />
        <field-sort-custom-order field='code' />
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='Is Member (copy)_2905947724885282821' />
        <field-sort-custom-order field='Name (group)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='trips' id='trips_E436E804F5824BE1A09B6159A4888209'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[trips].[start_station_code]' />
                    <expression op='[stations].[code]' />
                  </expression>
                </clause>
                <relation connection='mysql.0xofw0u1qreusv10z4ieq04jjmh3' name='trips' table='[trips]' type='table' />
                <relation connection='mysql.0xofw0u1qreusv10z4ieq04jjmh3' name='stations' table='[stations]' type='table' />
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_4BE7A41B93514571B55017740EE393DA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Q4' type='sheet' worksheet='Q4(2)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Q4' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='!Q2.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Round Trip to Member Trip Trend (Fig 2.1)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>% Round Trips vs. % Member Trips.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pl2rxs0z2c3061f87ao90woyvp3'>
            <column caption='% Member Trips' datatype='real' name='[Calculation_961518585424773130]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(INT([Is Member (copy)_2905947724885282821]=1)) / TOTAL(COUNT([Is Member (copy)_2905947724885282821]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% Round Trips' datatype='real' name='[Calculation_961518585438228492]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(INT([start_station_code] == [end_station_code])) / TOTAL(COUNT([start_station_code]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='Id (copy)' datatype='integer' name='[Id (copy)_2779283986491154433]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[id]' />
            </column>
            <column caption='Is Member (Measure)' datatype='integer' name='[Is Member (copy)_2905947724885282821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[is_member]' />
            </column>
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Is Member (Dimension)' datatype='integer' name='[is_member]' role='dimension' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Id (copy)_2779283986491154433]' derivation='None' name='[none:Id (copy)_2779283986491154433:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_961518585424773130]' derivation='User' name='[usr:Calculation_961518585424773130:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_961518585438228492]' derivation='User' name='[usr:Calculation_961518585438228492:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Id (copy)_2779283986491154433:ok]'>
            <groupfilter from='85843' function='range' level='[none:Id (copy)_2779283986491154433:ok]' to='8670008' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Id (copy)_2779283986491154433:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:6]' value='p0.00%' />
            <format attr='text-format' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585424773130:qk:10]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='452' />
                <format attr='maxheight' value='452' />
                <format attr='minwidth' value='622' />
                <format attr='maxwidth' value='622' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:6]</rows>
        <cols>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585424773130:qk:10]</cols>
      </table>
      <simple-id uuid='{4CF2C790-6464-44BE-A641-D2AD63CC6D44}' />
    </worksheet>
    <worksheet name='Q1.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Monthly Trips by Year (Fig 1.1)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The trend shows the number of trips in each month for the given years.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pl2rxs0z2c3061f87ao90woyvp3'>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:qk]' pivot='key' type='quantitative' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]'>
            <groupfilter function='level-members' level='[mn:start_date:ok]' />
          </filter>
          <slices>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:qk]' value='#555555' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]' value='' />
            <format attr='text-align' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='auto' />
            <format attr='vertical-align' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='auto' />
            <format attr='wrap' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='auto' />
            <format attr='text-align' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='#e6e6e6' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='solid' />
            <format attr='background-color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]' value='#fefaf1' />
            <format attr='text-align' data-class='subtotal' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='auto' />
            <format attr='text-align' data-class='total' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='auto' />
            <format attr='vertical-align' data-class='subtotal' scope='cols' value='auto' />
            <format attr='text-align' data-class='total' scope='cols' value='auto' />
            <format attr='text-align' data-class='subtotal' value='auto' />
            <format attr='background-color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='true' />
            <format attr='font-weight' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='bold' />
            <format attr='text-decoration' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='none' />
            <format attr='color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='#1b1b1b' />
            <format attr='font-weight' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]' value='bold' />
            <format attr='color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]' value='#000000' />
            <format attr='text-align' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='auto' />
            <format attr='vertical-align' scope='cols' value='auto' />
            <format attr='wrap' scope='cols' value='auto' />
            <format attr='text-align' value='auto' />
            <format attr='text-format' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:qk]' value='iLLLL' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='0' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#555555' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='div-level' scope='rows' value='0' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' value='YEAR'>
              <formatted-text>
                <run>YEAR</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2413811683654785' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='660' />
                <format attr='maxwidth' value='660' />
                <format attr='minheight' value='386' />
                <format attr='maxheight' value='386' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]</rows>
        <cols>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:qk]</cols>
      </table>
      <simple-id uuid='{5D3BB28C-D26C-4BCB-800E-C282B1C4FDDB}' />
    </worksheet>
    <worksheet name='Q1.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Monthly Trips per Year (Fig 1.2)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The table shows the percentage breakdown of annual trips on a monthly basis.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pl2rxs0z2c3061f87ao90woyvp3'>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]' value='iLLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:8]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:8]' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]</rows>
        <cols>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]</cols>
      </table>
      <simple-id uuid='{7D7CDA6E-D0E1-470C-ADAF-86D619D42702}' />
    </worksheet>
    <worksheet name='Q1.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Member Percentage of Trips (Fig 1.3)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The total number of member trips for the year 2017 on a monthly basis, indicating the percentage of member trips to the total numbr of trips.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pl2rxs0z2c3061f87ao90woyvp3'>
            <column caption='% Member Trips' datatype='real' name='[Calculation_961518585424773130]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(INT([Is Member (copy)_2905947724885282821]=1)) / TOTAL(COUNT([Is Member (copy)_2905947724885282821]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Is Member (Measure)' datatype='integer' name='[Is Member (copy)_2905947724885282821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[is_member]' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' role='measure' type='quantitative' />
            <column-instance column='[is_member]' derivation='Count' name='[cnt:is_member:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Is Member (Dimension)' datatype='integer' name='[is_member]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_961518585424773130]' derivation='User' name='[usr:Calculation_961518585424773130:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_961518585424773130]' derivation='User' name='[usr:Calculation_961518585424773130:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]'>
            <groupfilter function='member' level='[yr:start_date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]' field-type='quantitative' max='976333' min='-27858' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]' scope='cols' value='Number of Trips' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585424773130:qk]' value='p0.00%' />
            <format attr='text-align' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585424773130:qk]' value='auto' />
            <format attr='wrap' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585424773130:qk]' value='auto' />
            <format attr='vertical-align' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585424773130:qk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]' value='124' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585424773130:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4942541122436523' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='729' />
                <format attr='maxwidth' value='729' />
                <format attr='minheight' value='160' />
                <format attr='maxheight' value='160' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]</rows>
        <cols>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]</cols>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[cnt:is_member:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585424773130:qk:10]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>11295</value>
                <value>11</value>
                <value>0</value>
                <value>0.075403554214454521</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{D2D9F1CB-9961-4B67-B2C7-115446EC85DB}' />
    </worksheet>
    <worksheet name='Q1.4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Highest Percentage of Round Trips by Station (Fig 1.4)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The figure displays the stations with the highest percentage of round trips (the start station is also the end station.)</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pl2rxs0z2c3061f87ao90woyvp3'>
            <column caption='% Round Trips' datatype='real' name='[Calculation_961518585438228492]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(INT([start_station_code] == [end_station_code])) / TOTAL(COUNT([start_station_code]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[code]' derivation='Attribute' name='[attr:code:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Code' datatype='integer' name='[code]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_961518585438228492]' derivation='User' name='[usr:Calculation_961518585438228492:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]'>
            <groupfilter function='level-members' level='[none:name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Métro Jean-Drapeau&quot;</bucket>
              <bucket>&quot;Métro Angrignon&quot;</bucket>
              <bucket>&quot;Berlioz / de l&apos;Île des Soeurs&quot;</bucket>
              <bucket>&quot;LaSalle / 4e avenue&quot;</bucket>
              <bucket>&quot;Basile-Routhier / Gouin&quot;</bucket>
              <bucket>&quot;Parc Plage&quot;</bucket>
              <bucket>&quot;Gare Canora&quot;</bucket>
              <bucket>&quot;LaSalle / Sénécal&quot;</bucket>
              <bucket>&quot;Casino de Montréal&quot;</bucket>
              <bucket>&quot;Quai de la navette fluviale&quot;</bucket>
              <bucket>&quot;St-Charles / Montarville&quot;</bucket>
              <bucket>&quot;Jacques-Le Ber / de la Pointe Nord&quot;</bucket>
              <bucket>&quot;CHSLD Éloria-Lepage (de la Pépinière / de Marseille)&quot;</bucket>
              <bucket>&quot;Place du Commerce&quot;</bucket>
              <bucket>&quot;28e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Collège Édouard-Montpetit&quot;</bucket>
              <bucket>&quot;de la Commune / Place Jacques-Cartier&quot;</bucket>
              <bucket>&quot;St-Charles / St-Sylvestre&quot;</bucket>
              <bucket>&quot;de la Commune / St-Sulpice&quot;</bucket>
              <bucket>&quot;Beaucourt / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Métro Langelier (Sherbrooke / Langelier)&quot;</bucket>
              <bucket>&quot;St-Charles / Charlotte&quot;</bucket>
              <bucket>&quot;François-Perrault / L.-O.-David&quot;</bucket>
              <bucket>&quot;LaSalle / Crawford&quot;</bucket>
              <bucket>&quot;Square Sir-Georges-Étienne-Cartier / Léa Roback&quot;</bucket>
              <bucket>&quot;La Ronde&quot;</bucket>
              <bucket>&quot;de Kent / de la Côte-des-Neiges&quot;</bucket>
              <bucket>&quot;Jogues / Allard&quot;</bucket>
              <bucket>&quot;de Repentigny / Sherbrooke&quot;</bucket>
              <bucket>&quot;Benny / de Monkland&quot;</bucket>
              <bucket>&quot;St-Charles / Sauvé&quot;</bucket>
              <bucket>&quot;Tolhurst / Fleury&quot;</bucket>
              <bucket>&quot;St-Zotique / 39e avenue&quot;</bucket>
              <bucket>&quot;de la Commune / Berri&quot;</bucket>
              <bucket>&quot;35e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Louis-Hémon / Villeray&quot;</bucket>
              <bucket>&quot;Paul Boutet / des Regrattiers&quot;</bucket>
              <bucket>&quot;Trans Island / Queen-Mary&quot;</bucket>
              <bucket>&quot;Benny Crescent / Benny&quot;</bucket>
              <bucket>&quot;30e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;Natatorium (LaSalle / Rolland)&quot;</bucket>
              <bucket>&quot;Place Longueuil&quot;</bucket>
              <bucket>&quot;Marquette / Fleury&quot;</bucket>
              <bucket>&quot;Park Row O / Sherbrooke&quot;</bucket>
              <bucket>&quot;Métro Longueuil - Université de Sherbrooke&quot;</bucket>
              <bucket>&quot;de Kent / Victoria&quot;</bucket>
              <bucket>&quot;Chauveau / de l&apos;Assomption&quot;</bucket>
              <bucket>&quot;West Broadway / Sherbrooke&quot;</bucket>
              <bucket>&quot;Argyle / Bannantyne&quot;</bucket>
              <bucket>&quot;Waverly / Van Horne&quot;</bucket>
              <bucket>&quot;19e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;Fleury / Lajeunesse&quot;</bucket>
              <bucket>&quot;Congres&quot;</bucket>
              <bucket>&quot;Pierre-de-Coubertin / Aird&quot;</bucket>
              <bucket>&quot;de la Roche / Fleury&quot;</bucket>
              <bucket>&quot;Cote St-Paul / St-Ambroise&quot;</bucket>
              <bucket>&quot;de la Commune / McGill&quot;</bucket>
              <bucket>&quot;CHSLD Benjamin-Victor-Rousselot (Dickson / Sherbrooke)&quot;</bucket>
              <bucket>&quot;Jardin Botanique (Pie-IX / Sherbrooke)&quot;</bucket>
              <bucket>&quot;Square Sir-Georges-Etienne-Cartier / Ste-Émilie&quot;</bucket>
              <bucket>&quot;Hamilton / Jolicoeur&quot;</bucket>
              <bucket>&quot;Marché Atwater&quot;</bucket>
              <bucket>&quot;Hudson / de Kent&quot;</bucket>
              <bucket>&quot;Parc Outremont (Bloomfield / Elmwood)&quot;</bucket>
              <bucket>&quot;Hamel / Sauvé&quot;</bucket>
              <bucket>&quot;Eadie / Dubois&quot;</bucket>
              <bucket>&quot;12e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;Quesnel / Vinet&quot;</bucket>
              <bucket>&quot;Francis / Fleury&quot;</bucket>
              <bucket>&quot;Bloomfield / Van Horne&quot;</bucket>
              <bucket>&quot;Émile-Journault / de Chateaubriand&quot;</bucket>
              <bucket>&quot;Godin / Bannantyne&quot;</bucket>
              <bucket>&quot;Briand / le Caron&quot;</bucket>
              <bucket>&quot;Métro Cadillac (Sherbrooke / de Cadillac)&quot;</bucket>
              <bucket>&quot;Complexe sportif Claude-Robillard (Émile-Journault)&quot;</bucket>
              <bucket>&quot;Gary Carter / St-Laurent&quot;</bucket>
              <bucket>&quot;Champagneur / Jean-Talon&quot;</bucket>
              <bucket>&quot;Basile-Routhier / Chabanel&quot;</bucket>
              <bucket>&quot;15e avenue / Masson&quot;</bucket>
              <bucket>&quot;Laporte / St-Antoine&quot;</bucket>
              <bucket>&quot;Pierre-de-Coubertin / Louis-Veuillot&quot;</bucket>
              <bucket>&quot;Clark / Fleury&quot;</bucket>
              <bucket>&quot;de la Commune / King&quot;</bucket>
              <bucket>&quot;Gordon / Wellington&quot;</bucket>
              <bucket>&quot;Regina / de Verdun&quot;</bucket>
              <bucket>&quot;5e avenue / de Verdun&quot;</bucket>
              <bucket>&quot;Lincoln / Lambert Closse&quot;</bucket>
              <bucket>&quot;Stuart / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Métro Lasalle (de Rushbrooke / Caisse)&quot;</bucket>
              <bucket>&quot;de la Salle / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Bloomfield / Bernard&quot;</bucket>
              <bucket>&quot;Métro Monk (Allard / Beaulieu)&quot;</bucket>
              <bucket>&quot;Le Caron / Marc-Sauvalle &quot;</bucket>
              <bucket>&quot;de Marseille / Viau&quot;</bucket>
              <bucket>&quot;Basin / Richmond&quot;</bucket>
              <bucket>&quot;Palm / St-Remi&quot;</bucket>
              <bucket>&quot;Rousselot / Jarry&quot;</bucket>
              <bucket>&quot;Marcil / Sherbrooke&quot;</bucket>
              <bucket>&quot;Ville-Marie / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Laurier / 15e avenue&quot;</bucket>
              <bucket>&quot;St-André / Robin&quot;</bucket>
              <bucket>&quot;Ottawa / William&quot;</bucket>
              <bucket>&quot;Gatineau / Swail&quot;</bucket>
              <bucket>&quot;Ropery / Augustin-Cantin&quot;</bucket>
              <bucket>&quot;Hutchison / Van Horne&quot;</bucket>
              <bucket>&quot;de Hampton / de Monkland&quot;</bucket>
              <bucket>&quot;Métro Acadie (de l&apos;Acadie / Beaumont)&quot;</bucket>
              <bucket>&quot;Métro Place St-Henri (St-Ferdinand / St-Jacques)&quot;</bucket>
              <bucket>&quot;5e avenue / Bannantyne&quot;</bucket>
              <bucket>&quot;Grand Boulevard / Sherbrooke&quot;</bucket>
              <bucket>&quot;Parc Jeanne Mance (monument à sir George-Étienne Cartier)&quot;</bucket>
              <bucket>&quot;Dunlop / Van Horne&quot;</bucket>
              <bucket>&quot;Joliette / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Hillside / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Ann / William&quot;</bucket>
              <bucket>&quot;Ellendale / de la Côte-des-Neiges&quot;</bucket>
              <bucket>&quot;Durocher / Bernard&quot;</bucket>
              <bucket>&quot;Chabot / Everett&quot;</bucket>
              <bucket>&quot;10e Avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Ontario / Sicard&quot;</bucket>
              <bucket>&quot;Ryde / Charlevoix&quot;</bucket>
              <bucket>&quot;Gascon / de Rouen&quot;</bucket>
              <bucket>&quot;Ross / de l&apos;Église&quot;</bucket>
              <bucket>&quot;2e avenue / Wellington&quot;</bucket>
              <bucket>&quot;St-André / Duluth&quot;</bucket>
              <bucket>&quot;Leman / de Chateaubriand&quot;</bucket>
              <bucket>&quot;Métro Parc  (Ogilvy / Hutchison)&quot;</bucket>
              <bucket>&quot;de Liège / Lajeunesse&quot;</bucket>
              <bucket>&quot;Logan / d&apos;Iberville&quot;</bucket>
              <bucket>&quot;Ontario / Viau&quot;</bucket>
              <bucket>&quot;Greene / Workman&quot;</bucket>
              <bucket>&quot;Victoria / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Nazareth / William&quot;</bucket>
              <bucket>&quot;Girouard / de Terrebonne&quot;</bucket>
              <bucket>&quot;26e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Charlevoix / Lionel-Groulx&quot;</bucket>
              <bucket>&quot;Duvernay / Charlevoix&quot;</bucket>
              <bucket>&quot;Wilson / Sherbrooke&quot;</bucket>
              <bucket>&quot;Calixa-Lavallée / Rachel&quot;</bucket>
              <bucket>&quot;Métro Verdun (Willibrord / de Verdun)&quot;</bucket>
              <bucket>&quot;Fullum / Jean Langlois&quot;</bucket>
              <bucket>&quot;Bercy / Ontario&quot;</bucket>
              <bucket>&quot;d&apos;Oxford / de Monkland&quot;</bucket>
              <bucket>&quot;Jacques-Casault / Christophe-Colomb&quot;</bucket>
              <bucket>&quot;Victoria Hall&quot;</bucket>
              <bucket>&quot;de Bordeaux / Jean-Talon&quot;</bucket>
              <bucket>&quot;Belmore / Sherbrooke&quot;</bucket>
              <bucket>&quot;Place Jean-Paul Riopelle (Viger / de Bleury)&quot;</bucket>
              <bucket>&quot;Marché Maisonneuve&quot;</bucket>
              <bucket>&quot;Fortune / Wellington&quot;</bucket>
              <bucket>&quot;Rousselot / Villeray&quot;</bucket>
              <bucket>&quot;Desjardins / Hochelaga&quot;</bucket>
              <bucket>&quot;de Gaspé / Marmier&quot;</bucket>
              <bucket>&quot;Métro Place-d&apos;Armes (Viger / St-Urbain)&quot;</bucket>
              <bucket>&quot;Faillon / St-Denis&quot;</bucket>
              <bucket>&quot;Beatty / de Verdun&quot;</bucket>
              <bucket>&quot;18e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Wilderton  / Van Horne&quot;</bucket>
              <bucket>&quot;Métro St-Michel (Shaughnessy / St-Michel)&quot;</bucket>
              <bucket>&quot;de l&apos;Église / Bannantyne&quot;</bucket>
              <bucket>&quot;de Monkland / Girouard&quot;</bucket>
              <bucket>&quot;du Parc-La Fontaine / Roy&quot;</bucket>
              <bucket>&quot;de Gaspé / de Liège&quot;</bucket>
              <bucket>&quot;St-Dominique / St-Zotique&quot;</bucket>
              <bucket>&quot;Gilford / de Brébeuf&quot;</bucket>
              <bucket>&quot;Lespérance / de Rouen&quot;</bucket>
              <bucket>&quot;Desjardins / de Rouen&quot;</bucket>
              <bucket>&quot;Parc J.-Arthur-Champagne (de Chambly / du Mont-Royal)&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Augustin-Frigon&quot;</bucket>
              <bucket>&quot;du Parc-La Fontaine / Duluth&quot;</bucket>
              <bucket>&quot;Muray / Notre-Dame&quot;</bucket>
              <bucket>&quot;Wolfe / Robin&quot;</bucket>
              <bucket>&quot;St-Dominique / Gounod&quot;</bucket>
              <bucket>&quot;1ère  avenue /St-Zotique&quot;</bucket>
              <bucket>&quot;Omer-Lavallée / du Midway&quot;</bucket>
              <bucket>&quot;CHSLD St-Michel (Jarry / 8e avenue)&quot;</bucket>
              <bucket>&quot;Lionel-Groulx / George-Vanier&quot;</bucket>
              <bucket>&quot;Louis Hémon / Rosemont&quot;</bucket>
              <bucket>&quot;Notre-Dame / St-Gabriel&quot;</bucket>
              <bucket>&quot;Lucien L&apos;Allier / St-Jacques&quot;</bucket>
              <bucket>&quot;Shearer / Centre&quot;</bucket>
              <bucket>&quot;Métro Crémazie (Crémazie / Lajeunesse)&quot;</bucket>
              <bucket>&quot;Ernest-Gendreau / du Mont-Royal&quot;</bucket>
              <bucket>&quot;de Clifton / Sherbrooke&quot;</bucket>
              <bucket>&quot;Métro Outremont (Wiseman / Van Horne)&quot;</bucket>
              <bucket>&quot;Bourbonnière / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Hochelaga / Chapleau&quot;</bucket>
              <bucket>&quot;des Érables / Bélanger&quot;</bucket>
              <bucket>&quot;St-Nicolas / Place d&apos;Youville&quot;</bucket>
              <bucket>&quot;Ottawa / St-Thomas&quot;</bucket>
              <bucket>&quot;Hôtel-de-Ville (du Champs-de-Mars / Gosford)&quot;</bucket>
              <bucket>&quot;St-Antoine / St-François-Xavier&quot;</bucket>
              <bucket>&quot;de la Roche / Everett&quot;</bucket>
              <bucket>&quot;Poupart / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Bennett / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Hôpital Santa Cabrini (St-Zotique / Jeanne-Jugan)&quot;</bucket>
              <bucket>&quot;Island / Centre&quot;</bucket>
              <bucket>&quot;d&apos;Orléans / Hochelaga&quot;</bucket>
              <bucket>&quot;McKenna / Édouard-Montpetit&quot;</bucket>
              <bucket>&quot;Métro Pie-IX (Pierre-de-Coubertin / Pie-IX)&quot;</bucket>
              <bucket>&quot;Augustin-Cantin / Shearer&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Labelle&quot;</bucket>
              <bucket>&quot;Gauthier / Papineau&quot;</bucket>
              <bucket>&quot;Murray / William&quot;</bucket>
              <bucket>&quot;Notre-Dame-de-Grâce / Décarie&quot;</bucket>
              <bucket>&quot;Queen / Wellington&quot;</bucket>
              <bucket>&quot;de Chambly / Rachel&quot;</bucket>
              <bucket>&quot;Dorion / Ontario&quot;</bucket>
              <bucket>&quot;Édouard-Montpetit / Stirling&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Dézéry&quot;</bucket>
              <bucket>&quot;Grand Trunk / Hibernia&quot;</bucket>
              <bucket>&quot;Terrasse Mercure / Fullum&quot;</bucket>
              <bucket>&quot;Métro Papineau (Cartier / Ste-Catherine)&quot;</bucket>
              <bucket>&quot;Marquette / Villeray&quot;</bucket>
              <bucket>&quot;Clark / de Liège&quot;</bucket>
              <bucket>&quot;de Bullion / St-Joseph&quot;</bucket>
              <bucket>&quot;Messier / Hochelaga&quot;</bucket>
              <bucket>&quot;Métro Jolicoeur (Drake / de Sève)&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Bélanger&quot;</bucket>
              <bucket>&quot;Rockland / Lajoie&quot;</bucket>
              <bucket>&quot;Édouard-Montpetit (Université de Montréal)&quot;</bucket>
              <bucket>&quot;Métro Côte-des-Neiges (Lacombe / de la Côte-des-Neiges)&quot;</bucket>
              <bucket>&quot;Berri / St-Grégoire&quot;</bucket>
              <bucket>&quot;Lajeunesse / de Castelnau&quot;</bucket>
              <bucket>&quot;Tupper / du Fort&quot;</bucket>
              <bucket>&quot;Rachel / de Brébeuf&quot;</bucket>
              <bucket>&quot;Bourgeoys / Favard&quot;</bucket>
              <bucket>&quot;Notre-Dame / de la Montagne&quot;</bucket>
              <bucket>&quot;16e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;St-Jacques / St-Pierre&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Belllechasse&quot;</bucket>
              <bucket>&quot;McGill / Place d&apos;Youville&quot;</bucket>
              <bucket>&quot;Gounod / St-Denis&quot;</bucket>
              <bucket>&quot;15e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Joseph-Manceau / René-Lévesque&quot;</bucket>
              <bucket>&quot;Métro Georges-Vanier (St-Antoine / Canning)&quot;</bucket>
              <bucket>&quot;Henri-Julien / Villeray&quot;</bucket>
              <bucket>&quot;Bernard / Jeanne-Mance&quot;</bucket>
              <bucket>&quot;des Seigneurs / Workman&quot;</bucket>
              <bucket>&quot;Faillon / St-Hubert&quot;</bucket>
              <bucket>&quot;16e avenue / St-Joseph&quot;</bucket>
              <bucket>&quot;Laurier / de Bordeaux&quot;</bucket>
              <bucket>&quot;Côte St-Antoine / Clarke&quot;</bucket>
              <bucket>&quot;Guizot / St-Laurent&quot;</bucket>
              <bucket>&quot;Wolfe / René-Lévesque&quot;</bucket>
              <bucket>&quot;Guizot / St-Denis&quot;</bucket>
              <bucket>&quot;Guy / Notre-Dame&quot;</bucket>
              <bucket>&quot;Darling / Sherbrooke&quot;</bucket>
              <bucket>&quot;de Gaspé / St-Viateur&quot;</bucket>
              <bucket>&quot;St-Mathieu /Ste-Catherine&quot;</bucket>
              <bucket>&quot;8e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;de Vendôme / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Jeanne Mance / du Mont-Royal&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Greene&quot;</bucket>
              <bucket>&quot;Logan / de Champlain&quot;</bucket>
              <bucket>&quot;Cartier / Bélanger&quot;</bucket>
              <bucket>&quot;du Mont-Royal / du Parc&quot;</bucket>
              <bucket>&quot;Lambert-Closse / Tupper&quot;</bucket>
              <bucket>&quot;Mackay / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Hutchison / Beaubien&quot;</bucket>
              <bucket>&quot;Jeanne-Mance / St-Viateur&quot;</bucket>
              <bucket>&quot;Alexandre-de-Sève / la Fontaine&quot;</bucket>
              <bucket>&quot;Crescent / René-Lévesque&quot;</bucket>
              <bucket>&quot;Robin / de la Visitation&quot;</bucket>
              <bucket>&quot;Mentana / Marie-Anne&quot;</bucket>
              <bucket>&quot;Hôpital général juif (de la Côte Ste-Catherine / Légaré)&quot;</bucket>
              <bucket>&quot;Alma / Beaubien&quot;</bucket>
              <bucket>&quot;d&apos;Orléans / Masson&quot;</bucket>
              <bucket>&quot;Métro Joliette  (Joliette / Hochelaga)&quot;</bucket>
              <bucket>&quot;Parthenais / St-Joseph&quot;</bucket>
              <bucket>&quot;Elsdale / Louis-Hébert&quot;</bucket>
              <bucket>&quot;Calixa-Lavallée / Sherbrooke&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Georges-Vanier / Notre-Dame&quot;</bucket>
              <bucket>&quot;Poupart / Ontario&quot;</bucket>
              <bucket>&quot;Cartier / Rosemont&quot;</bucket>
              <bucket>&quot;Dandurand / Papineau&quot;</bucket>
              <bucket>&quot;Hogan / Ontario&quot;</bucket>
              <bucket>&quot;Aylmer / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Molson / Beaubien&quot;</bucket>
              <bucket>&quot;Hôtel-de-Ville 2 (du Champs-de-Mars / Gosford)&quot;</bucket>
              <bucket>&quot;Parc du Pélican (2e avenue / St-Joseph)&quot;</bucket>
              <bucket>&quot;de la Roche /  de Bellechasse&quot;</bucket>
              <bucket>&quot;Valois / Ontario&quot;</bucket>
              <bucket>&quot;Henri-Julien / de Castelnau&quot;</bucket>
              <bucket>&quot;Fullum / Sherbrooke &quot;</bucket>
              <bucket>&quot;Parc Père-Marquette (Chambord / Rosemont)&quot;</bucket>
              <bucket>&quot;de Bordeaux / Masson&quot;</bucket>
              <bucket>&quot;Alexandra / Jean Talon&quot;</bucket>
              <bucket>&quot;Gascon / Rachel&quot;</bucket>
              <bucket>&quot;Jeanne d&apos;Arc / Ontario&quot;</bucket>
              <bucket>&quot;Dézéry / Ontario&quot;</bucket>
              <bucket>&quot;St-Dominique / Maguire&quot;</bucket>
              <bucket>&quot;Roy / St-Christophe&quot;</bucket>
              <bucket>&quot;City Councillors / du President-Kennedy&quot;</bucket>
              <bucket>&quot;de Lanaudière / Gilford&quot;</bucket>
              <bucket>&quot;Bel Air / St-Antoine&quot;</bucket>
              <bucket>&quot;Waverly / Fairmount&quot;</bucket>
              <bucket>&quot;Lajeunesse / Villeray (place Tapéo)&quot;</bucket>
              <bucket>&quot;de Bordeaux / Rachel&quot;</bucket>
              <bucket>&quot;Rouen / Fullum&quot;</bucket>
              <bucket>&quot;Duluth / de l&apos;Esplanade&quot;</bucket>
              <bucket>&quot;Chabot / de Bellechasse&quot;</bucket>
              <bucket>&quot;de Gaspé / Jarry&quot;</bucket>
              <bucket>&quot;St-André / St-Antoine&quot;</bucket>
              <bucket>&quot;Villeneuve / St-Laurent&quot;</bucket>
              <bucket>&quot;St-Marc / Sherbrooke&quot;</bucket>
              <bucket>&quot;Parc Rosemont (Dandurand / d&apos;Iberville)&quot;</bucket>
              <bucket>&quot;St-Jacques / St-Laurent&quot;</bucket>
              <bucket>&quot;St-Dominique / Jean-Talon&quot;</bucket>
              <bucket>&quot;Bishop / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Laval / Duluth&quot;</bucket>
              <bucket>&quot;Hutchison/ Prince-Arthur&quot;</bucket>
              <bucket>&quot;3e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Viger / Jeanne Mance&quot;</bucket>
              <bucket>&quot;Sanguinet / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Cartier / Marie-Anne&quot;</bucket>
              <bucket>&quot;St-Zotique / Clark&quot;</bucket>
              <bucket>&quot;Casgrain / de Bellechasse&quot;</bucket>
              <bucket>&quot;6e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Métro Préfontaine (Moreau / Hochelaga)&quot;</bucket>
              <bucket>&quot;Villeneuve / de l&apos;Hôtel-de-Ville&quot;</bucket>
              <bucket>&quot;de Lanaudière / Marie-Anne&quot;</bucket>
              <bucket>&quot;Ontario / du Havre&quot;</bucket>
              <bucket>&quot;McEachran / Van Horne&quot;</bucket>
              <bucket>&quot;Métro Sauvé (Berri / Sauvé)&quot;</bucket>
              <bucket>&quot;Métro Charlevoix (Centre / Charlevoix)&quot;</bucket>
              <bucket>&quot;Villeneuve / St-Urbain&quot;</bucket>
              <bucket>&quot;St-Jacques / Gauvin&quot;</bucket>
              <bucket>&quot;Place de la paix (Pl. du marché / St-Dominique)&quot;</bucket>
              <bucket>&quot;Louis-Hébert / St-Zotique&quot;</bucket>
              <bucket>&quot;Métro Villa-Maria (Décarie / de Monkland)&quot;</bucket>
              <bucket>&quot;Queen / Ottawa&quot;</bucket>
              <bucket>&quot;Drolet / Beaubien&quot;</bucket>
              <bucket>&quot;de Mentana / Laurier&quot;</bucket>
              <bucket>&quot;Chomedey / de Maisonneuve&quot;</bucket>
              <bucket>&quot;de Gaspé / Fairmount&quot;</bucket>
              <bucket>&quot;Resther / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Rivard / Rachel&quot;</bucket>
              <bucket>&quot;des Érables / Gauthier&quot;</bucket>
              <bucket>&quot;Cartier / St-Joseph&quot;</bucket>
              <bucket>&quot;Chambord / Beaubien&quot;</bucket>
              <bucket>&quot;Fabre / St-Zotique&quot;</bucket>
              <bucket>&quot;Logan / Fullum&quot;</bucket>
              <bucket>&quot;Terrasse Guindon / Fullum&quot;</bucket>
              <bucket>&quot;Marquette / Rachel&quot;</bucket>
              <bucket>&quot;Hutchison / Edouard Charles&quot;</bucket>
              <bucket>&quot;McGill / des Récollets&quot;</bucket>
              <bucket>&quot;Bernard / Clark&quot;</bucket>
              <bucket>&quot;Cartier / Masson&quot;</bucket>
              <bucket>&quot;Berri / Rachel&quot;</bucket>
              <bucket>&quot;Waverly / St-Zotique&quot;</bucket>
              <bucket>&quot;Atwater / Sherbrooke&quot;</bucket>
              <bucket>&quot;du Rosaire / St-Hubert&quot;</bucket>
              <bucket>&quot;de la Montagne / Sherbrooke&quot;</bucket>
              <bucket>&quot;Clark / St-Viateur&quot;</bucket>
              <bucket>&quot;St-Urbain / Beaubien&quot;</bucket>
              <bucket>&quot;de Brébeuf / Laurier&quot;</bucket>
              <bucket>&quot;Aylwin / Ontario&quot;</bucket>
              <bucket>&quot;Notre-Dame / Peel&quot;</bucket>
              <bucket>&quot;de Montmorency / Richardson&quot;</bucket>
              <bucket>&quot;Fairmount / St-Dominique&quot;</bucket>
              <bucket>&quot;Square Victoria&quot;</bucket>
              <bucket>&quot;Ste-Famille / des Pins&quot;</bucket>
              <bucket>&quot;Larivière / de Lorimier&quot;</bucket>
              <bucket>&quot;Clark / Evans&quot;</bucket>
              <bucket>&quot;Métro Place-des-Arts (de Maisonneuve / de Bleury)&quot;</bucket>
              <bucket>&quot;Marquette / Jean-Talon&quot;</bucket>
              <bucket>&quot;Métro St-Laurent (de Maisonneuve / St-Laurent)&quot;</bucket>
              <bucket>&quot;Garnier / St-Joseph&quot;</bucket>
              <bucket>&quot;1ère avenue / Masson&quot;</bucket>
              <bucket>&quot;Towers / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Ste-Catherine / St-Denis&quot;</bucket>
              <bucket>&quot;Laval / Rachel&quot;</bucket>
              <bucket>&quot;Montcalm / de Maisonneuve&quot;</bucket>
              <bucket>&quot;de St-Vallier / St-Zotique&quot;</bucket>
              <bucket>&quot;Drolet / St-Zotique&quot;</bucket>
              <bucket>&quot;Boyer / Rosemont&quot;</bucket>
              <bucket>&quot;Drummond / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Marquette / Laurier&quot;</bucket>
              <bucket>&quot;de la Roche / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Gauvin / Notre-Dame&quot;</bucket>
              <bucket>&quot;Duluth / St-Denis&quot;</bucket>
              <bucket>&quot;Sanguinet / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Beaudry / Ontario&quot;</bucket>
              <bucket>&quot;de Bullion / du Mont-Royal&quot;</bucket>
              <bucket>&quot;St-Hubert / Rachel&quot;</bucket>
              <bucket>&quot;St-Urbain / de la Gauchetière&quot;</bucket>
              <bucket>&quot;Hutchison / Sherbrooke&quot;</bucket>
              <bucket>&quot;Boyer / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Marie-Anne / de la Roche&quot;</bucket>
              <bucket>&quot;St-André / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Milton / Durocher&quot;</bucket>
              <bucket>&quot;St-Urbain / René-Lévesque&quot;</bucket>
              <bucket>&quot;Boyer / St-Zotique&quot;</bucket>
              <bucket>&quot;Notre-Dame / Chatham&quot;</bucket>
              <bucket>&quot;Parthenais / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Berri / de Maisonneuve&quot;</bucket>
              <bucket>&quot;des Érables / Rachel&quot;</bucket>
              <bucket>&quot;Chambord / Jean-Talon&quot;</bucket>
              <bucket>&quot;Square St-Louis&quot;</bucket>
              <bucket>&quot;Prince-Arthur / du Parc&quot;</bucket>
              <bucket>&quot;Marie-Anne / St-Hubert&quot;</bucket>
              <bucket>&quot;Henri-Julien / Jarry&quot;</bucket>
              <bucket>&quot;de Darlington / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Fullum / St-Joseph&quot;</bucket>
              <bucket>&quot;Plessis / René-Lévesque&quot;</bucket>
              <bucket>&quot;Prince-Arthur / St-Urbain&quot;</bucket>
              <bucket>&quot;de l&apos;Esplanade / Laurier&quot;</bucket>
              <bucket>&quot;Sherbrooke / Frontenac&quot;</bucket>
              <bucket>&quot;Drummond / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Prince-Arthur / Ste-Famille&quot;</bucket>
              <bucket>&quot;de Gaspé / Dante&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Vincent-d&apos;Indy&quot;</bucket>
              <bucket>&quot;Plessis / Ontario&quot;</bucket>
              <bucket>&quot;Marquette / St-Grégoire&quot;</bucket>
              <bucket>&quot;Roy / St-Laurent&quot;</bucket>
              <bucket>&quot;Chabot / St-Zotique&quot;</bucket>
              <bucket>&quot;Lincoln / du Fort&quot;</bucket>
              <bucket>&quot;Villeneuve / du Parc&quot;</bucket>
              <bucket>&quot;Marché Jean-Talon (Henri-Julien / Jean-Talon)&quot;</bucket>
              <bucket>&quot;de la Roche / St-Joseph&quot;</bucket>
              <bucket>&quot;Fullum / Gilford&quot;</bucket>
              <bucket>&quot;St-André / Ontario&quot;</bucket>
              <bucket>&quot;St-Dominique / Bernard&quot;</bucket>
              <bucket>&quot;Sanguinet / Ontario&quot;</bucket>
              <bucket>&quot;Hutchison / des Pins&quot;</bucket>
              <bucket>&quot;Parthenais / Mont-Royal&quot;</bucket>
              <bucket>&quot;Boyer / Beaubien&quot;</bucket>
              <bucket>&quot;Roy / St-Denis&quot;</bucket>
              <bucket>&quot;Métro Peel (de Maisonneuve / Stanley)&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Jean-Talon&quot;</bucket>
              <bucket>&quot;Boyer / Jean-Talon&quot;</bucket>
              <bucket>&quot;de Bellechasse / de St-Vallier&quot;</bucket>
              <bucket>&quot;de Brébeuf / St-Grégoire&quot;</bucket>
              <bucket>&quot;Chambord / Bélanger&quot;</bucket>
              <bucket>&quot;Jean-Brillant / McKenna&quot;</bucket>
              <bucket>&quot;Henri-Julien / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Napoléon /  St-Dominique&quot;</bucket>
              <bucket>&quot;Peel / avenue des Canadiens de Montréal&quot;</bucket>
              <bucket>&quot;St-Mathieu / Sherbrooke&quot;</bucket>
              <bucket>&quot;Cypress / Peel&quot;</bucket>
              <bucket>&quot;Métro Laurier (Rivard / Laurier)&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Clark&quot;</bucket>
              <bucket>&quot;St-André / Cherrier&quot;</bucket>
              <bucket>&quot;Hôpital Maisonneuve-Rosemont (Rosemont / Chatelain)&quot;</bucket>
              <bucket>&quot;Drolet / Laurier&quot;</bucket>
              <bucket>&quot;Duluth / St-Laurent&quot;</bucket>
              <bucket>&quot;10e avenue / Masson&quot;</bucket>
              <bucket>&quot;Coloniale / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Square Phillips&quot;</bucket>
              <bucket>&quot;Hutchison / Fairmount&quot;</bucket>
              <bucket>&quot;St-André / Laurier&quot;</bucket>
              <bucket>&quot;de Bordeaux /Gilford&quot;</bucket>
              <bucket>&quot;Papineau / René-Lévesque&quot;</bucket>
              <bucket>&quot;Clark / Guilbault&quot;</bucket>
              <bucket>&quot;University / des Pins&quot;</bucket>
              <bucket>&quot;Fabre / Beaubien&quot;</bucket>
              <bucket>&quot;Marmier / St-Denis&quot;</bucket>
              <bucket>&quot;Métro Mont-Royal (Rivard / du Mont-Royal)&quot;</bucket>
              <bucket>&quot;4e avenue / Masson&quot;</bucket>
              <bucket>&quot;Ste-Famille / Sherbrooke&quot;</bucket>
              <bucket>&quot;St-Dominique / Rachel&quot;</bucket>
              <bucket>&quot;Vallières / St-Laurent&quot;</bucket>
              <bucket>&quot;7e avenue / St-Joseph&quot;</bucket>
              <bucket>&quot;Metcalfe / du Square Dorchester&quot;</bucket>
              <bucket>&quot;Mozart / St-Laurent&quot;</bucket>
              <bucket>&quot;Maguire / Henri-Julien&quot;</bucket>
              <bucket>&quot;Milton / University&quot;</bucket>
              <bucket>&quot;Clark / Laurier&quot;</bucket>
              <bucket>&quot;de Lanaudière / Bélanger&quot;</bucket>
              <bucket>&quot;de l&apos;Esplanade / Fairmount&quot;</bucket>
              <bucket>&quot;Berri / Cherrier&quot;</bucket>
              <bucket>&quot;St-André / St-Grégoire&quot;</bucket>
              <bucket>&quot;Crescent / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Beaudry / Sherbrooke&quot;</bucket>
              <bucket>&quot;St-Alexandre / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Chambord / Laurier&quot;</bucket>
              <bucket>&quot;St-Germain / Hochelaga&quot;</bucket>
              <bucket>&quot;Émile-Duployé / Sherbrooke&quot;</bucket>
              <bucket>&quot;Angus (Molson / William-Tremblay)&quot;</bucket>
              <bucket>&quot;Messier / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Tupper / Atwater&quot;</bucket>
              <bucket>&quot;Pontiac / Gilford&quot;</bucket>
              <bucket>&quot;Dandurand / de Lorimier&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Sherbrooke&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Ste-Élisabeth&quot;</bucket>
              <bucket>&quot;Clark / Rachel&quot;</bucket>
              <bucket>&quot;Milton / Clark&quot;</bucket>
              <bucket>&quot;1ère avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Mansfield / Sherbrooke&quot;</bucket>
              <bucket>&quot;Métro Rosemont (Rosemont / de St-Vallier)&quot;</bucket>
              <bucket>&quot;Gauthier / De Lorimier&quot;</bucket>
              <bucket>&quot;St-Denis / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Boyer / Bélanger&quot;</bucket>
              <bucket>&quot;Chabot / du Mont-Royal&quot;</bucket>
              <bucket>&quot;St-Cuthbert / St-Urbain&quot;</bucket>
              <bucket>&quot;Casgrain / Mozart&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Roy&quot;</bucket>
              <bucket>&quot;9e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Berri / Jean-Talon&quot;</bucket>
              <bucket>&quot;Marquette / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Davaar / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Garnier / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Milton / du Parc&quot;</bucket>
              <bucket>&quot;Métro Bonaventure (de la Gauchetière / Mansfield)&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Aylmer&quot;</bucket>
              <bucket>&quot;Alexandre-DeSève / de Maisonneuve&quot;</bucket>
              <bucket>&quot;de Chateaubriand / Beaubien&quot;</bucket>
              <bucket>&quot;Metcalfe / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Berri / Gilford&quot;</bucket>
              <bucket>&quot;de Bordeaux / Marie-Anne&quot;</bucket>
              <bucket>&quot;Hélène-Baillargeon / St-Denis&quot;</bucket>
              <bucket>&quot;Chapleau / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Clark / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Ste-Catherine / McGill College&quot;</bucket>
              <bucket>&quot;St-Dominique / St-Viateur&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Mansfield&quot;</bucket>
              <bucket>&quot;Mansfield / René-Lévesque&quot;</bucket>
              <bucket>&quot;Alexandra / Waverly&quot;</bucket>
              <bucket>&quot;Resther / St-Joseph&quot;</bucket>
              <bucket>&quot;du Président-Kennedy / McGill College&quot;</bucket>
              <bucket>&quot;Berri / Sherbrooke&quot;</bucket>
              <bucket>&quot;Bélanger / St-Denis&quot;</bucket>
              <bucket>&quot;de Champlain / Ontario&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Robert-Bourassa&quot;</bucket>
              <bucket>&quot;de Bordeaux / Beaubien&quot;</bucket>
              <bucket>&quot;Metcalfe / Ste-Catherine&quot;</bucket>
              <bucket>&quot;du Square Ahmerst / Wolfe&quot;</bucket>
              <bucket>&quot;Mansfield / Ste-Catherine&quot;</bucket>
              <bucket>&quot;de Bordeaux / Sherbrooke&quot;</bucket>
              <bucket>&quot;de la Gauchetière / Robert-Bourassa&quot;</bucket>
              <bucket>&quot;Métro Lucien-L&apos;Allier (Lucien l&apos;Allier / Argyle)&quot;</bucket>
              <bucket>&quot;Cathcart / Union&quot;</bucket>
              <bucket>&quot;President-Kennedy / Robert Bourassa&quot;</bucket>
              <bucket>&quot;University / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Union / President-Kennedy&quot;</bucket>
              <bucket>&quot;Union / René-Lévesque&quot;</bucket>
              <bucket>&quot;Belmont / du Beaver Hall&quot;</bucket>
              <bucket>&quot;de l&apos;Église / de Verdun&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:6]' included-values='in-range'>
            <min>0.13300000000000001</min>
            <max>0.30196707589285721</max>
          </filter>
          <slices>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]</column>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:6]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='171' />
            <format attr='text-format' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:6]' value='p0.00%' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:6]' value='AGG(% Round Trips'>
              <formatted-text>
                <run>AGG(% Round Trips</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[attr:code:qk]' />
              <text column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:qk:6]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{837B2256-C4E0-4981-A0F0-9557565EBA3B}' />
    </worksheet>
    <worksheet name='Q2.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Duration of Trips by Member Status (Fig 2.2)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The plot of total number of trips within 5 minute interval bins of trip duration. Color indicates member vs non-member portions. Width proportional to percentage indicating proportion of member to non-member trip for the designated bin value.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pl2rxs0z2c3061f87ao90woyvp3'>
            <column caption='Duration Mins' datatype='real' name='[Calculation_2618843249007489028]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column aggregation='None' caption='Duration Mins (bin)' datatype='integer' name='[Duration Mins (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_2618843249007489028]' peg='0' size='5' />
            </column>
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Is Member (Dimension)' datatype='integer' name='[is_member]' role='dimension' type='ordinal' />
            <column-instance column='[Duration Mins (bin)]' derivation='None' name='[none:Duration Mins (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[is_member]' derivation='None' name='[none:is_member:ok]' pivot='key' type='ordinal' />
            <column-instance column='[id]' derivation='CountD' name='[pcto:ctd:id:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_2618843249007489028]' derivation='Sum' name='[pcto:sum:Calculation_2618843249007489028:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]' field-type='quantitative' max='120.0' min='-5.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]' scope='rows' value='Numbers of Trips' />
            <encoding attr='space' class='0' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]' field-type='quantitative' max='2770575' min='-82462' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]' scope='cols' value='Trip Duration (Minutes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-orientation' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]' value='-90' />
            <format attr='vertical-align' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]' value='auto' />
            <format attr='text-align' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]' value='auto' />
            <format attr='wrap' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]' value='auto' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]' value='Is Member'>
              <formatted-text>
                <run>Is Member</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]' />
              <size column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]' />
              <text column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.8680663108825684' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</rows>
        <cols>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[Duration Sec (bin)]</column>
        </show-full-range>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>85676</value>
                <value>11</value>
                <value>0</value>
                <value>0.35626486585386136</value>
                <value>0.3562966180910464</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.444444' y='31' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>103701</value>
                <value>10</value>
                <value>0</value>
                <value>0.34386471027107685</value>
                <value>0.34403820021644171</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.625' y='28' />
          </mark-label>
          <mark-label id='2'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>117524</value>
                <value>9</value>
                <value>0</value>
                <value>0.31560912206073494</value>
                <value>0.31591093175966578</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.5' y='27' />
          </mark-label>
          <mark-label id='3'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>128492</value>
                <value>8</value>
                <value>0</value>
                <value>0.28638611709798134</value>
                <value>0.28668911398087193</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.428571' y='28' />
          </mark-label>
          <mark-label id='4'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>136561</value>
                <value>7</value>
                <value>0</value>
                <value>0.25487165991978394</value>
                <value>0.25523644809362717</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.5' y='27' />
          </mark-label>
          <mark-label id='5'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>144108</value>
                <value>6</value>
                <value>0</value>
                <value>0.22411645321576038</value>
                <value>0.22451713703225809</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.666667' y='29' />
          </mark-label>
          <mark-label id='6'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>149682</value>
                <value>5</value>
                <value>0</value>
                <value>0.19300209142977978</value>
                <value>0.19349114059711164</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.6' y='28' />
          </mark-label>
          <mark-label id='7'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>148586</value>
                <value>4</value>
                <value>0</value>
                <value>0.16090731688299875</value>
                <value>0.16155225784055832</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.75' y='27' />
          </mark-label>
          <mark-label id='8'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>135337</value>
                <value>3</value>
                <value>0</value>
                <value>0.12376916274258937</value>
                <value>0.12475671102259883</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.25' y='28' />
          </mark-label>
          <mark-label id='9'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>51042</value>
                <value>1</value>
                <value>0</value>
                <value>0.049258212355953845</value>
                <value>0.050494411343300093</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.333333' y='30' />
          </mark-label>
          <mark-label id='10'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>101025</value>
                <value>2</value>
                <value>0</value>
                <value>0.082584736722066496</value>
                <value>0.083952946958516003</value>
              </tuple>
            </tuple-reference>
            <label-position x='1' y='24' />
          </mark-label>
          <mark-label id='11'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>12575</value>
                <value>0</value>
                <value>0</value>
                <value>0.056821005923844037</value>
                <value>0.053335181353875098</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.666667' y='23' />
          </mark-label>
          <mark-label id='12'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>65726</value>
                <value>12</value>
                <value>0</value>
                <value>0.35288180183082335</value>
                <value>0.35280463020337199</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.5' y='28' />
          </mark-label>
          <mark-label id='13'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>45789</value>
                <value>13</value>
                <value>0</value>
                <value>0.33205218387637148</value>
                <value>0.33199399424257636</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.5' y='29' />
          </mark-label>
          <mark-label id='14'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>32924</value>
                <value>14</value>
                <value>0</value>
                <value>0.32502443310265849</value>
                <value>0.32500372305394848</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.375' y='28' />
          </mark-label>
          <mark-label id='15'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>24394</value>
                <value>15</value>
                <value>0</value>
                <value>0.32495004662315174</value>
                <value>0.32493861143495562</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.625' y='27' />
          </mark-label>
          <mark-label id='16'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>19223</value>
                <value>16</value>
                <value>0</value>
                <value>0.33908978655847594</value>
                <value>0.33921595918467196</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.625' y='27' />
          </mark-label>
          <mark-label id='17'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>15392</value>
                <value>17</value>
                <value>0</value>
                <value>0.36720185127752464</value>
                <value>0.36733279836087285</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.555556' y='28' />
          </mark-label>
          <mark-label id='18'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>12332</value>
                <value>18</value>
                <value>0</value>
                <value>0.3998832646972989</value>
                <value>0.40000783218878905</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.444444' y='26' />
          </mark-label>
          <mark-label id='19'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:id:qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):qk]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:ctd:id:qk:2]</field>
                  <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_2618843249007489028:qk:2]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>10276</value>
                <value>19</value>
                <value>0</value>
                <value>0.47027595991030158</value>
                <value>0.47059535618962117</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.454545' y='28' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{4774CA10-20A8-4C02-8C61-CF631C0D72B4}' />
    </worksheet>
    <worksheet name='Q2.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Trip Duration per Station (Fig 2.3)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Map based on Longitude and Latitude. Colour shows average of duration in minutes. The data is filtered on Station Names.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0pl2rxs0z2c3061f87ao90woyvp3'>
            <column aggregation='Avg' caption='Duration Mins (Average)' datatype='real' name='[Duration Mins (copy)_1563593561621929989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Duration Mins (copy)_1563593561621929989]' derivation='Avg' name='[avg:Duration Mins (copy)_1563593561621929989:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[Action (Name)]'>
            <groupfilter function='level-members' level='[name]' user:ui-action-filter='[Action3_72F8AA73475C478787D357F9D9EF6A36]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[Action (Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:longitude:qk]' field-type='quantitative' max='-8176052.2740081688' min='-8200999.6767335618' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:latitude:qk]' field-type='quantitative' max='5708595.7932944121' min='5697152.5950971115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[avg:Duration Mins (copy)_1563593561621929989:qk]' num-steps='5' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ae123a</color>
                <color>#bf193b</color>
                <color>#cf253d</color>
                <color>#dc3340</color>
                <color>#e74445</color>
                <color>#ef574c</color>
                <color>#f46a57</color>
                <color>#f77b66</color>
                <color>#fb8d75</color>
                <color>#fc9d89</color>
                <color>#feac9d</color>
                <color>#d9d9d9</color>
                <color>#c5c5c5</color>
                <color>#b1b1b1</color>
                <color>#9d9d9d</color>
                <color>#8a8a8a</color>
                <color>#767676</color>
                <color>#626262</color>
                <color>#4e4e4e</color>
                <color>#3b3b3b</color>
                <color>#272727</color>
                <color>#131313</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[avg:Duration Mins (copy)_1563593561621929989:qk]' />
              <tooltip column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[attr:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='134' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:latitude:qk]</rows>
        <cols>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{8FE1D8EC-9614-4AE5-AFBE-94817CFE078D}' />
    </worksheet>
    <worksheet name='Q3.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Revenue for Single Trips (Fig 3.1)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Revenue and total % revenue distributed by bin length. Calculated based on pricing model.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pl2rxs0z2c3061f87ao90woyvp3'>
            <column caption='Revenue' datatype='real' name='[Calculation_1563593561652801544]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF([Calculation_2618843249007489028] &lt;= 30) THEN 2.99&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;30) AND ([Calculation_2618843249007489028] &lt;= 45) THEN 4.79&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;45) AND ([Calculation_2618843249007489028] &lt;= 60) THEN 7.79&#13;&#10;ELSE NULL&#13;&#10;END' />
            </column>
            <column caption='Trip Length Bin' datatype='string' name='[Calculation_2559733504488513538]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([Calculation_2618843249007489028] &lt;= 30) THEN &quot;30 Mins or Less&quot;&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;30) AND ([Calculation_2618843249007489028] &lt;= 45) THEN &quot;30 to 45 Mins&quot;&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;45) AND ([Calculation_2618843249007489028] &lt;= 60) THEN &quot;45 to 60 Mins&quot;&#13;&#10;ELSE NULL&#13;&#10;END' />
            </column>
            <column caption='Duration Mins' datatype='real' name='[Calculation_2618843249007489028]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='Is Member (Measure)' datatype='integer' name='[Is Member (copy)_2905947724885282821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[is_member]' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_E436E804F5824BE1A09B6159A4888209]' role='measure' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Is Member (Dimension)' datatype='integer' name='[is_member]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2559733504488513538]' derivation='None' name='[none:Calculation_2559733504488513538:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2618843249007489028]' derivation='None' name='[none:Calculation_2618843249007489028:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Is Member (copy)_2905947724885282821]' derivation='None' name='[none:Is Member (copy)_2905947724885282821:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1563593561652801544]' derivation='Sum' name='[pcto:sum:Calculation_1563593561652801544:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1563593561652801544]' derivation='Sum' name='[sum:Calculation_1563593561652801544:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_1563593561652801544:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_1563593561652801544:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2618843249007489028:qk]' included-values='in-range'>
            <min>1.0166999999999999</min>
            <max>60.0</max>
          </filter>
          <filter class='categorical' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Is Member (copy)_2905947724885282821:ok]'>
            <groupfilter function='member' level='[none:Is Member (copy)_2905947724885282821:ok]' member='0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Is Member (copy)_2905947724885282821:ok]</column>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2618843249007489028:qk]</column>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[:Measure Names]' value='92' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2559733504488513538:nk]' value='136' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2618843249007489028:qk]' num-steps='3' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2559733504488513538:nk]</rows>
        <cols>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{420A35D1-0B6C-473F-A708-0124C82BE356}' />
    </worksheet>
    <worksheet name='Q3.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hourly Revenue Per Weekday (Fig 3.3)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Revenue broken down by hour and weekday, color indicates level of revenue generated. Data filtered for duration between 1 and 30 minutes.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pl2rxs0z2c3061f87ao90woyvp3'>
            <column caption='Revenue' datatype='real' name='[Calculation_1563593561652801544]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF([Calculation_2618843249007489028] &lt;= 30) THEN 2.99&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;30) AND ([Calculation_2618843249007489028] &lt;= 45) THEN 4.79&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;45) AND ([Calculation_2618843249007489028] &lt;= 60) THEN 7.79&#13;&#10;ELSE NULL&#13;&#10;END' />
            </column>
            <column caption='Duration Mins' datatype='real' name='[Calculation_2618843249007489028]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2618843249007489028]' derivation='None' name='[none:Calculation_2618843249007489028:qk]' pivot='key' type='quantitative' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1563593561652801544]' derivation='Sum' name='[sum:Calculation_1563593561652801544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[hr:start_date:ok]'>
            <groupfilter function='level-members' level='[hr:start_date:ok]' />
          </filter>
          <filter class='quantitative' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2618843249007489028:qk]' included-values='in-range'>
            <min>1.0166999999999999</min>
            <max>30.0</max>
          </filter>
          <slices>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2618843249007489028:qk]</column>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[hr:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[wd:start_date:ok]' value='74' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[hr:start_date:ok]' value='112' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[hr:start_date:ok]' value='right' />
            <format attr='wrap' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[hr:start_date:ok]' value='auto' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]' num-steps='5' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]' value='Revenue'>
              <formatted-text>
                <run>Revenue</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[hr:start_date:ok]' value='HOUR'>
              <formatted-text>
                <run>HOUR</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]' />
              <text column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[hr:start_date:ok]</rows>
        <cols>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[wd:start_date:ok]</cols>
      </table>
      <simple-id uuid='{85B09C37-282F-4DBB-A40B-A6137E2E2C4C}' />
    </worksheet>
    <worksheet name='Q4(2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Trip Duration and Revenue by Station (Fig 4.1)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0pl2rxs0z2c3061f87ao90woyvp3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pl2rxs0z2c3061f87ao90woyvp3'>
            <column caption='Revenue' datatype='real' name='[Calculation_1563593561652801544]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF([Calculation_2618843249007489028] &lt;= 30) THEN 2.99&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;30) AND ([Calculation_2618843249007489028] &lt;= 45) THEN 4.79&#13;&#10;ELSEIF([Calculation_2618843249007489028] &gt;45) AND ([Calculation_2618843249007489028] &lt;= 60) THEN 7.79&#13;&#10;ELSE NULL&#13;&#10;END' />
            </column>
            <column caption='Duration Mins' datatype='real' name='[Calculation_2618843249007489028]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column aggregation='Avg' caption='Duration Mins (Average)' datatype='real' name='[Duration Mins (copy)_1563593561621929989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column-instance column='[Duration Mins (copy)_1563593561621929989]' derivation='Avg' name='[avg:Duration Mins (copy)_1563593561621929989:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1563593561652801544]' derivation='Sum' name='[sum:Calculation_1563593561652801544:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[avg:Duration Mins (copy)_1563593561621929989:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mackay / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Métro Mont-Royal (Rivard / du Mont-Royal)&quot;</bucket>
              <bucket>&quot;Métro Place-des-Arts (de Maisonneuve / de Bleury)&quot;</bucket>
              <bucket>&quot;Métro Laurier (Rivard / Laurier)&quot;</bucket>
              <bucket>&quot;Métro Peel (de Maisonneuve / Stanley)&quot;</bucket>
              <bucket>&quot;Berri / de Maisonneuve&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Clark&quot;</bucket>
              <bucket>&quot;Square St-Louis&quot;</bucket>
              <bucket>&quot;Milton / University&quot;</bucket>
              <bucket>&quot;Métro St-Laurent (de Maisonneuve / St-Laurent)&quot;</bucket>
              <bucket>&quot;de la Commune / Place Jacques-Cartier&quot;</bucket>
              <bucket>&quot;Marquette / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Parc Jeanne Mance (monument à sir George-Étienne Cartier)&quot;</bucket>
              <bucket>&quot;Roy / St-Laurent&quot;</bucket>
              <bucket>&quot;de la Commune / St-Sulpice&quot;</bucket>
              <bucket>&quot;de la Commune / King&quot;</bucket>
              <bucket>&quot;Prince-Arthur / du Parc&quot;</bucket>
              <bucket>&quot;St-Dominique / Rachel&quot;</bucket>
              <bucket>&quot;de l&apos;Esplanade / Laurier&quot;</bucket>
              <bucket>&quot;Clark / Prince-Arthur&quot;</bucket>
              <bucket>&quot;de la Commune / McGill&quot;</bucket>
              <bucket>&quot;Métro Papineau (Cartier / Ste-Catherine)&quot;</bucket>
              <bucket>&quot;Milton / Clark&quot;</bucket>
              <bucket>&quot;Marché Atwater&quot;</bucket>
              <bucket>&quot;de la Commune / Berri&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Robert-Bourassa&quot;</bucket>
              <bucket>&quot;Clark / St-Viateur&quot;</bucket>
              <bucket>&quot;Rachel / de Brébeuf&quot;</bucket>
              <bucket>&quot;Berri / Cherrier&quot;</bucket>
              <bucket>&quot;Garnier / du Mont-Royal&quot;</bucket>
              <bucket>&quot;St-Urbain / René-Lévesque&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Aylmer&quot;</bucket>
              <bucket>&quot;Clark / Rachel&quot;</bucket>
              <bucket>&quot;Émile-Duployé / Sherbrooke&quot;</bucket>
              <bucket>&quot;Ste-Famille / Sherbrooke&quot;</bucket>
              <bucket>&quot;St-Dominique / St-Viateur&quot;</bucket>
              <bucket>&quot;Marquette / Laurier&quot;</bucket>
              <bucket>&quot;St-André / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Chomedey / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Duluth / St-Laurent&quot;</bucket>
              <bucket>&quot;du Mont-Royal / du Parc&quot;</bucket>
              <bucket>&quot;de Chateaubriand / Beaubien&quot;</bucket>
              <bucket>&quot;Bernard / Jeanne-Mance&quot;</bucket>
              <bucket>&quot;Villeneuve / St-Laurent&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Labelle&quot;</bucket>
              <bucket>&quot;Ste-Catherine / McGill College&quot;</bucket>
              <bucket>&quot;Drummond / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Boyer / du Mont-Royal&quot;</bucket>
              <bucket>&quot;de l&apos;Esplanade / Fairmount&quot;</bucket>
              <bucket>&quot;de la Roche / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Pontiac / Gilford&quot;</bucket>
              <bucket>&quot;Rivard / Rachel&quot;</bucket>
              <bucket>&quot;Square Phillips&quot;</bucket>
              <bucket>&quot;Resther / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Milton / Durocher&quot;</bucket>
              <bucket>&quot;Métro Bonaventure (de la Gauchetière / Mansfield)&quot;</bucket>
              <bucket>&quot;Métro Jean-Drapeau&quot;</bucket>
              <bucket>&quot;Roy / St-Christophe&quot;</bucket>
              <bucket>&quot;St-Mathieu /Ste-Catherine&quot;</bucket>
              <bucket>&quot;Roy / St-Denis&quot;</bucket>
              <bucket>&quot;St-André / Cherrier&quot;</bucket>
              <bucket>&quot;Boyer / Beaubien&quot;</bucket>
              <bucket>&quot;Calixa-Lavallée / Sherbrooke&quot;</bucket>
              <bucket>&quot;Laval / Duluth&quot;</bucket>
              <bucket>&quot;Chabot / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Calixa-Lavallée / Rachel&quot;</bucket>
              <bucket>&quot;Parthenais / Mont-Royal&quot;</bucket>
              <bucket>&quot;Berri / Sherbrooke&quot;</bucket>
              <bucket>&quot;de Vendôme / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Montcalm / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Milton / du Parc&quot;</bucket>
              <bucket>&quot;Marché Jean-Talon (Henri-Julien / Jean-Talon)&quot;</bucket>
              <bucket>&quot;Bernard / Clark&quot;</bucket>
              <bucket>&quot;Towers / Ste-Catherine&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Sherbrooke&quot;</bucket>
              <bucket>&quot;Fairmount / St-Dominique&quot;</bucket>
              <bucket>&quot;Vallières / St-Laurent&quot;</bucket>
              <bucket>&quot;Henri-Julien / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Napoléon /  St-Dominique&quot;</bucket>
              <bucket>&quot;Métro Rosemont (Rosemont / de St-Vallier)&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Greene&quot;</bucket>
              <bucket>&quot;de Mentana / Laurier&quot;</bucket>
              <bucket>&quot;de Maisonneuve / Mansfield&quot;</bucket>
              <bucket>&quot;Wolfe / René-Lévesque&quot;</bucket>
              <bucket>&quot;Marquette / Rachel&quot;</bucket>
              <bucket>&quot;de Bullion / St-Joseph&quot;</bucket>
              <bucket>&quot;Hutchison / Sherbrooke&quot;</bucket>
              <bucket>&quot;St-André / Duluth&quot;</bucket>
              <bucket>&quot;St-Jacques / Gauvin&quot;</bucket>
              <bucket>&quot;de Brébeuf / Laurier&quot;</bucket>
              <bucket>&quot;St-Hubert / Rachel&quot;</bucket>
              <bucket>&quot;Fullum / Sherbrooke &quot;</bucket>
              <bucket>&quot;St-Cuthbert / St-Urbain&quot;</bucket>
              <bucket>&quot;Square Victoria&quot;</bucket>
              <bucket>&quot;Gauthier / Papineau&quot;</bucket>
              <bucket>&quot;Notre-Dame / de la Montagne&quot;</bucket>
              <bucket>&quot;Boyer / Rosemont&quot;</bucket>
              <bucket>&quot;Metcalfe / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Chambord / Laurier&quot;</bucket>
              <bucket>&quot;Murray / William&quot;</bucket>
              <bucket>&quot;Métro Charlevoix (Centre / Charlevoix)&quot;</bucket>
              <bucket>&quot;Villeneuve / du Parc&quot;</bucket>
              <bucket>&quot;de la Montagne / Sherbrooke&quot;</bucket>
              <bucket>&quot;de la Gauchetière / Robert-Bourassa&quot;</bucket>
              <bucket>&quot;Duluth / St-Denis&quot;</bucket>
              <bucket>&quot;St-André / Laurier&quot;</bucket>
              <bucket>&quot;de Darlington / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Laval / Rachel&quot;</bucket>
              <bucket>&quot;Notre-Dame / Peel&quot;</bucket>
              <bucket>&quot;McGill / des Récollets&quot;</bucket>
              <bucket>&quot;Pierre-de-Coubertin / Aird&quot;</bucket>
              <bucket>&quot;Waverly / Fairmount&quot;</bucket>
              <bucket>&quot;Jeanne-Mance / St-Viateur&quot;</bucket>
              <bucket>&quot;Métro Place-d&apos;Armes (Viger / St-Urbain)&quot;</bucket>
              <bucket>&quot;Bishop / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Peel / avenue des Canadiens de Montréal&quot;</bucket>
              <bucket>&quot;Bloomfield / Bernard&quot;</bucket>
              <bucket>&quot;St-Dominique / Maguire&quot;</bucket>
              <bucket>&quot;Villeneuve / de l&apos;Hôtel-de-Ville&quot;</bucket>
              <bucket>&quot;Métro Pie-IX (Pierre-de-Coubertin / Pie-IX)&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Vincent-d&apos;Indy&quot;</bucket>
              <bucket>&quot;Marie-Anne / de la Roche&quot;</bucket>
              <bucket>&quot;Place de la paix (Pl. du marché / St-Dominique)&quot;</bucket>
              <bucket>&quot;Dorion / Ontario&quot;</bucket>
              <bucket>&quot;Cathcart / Union&quot;</bucket>
              <bucket>&quot;Sanguinet / Ontario&quot;</bucket>
              <bucket>&quot;Prince-Arthur / St-Urbain&quot;</bucket>
              <bucket>&quot;Hutchison/ Prince-Arthur&quot;</bucket>
              <bucket>&quot;Square Sir-Georges-Étienne-Cartier / Léa Roback&quot;</bucket>
              <bucket>&quot;St-Dominique / Jean-Talon&quot;</bucket>
              <bucket>&quot;McGill / Place d&apos;Youville&quot;</bucket>
              <bucket>&quot;du Parc-La Fontaine / Duluth&quot;</bucket>
              <bucket>&quot;Gary Carter / St-Laurent&quot;</bucket>
              <bucket>&quot;St-Alexandre / Ste-Catherine&quot;</bucket>
              <bucket>&quot;des Érables / Rachel&quot;</bucket>
              <bucket>&quot;Duluth / de l&apos;Esplanade&quot;</bucket>
              <bucket>&quot;Tupper / Atwater&quot;</bucket>
              <bucket>&quot;Laurier / de Bordeaux&quot;</bucket>
              <bucket>&quot;de Champlain / Ontario&quot;</bucket>
              <bucket>&quot;Messier / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Gilford / de Brébeuf&quot;</bucket>
              <bucket>&quot;Victoria / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Coloniale / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Casgrain / de Bellechasse&quot;</bucket>
              <bucket>&quot;St-André / Ontario&quot;</bucket>
              <bucket>&quot;de Brébeuf / St-Grégoire&quot;</bucket>
              <bucket>&quot;Alexandre-DeSève / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Hutchison / des Pins&quot;</bucket>
              <bucket>&quot;Beaudry / Ontario&quot;</bucket>
              <bucket>&quot;Plessis / Ontario&quot;</bucket>
              <bucket>&quot;Crescent / René-Lévesque&quot;</bucket>
              <bucket>&quot;Sanguinet / Ste-Catherine&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Roy&quot;</bucket>
              <bucket>&quot;Villeneuve / St-Urbain&quot;</bucket>
              <bucket>&quot;Boyer / St-Zotique&quot;</bucket>
              <bucket>&quot;Valois / Ontario&quot;</bucket>
              <bucket>&quot;4e avenue / Masson&quot;</bucket>
              <bucket>&quot;de Bordeaux / Rachel&quot;</bucket>
              <bucket>&quot;Mentana / Marie-Anne&quot;</bucket>
              <bucket>&quot;de Gaspé / Fairmount&quot;</bucket>
              <bucket>&quot;Augustin-Cantin / Shearer&quot;</bucket>
              <bucket>&quot;Mansfield / René-Lévesque&quot;</bucket>
              <bucket>&quot;Gatineau / Swail&quot;</bucket>
              <bucket>&quot;Queen / Wellington&quot;</bucket>
              <bucket>&quot;Metcalfe / Ste-Catherine&quot;</bucket>
              <bucket>&quot;de Lanaudière / Marie-Anne&quot;</bucket>
              <bucket>&quot;Mansfield / Sherbrooke&quot;</bucket>
              <bucket>&quot;Édouard-Montpetit / Stirling&quot;</bucket>
              <bucket>&quot;Métro Outremont (Wiseman / Van Horne)&quot;</bucket>
              <bucket>&quot;Métro Joliette  (Joliette / Hochelaga)&quot;</bucket>
              <bucket>&quot;Jean-Brillant / McKenna&quot;</bucket>
              <bucket>&quot;Ste-Catherine / St-Denis&quot;</bucket>
              <bucket>&quot;Garnier / St-Joseph&quot;</bucket>
              <bucket>&quot;Terrasse Mercure / Fullum&quot;</bucket>
              <bucket>&quot;Ann / William&quot;</bucket>
              <bucket>&quot;du Parc-La Fontaine / Roy&quot;</bucket>
              <bucket>&quot;Berri / Jean-Talon&quot;</bucket>
              <bucket>&quot;de Bullion / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Omer-Lavallée / du Midway&quot;</bucket>
              <bucket>&quot;Guy / Notre-Dame&quot;</bucket>
              <bucket>&quot;University / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Crescent / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Parc Père-Marquette (Chambord / Rosemont)&quot;</bucket>
              <bucket>&quot;Marie-Anne / St-Hubert&quot;</bucket>
              <bucket>&quot;Mansfield / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Alma / Beaubien&quot;</bucket>
              <bucket>&quot;Clark / Laurier&quot;</bucket>
              <bucket>&quot;Ste-Famille / des Pins&quot;</bucket>
              <bucket>&quot;St-Dominique / St-Zotique&quot;</bucket>
              <bucket>&quot;St-Jacques / St-Pierre&quot;</bucket>
              <bucket>&quot;St-Zotique / Clark&quot;</bucket>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Drummond / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Bélanger / St-Denis&quot;</bucket>
              <bucket>&quot;Dézéry / Ontario&quot;</bucket>
              <bucket>&quot;10e avenue / Masson&quot;</bucket>
              <bucket>&quot;de Bordeaux /Gilford&quot;</bucket>
              <bucket>&quot;1ère avenue / Masson&quot;</bucket>
              <bucket>&quot;Boyer / Jean-Talon&quot;</bucket>
              <bucket>&quot;Jeanne Mance / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Queen / Ottawa&quot;</bucket>
              <bucket>&quot;Angus (Molson / William-Tremblay)&quot;</bucket>
              <bucket>&quot;de Bordeaux / Sherbrooke&quot;</bucket>
              <bucket>&quot;Boyer / Bélanger&quot;</bucket>
              <bucket>&quot;St-André / St-Antoine&quot;</bucket>
              <bucket>&quot;Métro Parc  (Ogilvy / Hutchison)&quot;</bucket>
              <bucket>&quot;St-Jacques / St-Laurent&quot;</bucket>
              <bucket>&quot;St-Nicolas / Place d&apos;Youville&quot;</bucket>
              <bucket>&quot;Cartier / Marie-Anne&quot;</bucket>
              <bucket>&quot;de Montmorency / Richardson&quot;</bucket>
              <bucket>&quot;des Seigneurs / Workman&quot;</bucket>
              <bucket>&quot;Resther / St-Joseph&quot;</bucket>
              <bucket>&quot;Cartier / St-Joseph&quot;</bucket>
              <bucket>&quot;University / des Pins&quot;</bucket>
              <bucket>&quot;Ontario / du Havre&quot;</bucket>
              <bucket>&quot;de Bordeaux / Beaubien&quot;</bucket>
              <bucket>&quot;St-Antoine / St-François-Xavier&quot;</bucket>
              <bucket>&quot;de Lanaudière / Gilford&quot;</bucket>
              <bucket>&quot;de Bordeaux / Masson&quot;</bucket>
              <bucket>&quot;Métro Préfontaine (Moreau / Hochelaga)&quot;</bucket>
              <bucket>&quot;de Bellechasse / de St-Vallier&quot;</bucket>
              <bucket>&quot;Duvernay / Charlevoix&quot;</bucket>
              <bucket>&quot;Bloomfield / Van Horne&quot;</bucket>
              <bucket>&quot;St-Marc / Sherbrooke&quot;</bucket>
              <bucket>&quot;Berri / St-Grégoire&quot;</bucket>
              <bucket>&quot;Métro Côte-des-Neiges (Lacombe / de la Côte-des-Neiges)&quot;</bucket>
              <bucket>&quot;Marquette / St-Grégoire&quot;</bucket>
              <bucket>&quot;Métro Verdun (Willibrord / de Verdun)&quot;</bucket>
              <bucket>&quot;Chambord / Beaubien&quot;</bucket>
              <bucket>&quot;de la Roche /  de Bellechasse&quot;</bucket>
              <bucket>&quot;Aylwin / Ontario&quot;</bucket>
              <bucket>&quot;Henri-Julien / de Castelnau&quot;</bucket>
              <bucket>&quot;Drolet / Laurier&quot;</bucket>
              <bucket>&quot;Cypress / Peel&quot;</bucket>
              <bucket>&quot;Place Jean-Paul Riopelle (Viger / de Bleury)&quot;</bucket>
              <bucket>&quot;Mozart / St-Laurent&quot;</bucket>
              <bucket>&quot;de la Roche / St-Joseph&quot;</bucket>
              <bucket>&quot;Atwater / Sherbrooke&quot;</bucket>
              <bucket>&quot;Notre-Dame / St-Gabriel&quot;</bucket>
              <bucket>&quot;Hutchison / Van Horne&quot;</bucket>
              <bucket>&quot;Chapleau / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Dandurand / Papineau&quot;</bucket>
              <bucket>&quot;Gauthier / De Lorimier&quot;</bucket>
              <bucket>&quot;Waverly / St-Zotique&quot;</bucket>
              <bucket>&quot;Drolet / Beaubien&quot;</bucket>
              <bucket>&quot;Ross / de l&apos;Église&quot;</bucket>
              <bucket>&quot;Robin / de la Visitation&quot;</bucket>
              <bucket>&quot;Lambert-Closse / Tupper&quot;</bucket>
              <bucket>&quot;Victoria Hall&quot;</bucket>
              <bucket>&quot;St-Denis / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Square Sir-Georges-Etienne-Cartier / Ste-Émilie&quot;</bucket>
              <bucket>&quot;Hôtel-de-Ville 2 (du Champs-de-Mars / Gosford)&quot;</bucket>
              <bucket>&quot;Marché Maisonneuve&quot;</bucket>
              <bucket>&quot;Clark / Evans&quot;</bucket>
              <bucket>&quot;du Président-Kennedy / McGill College&quot;</bucket>
              <bucket>&quot;Logan / Fullum&quot;</bucket>
              <bucket>&quot;Sanguinet / de Maisonneuve&quot;</bucket>
              <bucket>&quot;Métro Lucien-L&apos;Allier (Lucien l&apos;Allier / Argyle)&quot;</bucket>
              <bucket>&quot;Louis Hémon / Rosemont&quot;</bucket>
              <bucket>&quot;des Érables / Gauthier&quot;</bucket>
              <bucket>&quot;Métro Place St-Henri (St-Ferdinand / St-Jacques)&quot;</bucket>
              <bucket>&quot;Rouen / Fullum&quot;</bucket>
              <bucket>&quot;Métro Lasalle (de Rushbrooke / Caisse)&quot;</bucket>
              <bucket>&quot;Cartier / Rosemont&quot;</bucket>
              <bucket>&quot;de Chambly / Rachel&quot;</bucket>
              <bucket>&quot;Plessis / René-Lévesque&quot;</bucket>
              <bucket>&quot;Belmont / du Beaver Hall&quot;</bucket>
              <bucket>&quot;Larivière / de Lorimier&quot;</bucket>
              <bucket>&quot;Jardin Botanique (Pie-IX / Sherbrooke)&quot;</bucket>
              <bucket>&quot;Island / Centre&quot;</bucket>
              <bucket>&quot;Joseph-Manceau / René-Lévesque&quot;</bucket>
              <bucket>&quot;Gascon / Rachel&quot;</bucket>
              <bucket>&quot;Sherbrooke / Frontenac&quot;</bucket>
              <bucket>&quot;Lincoln / du Fort&quot;</bucket>
              <bucket>&quot;Wolfe / Robin&quot;</bucket>
              <bucket>&quot;de St-Vallier / St-Zotique&quot;</bucket>
              <bucket>&quot;Hôtel-de-Ville (du Champs-de-Mars / Gosford)&quot;</bucket>
              <bucket>&quot;Fabre / Beaubien&quot;</bucket>
              <bucket>&quot;Parthenais / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Alexandre-de-Sève / la Fontaine&quot;</bucket>
              <bucket>&quot;Parthenais / St-Joseph&quot;</bucket>
              <bucket>&quot;Marmier / St-Denis&quot;</bucket>
              <bucket>&quot;Clark / Guilbault&quot;</bucket>
              <bucket>&quot;Hutchison / Fairmount&quot;</bucket>
              <bucket>&quot;Dandurand / de Lorimier&quot;</bucket>
              <bucket>&quot;Métro Villa-Maria (Décarie / de Monkland)&quot;</bucket>
              <bucket>&quot;Chambord / Bélanger&quot;</bucket>
              <bucket>&quot;Desjardins / de Rouen&quot;</bucket>
              <bucket>&quot;Drolet / St-Zotique&quot;</bucket>
              <bucket>&quot;1ère avenue / Rosemont&quot;</bucket>
              <bucket>&quot;St-André / St-Grégoire&quot;</bucket>
              <bucket>&quot;Marquette / Jean-Talon&quot;</bucket>
              <bucket>&quot;Poupart / Ontario&quot;</bucket>
              <bucket>&quot;Union / René-Lévesque&quot;</bucket>
              <bucket>&quot;Hillside / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Gounod / St-Denis&quot;</bucket>
              <bucket>&quot;President-Kennedy / Robert Bourassa&quot;</bucket>
              <bucket>&quot;du Square Ahmerst / Wolfe&quot;</bucket>
              <bucket>&quot;Wilderton  / Van Horne&quot;</bucket>
              <bucket>&quot;Fabre / St-Zotique&quot;</bucket>
              <bucket>&quot;Viger / Jeanne Mance&quot;</bucket>
              <bucket>&quot;du Rosaire / St-Hubert&quot;</bucket>
              <bucket>&quot;Henri-Julien / Villeray&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Belllechasse&quot;</bucket>
              <bucket>&quot;Métro Georges-Vanier (St-Antoine / Canning)&quot;</bucket>
              <bucket>&quot;Lucien L&apos;Allier / St-Jacques&quot;</bucket>
              <bucket>&quot;Fortune / Wellington&quot;</bucket>
              <bucket>&quot;Faillon / St-Denis&quot;</bucket>
              <bucket>&quot;Elsdale / Louis-Hébert&quot;</bucket>
              <bucket>&quot;Marcil / Sherbrooke&quot;</bucket>
              <bucket>&quot;Parc Rosemont (Dandurand / d&apos;Iberville)&quot;</bucket>
              <bucket>&quot;Charlevoix / Lionel-Groulx&quot;</bucket>
              <bucket>&quot;Place du Commerce&quot;</bucket>
              <bucket>&quot;Maguire / Henri-Julien&quot;</bucket>
              <bucket>&quot;de la Roche / Everett&quot;</bucket>
              <bucket>&quot;Palm / St-Remi&quot;</bucket>
              <bucket>&quot;Georges-Vanier / Notre-Dame&quot;</bucket>
              <bucket>&quot;de Gaspé / St-Viateur&quot;</bucket>
              <bucket>&quot;Hélène-Baillargeon / St-Denis&quot;</bucket>
              <bucket>&quot;Grand Trunk / Hibernia&quot;</bucket>
              <bucket>&quot;St-Urbain / de la Gauchetière&quot;</bucket>
              <bucket>&quot;3e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Alexandra / Waverly&quot;</bucket>
              <bucket>&quot;Casgrain / Mozart&quot;</bucket>
              <bucket>&quot;Hutchison / Beaubien&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Dézéry&quot;</bucket>
              <bucket>&quot;Chambord / Jean-Talon&quot;</bucket>
              <bucket>&quot;de Gaspé / Dante&quot;</bucket>
              <bucket>&quot;Briand / le Caron&quot;</bucket>
              <bucket>&quot;Metcalfe / du Square Dorchester&quot;</bucket>
              <bucket>&quot;Métro Sauvé (Berri / Sauvé)&quot;</bucket>
              <bucket>&quot;Poupart / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Grand Boulevard / Sherbrooke&quot;</bucket>
              <bucket>&quot;Ryde / Charlevoix&quot;</bucket>
              <bucket>&quot;d&apos;Orléans / Masson&quot;</bucket>
              <bucket>&quot;de Gaspé / de Liège&quot;</bucket>
              <bucket>&quot;Fullum / St-Joseph&quot;</bucket>
              <bucket>&quot;Parc J.-Arthur-Champagne (de Chambly / du Mont-Royal)&quot;</bucket>
              <bucket>&quot;Lajeunesse / Villeray (place Tapéo)&quot;</bucket>
              <bucket>&quot;Molson / Beaubien&quot;</bucket>
              <bucket>&quot;Prince-Arthur / Ste-Famille&quot;</bucket>
              <bucket>&quot;Parc du Pélican (2e avenue / St-Joseph)&quot;</bucket>
              <bucket>&quot;St-Mathieu / Sherbrooke&quot;</bucket>
              <bucket>&quot;Regina / de Verdun&quot;</bucket>
              <bucket>&quot;Chabot / de Bellechasse&quot;</bucket>
              <bucket>&quot;Cartier / Bélanger&quot;</bucket>
              <bucket>&quot;Faillon / St-Hubert&quot;</bucket>
              <bucket>&quot;8e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Bel Air / St-Antoine&quot;</bucket>
              <bucket>&quot;St-Urbain / Beaubien&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Jean-Talon&quot;</bucket>
              <bucket>&quot;de Gaspé / Jarry&quot;</bucket>
              <bucket>&quot;Messier / Hochelaga&quot;</bucket>
              <bucket>&quot;7e avenue / St-Joseph&quot;</bucket>
              <bucket>&quot;Stuart / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Tupper / du Fort&quot;</bucket>
              <bucket>&quot;Côte St-Antoine / Clarke&quot;</bucket>
              <bucket>&quot;Papineau / René-Lévesque&quot;</bucket>
              <bucket>&quot;5e avenue / de Verdun&quot;</bucket>
              <bucket>&quot;St-Dominique / Gounod&quot;</bucket>
              <bucket>&quot;City Councillors / du President-Kennedy&quot;</bucket>
              <bucket>&quot;Waverly / Van Horne&quot;</bucket>
              <bucket>&quot;Métro Crémazie (Crémazie / Lajeunesse)&quot;</bucket>
              <bucket>&quot;Beaudry / Sherbrooke&quot;</bucket>
              <bucket>&quot;Berri / Rachel&quot;</bucket>
              <bucket>&quot;Jeanne d&apos;Arc / Ontario&quot;</bucket>
              <bucket>&quot;West Broadway / Sherbrooke&quot;</bucket>
              <bucket>&quot;Laurier / 15e avenue&quot;</bucket>
              <bucket>&quot;St-André / Robin&quot;</bucket>
              <bucket>&quot;Guizot / St-Denis&quot;</bucket>
              <bucket>&quot;Quai de la navette fluviale&quot;</bucket>
              <bucket>&quot;Cartier / Masson&quot;</bucket>
              <bucket>&quot;Rousselot / Villeray&quot;</bucket>
              <bucket>&quot;Hutchison / Edouard Charles&quot;</bucket>
              <bucket>&quot;Benny / de Monkland&quot;</bucket>
              <bucket>&quot;de Monkland / Girouard&quot;</bucket>
              <bucket>&quot;Darling / Sherbrooke&quot;</bucket>
              <bucket>&quot;Parc Plage&quot;</bucket>
              <bucket>&quot;16e avenue / St-Joseph&quot;</bucket>
              <bucket>&quot;Casino de Montréal&quot;</bucket>
              <bucket>&quot;Beatty / de Verdun&quot;</bucket>
              <bucket>&quot;Métro St-Michel (Shaughnessy / St-Michel)&quot;</bucket>
              <bucket>&quot;Notre-Dame-de-Grâce / Décarie&quot;</bucket>
              <bucket>&quot;Ellendale / de la Côte-des-Neiges&quot;</bucket>
              <bucket>&quot;Trans Island / Queen-Mary&quot;</bucket>
              <bucket>&quot;Gascon / de Rouen&quot;</bucket>
              <bucket>&quot;18e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Parc Outremont (Bloomfield / Elmwood)&quot;</bucket>
              <bucket>&quot;9e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;de Hampton / de Monkland&quot;</bucket>
              <bucket>&quot;Basin / Richmond&quot;</bucket>
              <bucket>&quot;6e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Aylmer / Prince-Arthur&quot;</bucket>
              <bucket>&quot;Natatorium (LaSalle / Rolland)&quot;</bucket>
              <bucket>&quot;Le Caron / Marc-Sauvalle &quot;</bucket>
              <bucket>&quot;d&apos;Oxford / de Monkland&quot;</bucket>
              <bucket>&quot;Union / President-Kennedy&quot;</bucket>
              <bucket>&quot;de Kent / de la Côte-des-Neiges&quot;</bucket>
              <bucket>&quot;Bourbonnière / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Wilson / Sherbrooke&quot;</bucket>
              <bucket>&quot;Ontario / Sicard&quot;</bucket>
              <bucket>&quot;Cote St-Paul / St-Ambroise&quot;</bucket>
              <bucket>&quot;de Liège / Lajeunesse&quot;</bucket>
              <bucket>&quot;de la Salle / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Louis-Hébert / Bélanger&quot;</bucket>
              <bucket>&quot;Métro Monk (Allard / Beaulieu)&quot;</bucket>
              <bucket>&quot;1ère  avenue /St-Zotique&quot;</bucket>
              <bucket>&quot;Chabot / St-Zotique&quot;</bucket>
              <bucket>&quot;Notre-Dame / Chatham&quot;</bucket>
              <bucket>&quot;Chabot / Everett&quot;</bucket>
              <bucket>&quot;des Érables / Bélanger&quot;</bucket>
              <bucket>&quot;La Ronde&quot;</bucket>
              <bucket>&quot;Lespérance / de Rouen&quot;</bucket>
              <bucket>&quot;Hôpital Maisonneuve-Rosemont (Rosemont / Chatelain)&quot;</bucket>
              <bucket>&quot;Davaar / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;d&apos;Orléans / Hochelaga&quot;</bucket>
              <bucket>&quot;Paul Boutet / des Regrattiers&quot;</bucket>
              <bucket>&quot;de l&apos;Église / Bannantyne&quot;</bucket>
              <bucket>&quot;de Bordeaux / Jean-Talon&quot;</bucket>
              <bucket>&quot;Hudson / de Kent&quot;</bucket>
              <bucket>&quot;Métro Jolicoeur (Drake / de Sève)&quot;</bucket>
              <bucket>&quot;Laporte / St-Antoine&quot;</bucket>
              <bucket>&quot;Berlioz / de l&apos;Île des Soeurs&quot;</bucket>
              <bucket>&quot;Ontario / Viau&quot;</bucket>
              <bucket>&quot;Marquette / Villeray&quot;</bucket>
              <bucket>&quot;16e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Alexandra / Jean Talon&quot;</bucket>
              <bucket>&quot;Jacques-Casault / Christophe-Colomb&quot;</bucket>
              <bucket>&quot;Logan / de Champlain&quot;</bucket>
              <bucket>&quot;de Bordeaux / Marie-Anne&quot;</bucket>
              <bucket>&quot;Greene / Workman&quot;</bucket>
              <bucket>&quot;Édouard-Montpetit (Université de Montréal)&quot;</bucket>
              <bucket>&quot;Hamilton / Jolicoeur&quot;</bucket>
              <bucket>&quot;Métro Longueuil - Université de Sherbrooke&quot;</bucket>
              <bucket>&quot;de Lanaudière / Bélanger&quot;</bucket>
              <bucket>&quot;de Clifton / Sherbrooke&quot;</bucket>
              <bucket>&quot;10e Avenue / Rosemont&quot;</bucket>
              <bucket>&quot;12e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;McEachran / Van Horne&quot;</bucket>
              <bucket>&quot;19e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;Dunlop / Van Horne&quot;</bucket>
              <bucket>&quot;Ottawa / St-Thomas&quot;</bucket>
              <bucket>&quot;Lionel-Groulx / George-Vanier&quot;</bucket>
              <bucket>&quot;Congres&quot;</bucket>
              <bucket>&quot;Desjardins / Hochelaga&quot;</bucket>
              <bucket>&quot;Guizot / St-Laurent&quot;</bucket>
              <bucket>&quot;Terrasse Guindon / Fullum&quot;</bucket>
              <bucket>&quot;Durocher / Bernard&quot;</bucket>
              <bucket>&quot;Gauvin / Notre-Dame&quot;</bucket>
              <bucket>&quot;Champagneur / Jean-Talon&quot;</bucket>
              <bucket>&quot;Shearer / Centre&quot;</bucket>
              <bucket>&quot;du Mont-Royal / Augustin-Frigon&quot;</bucket>
              <bucket>&quot;Leman / de Chateaubriand&quot;</bucket>
              <bucket>&quot;St-Dominique / Bernard&quot;</bucket>
              <bucket>&quot;Louis-Hémon / Villeray&quot;</bucket>
              <bucket>&quot;Rockland / Lajoie&quot;</bucket>
              <bucket>&quot;28e avenue / Rosemont&quot;</bucket>
              <bucket>&quot;Complexe sportif Claude-Robillard (Émile-Journault)&quot;</bucket>
              <bucket>&quot;Henri-Julien / Jarry&quot;</bucket>
              <bucket>&quot;Berri / Gilford&quot;</bucket>
              <bucket>&quot;Hôpital général juif (de la Côte Ste-Catherine / Légaré)&quot;</bucket>
              <bucket>&quot;Gordon / Wellington&quot;</bucket>
              <bucket>&quot;2e avenue / Wellington&quot;</bucket>
              <bucket>&quot;Ville-Marie / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Lincoln / Lambert Closse&quot;</bucket>
              <bucket>&quot;Louis-Hébert / St-Zotique&quot;</bucket>
              <bucket>&quot;Quesnel / Vinet&quot;</bucket>
              <bucket>&quot;St-Zotique / 39e avenue&quot;</bucket>
              <bucket>&quot;Ropery / Augustin-Cantin&quot;</bucket>
              <bucket>&quot;26e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Chauveau / de l&apos;Assomption&quot;</bucket>
              <bucket>&quot;François-Perrault / L.-O.-David&quot;</bucket>
              <bucket>&quot;Ottawa / William&quot;</bucket>
              <bucket>&quot;de Gaspé / Marmier&quot;</bucket>
              <bucket>&quot;Hogan / Ontario&quot;</bucket>
              <bucket>&quot;Lajeunesse / de Castelnau&quot;</bucket>
              <bucket>&quot;Fullum / Gilford&quot;</bucket>
              <bucket>&quot;Bourgeoys / Favard&quot;</bucket>
              <bucket>&quot;McKenna / Édouard-Montpetit&quot;</bucket>
              <bucket>&quot;Métro Cadillac (Sherbrooke / de Cadillac)&quot;</bucket>
              <bucket>&quot;Beaucourt / de la Côte-Ste-Catherine&quot;</bucket>
              <bucket>&quot;Logan / d&apos;Iberville&quot;</bucket>
              <bucket>&quot;de Kent / Victoria&quot;</bucket>
              <bucket>&quot;de Marseille / Viau&quot;</bucket>
              <bucket>&quot;Fullum / Jean Langlois&quot;</bucket>
              <bucket>&quot;Pierre-de-Coubertin / Louis-Veuillot&quot;</bucket>
              <bucket>&quot;Fleury / Lajeunesse&quot;</bucket>
              <bucket>&quot;Hochelaga / Chapleau&quot;</bucket>
              <bucket>&quot;Bennett / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Métro Acadie (de l&apos;Acadie / Beaumont)&quot;</bucket>
              <bucket>&quot;Park Row O / Sherbrooke&quot;</bucket>
              <bucket>&quot;de la Roche / Fleury&quot;</bucket>
              <bucket>&quot;5e avenue / Bannantyne&quot;</bucket>
              <bucket>&quot;LaSalle / Sénécal&quot;</bucket>
              <bucket>&quot;Ernest-Gendreau / du Mont-Royal&quot;</bucket>
              <bucket>&quot;Basile-Routhier / Chabanel&quot;</bucket>
              <bucket>&quot;Girouard / de Terrebonne&quot;</bucket>
              <bucket>&quot;LaSalle / 4e avenue&quot;</bucket>
              <bucket>&quot;Eadie / Dubois&quot;</bucket>
              <bucket>&quot;35e avenue / Beaubien&quot;</bucket>
              <bucket>&quot;Francis / Fleury&quot;</bucket>
              <bucket>&quot;LaSalle / Crawford&quot;</bucket>
              <bucket>&quot;30e avenue / St-Zotique&quot;</bucket>
              <bucket>&quot;Jacques-Le Ber / de la Pointe Nord&quot;</bucket>
              <bucket>&quot;de l&apos;Église / de Verdun&quot;</bucket>
              <bucket>&quot;St-Germain / Hochelaga&quot;</bucket>
              <bucket>&quot;Muray / Notre-Dame&quot;</bucket>
              <bucket>&quot;Benny Crescent / Benny&quot;</bucket>
              <bucket>&quot;15e avenue / Dandurand&quot;</bucket>
              <bucket>&quot;Métro Angrignon&quot;</bucket>
              <bucket>&quot;Clark / de Liège&quot;</bucket>
              <bucket>&quot;15e avenue / Masson&quot;</bucket>
              <bucket>&quot;Gare Canora&quot;</bucket>
              <bucket>&quot;Rousselot / Jarry&quot;</bucket>
              <bucket>&quot;Joliette / Ste-Catherine&quot;</bucket>
              <bucket>&quot;Bercy / Ontario&quot;</bucket>
              <bucket>&quot;de Repentigny / Sherbrooke&quot;</bucket>
              <bucket>&quot;Basile-Routhier / Gouin&quot;</bucket>
              <bucket>&quot;Belmore / Sherbrooke&quot;</bucket>
              <bucket>&quot;Émile-Journault / de Chateaubriand&quot;</bucket>
              <bucket>&quot;Godin / Bannantyne&quot;</bucket>
              <bucket>&quot;Hamel / Sauvé&quot;</bucket>
              <bucket>&quot;Collège Édouard-Montpetit&quot;</bucket>
              <bucket>&quot;Clark / Fleury&quot;</bucket>
              <bucket>&quot;Marquette / Fleury&quot;</bucket>
              <bucket>&quot;Argyle / Bannantyne&quot;</bucket>
              <bucket>&quot;Nazareth / William&quot;</bucket>
              <bucket>&quot;Ste-Catherine / Ste-Élisabeth&quot;</bucket>
              <bucket>&quot;St-Charles / Sauvé&quot;</bucket>
              <bucket>&quot;Tolhurst / Fleury&quot;</bucket>
              <bucket>&quot;Jogues / Allard&quot;</bucket>
              <bucket>&quot;Hôpital Santa Cabrini (St-Zotique / Jeanne-Jugan)&quot;</bucket>
              <bucket>&quot;St-Charles / St-Sylvestre&quot;</bucket>
              <bucket>&quot;St-Charles / Charlotte&quot;</bucket>
              <bucket>&quot;Métro Langelier (Sherbrooke / Langelier)&quot;</bucket>
              <bucket>&quot;St-Charles / Montarville&quot;</bucket>
              <bucket>&quot;CHSLD St-Michel (Jarry / 8e avenue)&quot;</bucket>
              <bucket>&quot;Place Longueuil&quot;</bucket>
              <bucket>&quot;CHSLD Benjamin-Victor-Rousselot (Dickson / Sherbrooke)&quot;</bucket>
              <bucket>&quot;CHSLD Éloria-Lepage (de la Pépinière / de Marseille)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]' included-values='in-range'>
            <min>155577.0</min>
            <max>300025.04999999999</max>
          </filter>
          <slices>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[:Measure Names]</column>
            <column>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[:Measure Names]' value='247' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]' value='216' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]</rows>
        <cols>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8734125B-F8DE-4FA4-AEDE-E5966BAA84C4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Q4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ops Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='30' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='31' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='13' param='horz' type-v2='layout-flow' w='98400' x='800' y='6250'>
              <zone h='92750' id='5' type-v2='layout-basic' w='98400' x='800' y='6250'>
                <zone h='46375' id='9' name='Q2.3' w='98400' x='800' y='52625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46375' id='11' name='Q3.2' w='49200' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46375' id='14' name='Q4(2)' w='49200' x='50000' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7375' id='10' name='Q2.3' pane-specification-id='0' param='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[avg:Duration Mins (copy)_1563593561621929989:qk]' type-v2='color' w='14000' x='84400' y='88250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Ops Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='53' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='52' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5250' id='31' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='11' is-fixed='true' name='Q3.2' w='49200' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='14' is-fixed='true' name='Q4(2)' w='49200' x='50000' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='9' is-fixed='true' name='Q2.3' w='98400' x='800' y='52625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7375' id='10' name='Q2.3' pane-specification-id='0' param='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[avg:Duration Mins (copy)_1563593561621929989:qk]' type-v2='color' w='14000' x='84400' y='88250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6116A56B-061F-4E5A-8D02-CC75E02A88F7}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Q1.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC5D1A72-3ACF-45DF-B36B-573E215C776A}' />
    </window>
    <window class='worksheet' name='Q1.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:cnt:trips_E436E804F5824BE1A09B6159A4888209:qk:8]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[qr:start_date:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{203CF7A3-DE8C-41D3-AE3B-E6921373B567}' />
    </window>
    <window class='worksheet' name='Q1.3'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[mn:start_date:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4AE2E3DF-2AED-4B01-A616-6CA27B13BA4A}' />
    </window>
    <window class='worksheet' name='Q1.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:code:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[pcto:sum:Calculation_961518585438228492:qk:1]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[usr:Calculation_961518585438228492:ok:2]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{835A854B-B0F8-487B-8B62-D939E353484F}' />
    </window>
    <window class='worksheet' name='!Q2.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[__tableau_internal_object_id__].[cnt:trips_E436E804F5824BE1A09B6159A4888209:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[ctd:name:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2779283986484445184:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Id (copy)_2779283986491154433:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:code:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:end_station_code:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:id:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:start_station_code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E1E57E8-71C7-420D-9895-1405C7AC8DF9}' />
    </window>
    <window class='worksheet' maximized='true' name='Q2.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Sec (bin):ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:is_member:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{CCD82C08-DBC4-4430-8B8C-A92933B8D85D}' />
    </window>
    <window class='worksheet' name='Q2.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[avg:Duration Mins (copy)_1563593561621929989:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_2618843249007489028:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9DB61782-75CA-4EE3-99DC-D4AD82515DA6}' />
    </window>
    <window class='worksheet' name='Q3.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Is Member (copy)_2905947724885282821:ok]' type='filter' />
            <card param='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2618843249007489028:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 3]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2559733504488513538:nk]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin) (copy)_1563593561897512969:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin) (copy)_2559733504480137216:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Duration Mins (bin):ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Is Member (copy)_2905947724885282821:qk]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C541AE2-6698-4572-96AD-F9DE8828EA72}' />
    </window>
    <window class='worksheet' name='Q3.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[hr:start_date:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:Calculation_2618843249007489028:qk]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[wd:start_date:ok]</field>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{954C5632-E4F6-4A01-91DD-66A582B7DC4D}' />
    </window>
    <window class='dashboard' name='Q4'>
      <viewpoints>
        <viewpoint name='Q2.3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Q3.2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q4(2)'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{C8055639-6EBF-4109-9569-7993286510F0}' />
    </window>
    <window class='worksheet' name='Q4(2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0pl2rxs0z2c3061f87ao90woyvp3].[sum:Calculation_1563593561652801544:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pl2rxs0z2c3061f87ao90woyvp3].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB95E661-4AD8-4C46-8BEC-2514BC4223E8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='!Q2.1' width='192'>
      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
      toMQgKCo+f+oBGpXU8W5iwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q1.1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWWxc2Znff7du7QurivsuriK1kJIoSu5WU2r1ZrvlXux2PBjEM5MJHATI
      gkEeA8xz8pCXAEFgYBDMJDOYBJjxTNvjXtyLultquSW1Fu6kKO57cSuyyNqr7pKHanKathZK
      KvJyOT+AUImsqu/UrfO/59xzv//5JF3XdQSCA4rJ6AYIBEYiBCA40OwqAaiqaljsdDqNpmmG
      xU+lUhg1G1VVlXQ6bUhsgGQyadhnl3bDNcB6x0+n04Z2ApPJhCRJhsRXFAVZlg2Jr2kauq4j
      y/KOx4bMZzebzYbEznrU2dlZZmZmOHXqFMlkkr6+Po4ePYrFYqG7u5v6+nrMZjNWq5VIJILb
      7d748CaTybAvIZlMYrFYMJmMGRQ1TcNqtRoiAFVVUVUVq9W647HX4xsVO6sCSCaTBAIB6urq
      6OvrQ1EUamtr6e7uxuVyUVVVRW9vLxUVFTgcDiYmJmhtbd340iVJMkwAkiQZKsD1+EYIUNd1
      NE0z/LMbIf6sHm2z2YyqqnR2drK0tITVasXv92O325EkidzcXDweD/F4nC+++IKGhgbDphwC
      AWRZACaTiZMnT3LixAn8fj+pVIpYLEYikUDTNCKRCNFoFIfDQVtbG0NDQ4bN+QUC2IZrgNHR
      UVZWVmhtbSUWi9HR0UFTUxMWi4WOjg4aGhqwWq3Y7XYsFguxWAyXy5XtZggEW2JXrAKtk06n
      sVgshsSOx+NYrVbD5sGxWAy73W7INYCiKCiKgt1u3/HYANFoFKfTach02Ji1J4FgHV3DFJuH
      8BpYPWBxgc0D1p2ZFQgBCIwjFYXxL7AHOoD1iYgEJhlkW0YIthxw5GUe2/1g92V+Z5JBMoEk
      wzOMHEIAgp1H12FlBIZ+A4kQqcIWrBWtkFzL/KTWIB6CRAiii7A2DWoKlETm9ZIJrO7Mj92f
      +dddnBGH1Q1mG8hWMDseKw4hAMHOko7DxFWYuZ3psM1/hGLJx+pyg7vo95+vKZnXKElIR78R
      xyokViD5zb9r0zDzdeb5kgwWR2YEsToz0yq7H+xesHm/EY4r83vZIgQg2CF0HWJL0Pd3EF+G
      gmNQ9/1MZ4xGH/46k/mbqZAHyP+d99QyAtFUUOKQikBiNRMnuZYRR3QBloczz4HMiCDJIFvA
      7BACEOwAaipzxh//IjN/P/JORgDPuuojmTJTHZnMWd+RC94HPE/XIBmGVBjiK5l/Y8uQWhMC
      EGwzkXkY+RRWhqGwCWpezUxHdhLJlIlp90JO+aY/CQEItgdNhUA7jH2eOQM3vAVFzZkpzS5i
      d7VGsD+IBWHkY1gaAH8NNLwNDr/RrXogQgCC7KFrmU4/+EHm4rTmNSj/TmaevkvJugDm5uYY
      GhqipaUFXdfp6uqiubkZi8VCe3s7jY2NWCwWbDYba2treDwebDZbtpsh2GmUZGZdf6EbPKVQ
      fwncJc9+obvNZFUAiqIwPj5OS0sLfX19mEwmmpqaNvwAR44coa+vj4qKCux2O1NTU5w+fXrT
      exhpS9Q0zbD0bF3XN/Lyd5p1R9hTxdZVpJVRpKEP0NNx9IoXoPJC5k6trmd+HvcW33x2I9LS
      sioAWZaxWq1cv36dqqoqEokEbrcbh8OByWQiJydnww9w48YNLl26hCRJKIqCruuGelM1TTNU
      AJqmkUwmDYm93vkSicSTvTAdxTz9FZbFLnRnPqmaS6ieSkilga1/j08VO0tkVQCpVIp0Os35
      8+e5c+cOdrudaDRKIpHA6XQSDoeJRCL4fD5efPFF7t+/T2tr6yY/qFEZiSIb9AmzQVenYPhj
      WJuC0laofgmb1f1U8dc9Ins+G9RqtVJaWsrXX3/NiRMnkGWZzs5OTp48idlspr29nSNHjmA2
      m7HZbMIPsBdRUpm0g4kvM3dxT/xJZqVnl8/1H4bwA3yDGAEeMwLoWiatYPCDTO5NUTPUvpbJ
      rXlGhB9AsLvRVJi+CRPXMhe3DW9C0YnM4z2OEIDg4eg6xIMw+D6EJiC3FupeB2ee0S3LGkIA
      ggejKbDYB6OfZR7XfR9KToO8v7rM/vo0guyQDMPopzDfA94KOPwmuAqMbtW2IAQg+Gc0FYKD
      MPybjAml5lUoO7OrUxmeFSEAQQYlCeMfw3xXxoN75B3wVRndqm1HCECAFJnFMvQbiC1kbmod
      enHHdmUwGiGAg4yuw8oopnvvZpY0m3+aOetLu2rX/G1FCOCgousw1wGDH6A7C1Hq38TqKzW6
      VTuOEMBBRFNh9nbGqug7hFb3JprsMLpVhiAEcNDQVBj5JJPPk9+YudjVTaAoRrfMEIQADhLp
      OIxeznh1y74Dtd/NzP0PaOeHLAtAVVWGh4dJJBLk5uZSUFDAyMgINTU1yLLM8PAwFRUVyLK8
      kQnqdDoNS4A7UKSiMPCrzI5sVReh4ty+yOV5VrIqAEmSKCwsJBqNsri4yNLSErm5uXR2duJ2
      u3G73XR1dVFRUYHH42FoaIjW1tZN72F0cuq+jJ8KI/X9An1tOmNVLG1dD7YpplGf3cj4WRWA
      yWTC7/czNTVFY2Pjxhk/GAyi6zqVlZWsra0Rj8e5efMmly5dQpblDUeYoiiGuqKMrFKp6zqx
      WCzr7yvFl3AMvQtamlTdW6S99Q/ciW39+O8kkXiavvFFukcXWY0myctxUOx3UZTrpDTPjd1q
      xmm3YDVv30iV9WuAeDyOLMvY7XZSqRSJRIJUKoXJZCIejxOPx/H5fDz//POMjIxw4sSJTY4w
      h8OY1Yh95wf4Zo2fkfdBV+HYH2DzV/Og7Qd2sj6AruuMz4W42TfNV71TTC+uUeBzku910TcR
      5Le9MyRSCmbZRI7LRn6Og3yfi9I8N1XFPvK8TvK8DnxuOzbLs3ffrAsgGo1SVVWFJElUVVVx
      69Ytjh07htVq5e7du9TV1eFwOHA4HMiyLBxh28XKKPT9fWZPzeN/nNk92UBUVeNG/zRXOsbp
      G1skqSicrCvmp682UV3kJs+fQyKlEE8qLIZizC6tMRoIsbQaY3J+la/7p1E1HbNswmmz4LCZ
      KfC7KM3zUFvqp6rER3GuG5/7yUQsHGHfsG9GAF2DmVsZv667GI79QWYX5ke4rbZrBEgrKqOB
      EL/tnuRq5zixZJriXDdtTZW83FJNgS/jAnuYI+zbXVNRNQLBCDNLYaYWVgkEIwSCYRZWoiRS
      CtFEGgnwuGyUF+RQXeIj3+ukvCCH0nwPbocVu9WM3br5nC8E8A37QgCaAlM3YOwLyKuHxh9m
      No19DNkWQCiS4HrvFDf6prk3sYjTbuF4dSGvtFRztKoAh23zd/wslshESiG4GmMsEGJxNUog
      GGFqYY1QJMHyWpxESkGSwOe2Z64xcj0U+l2U5rspy88RAlhnzwtAUzNpzIEOyG+Aw2+BZWsd
      OhsC0HWd0dkVPr49QvtggKXVGBWFXi40V/JSSzW5Hgcm04M7eLY9waqqEUumicRTrIQTzC6F
      mQ2GmV5YI7AcYXpxDU3TkU2SuBG2L1ASGbP6Qi9UvpDJ5pS3/0SiaTrhWJLrfdN83j7GyMwy
      boeV5toiXm2toam6EJNJ2nGzuyyb8DhteJw2SvI8HK3KmHk0XUfXdFKKynI4zuxSRAhgz5Nc
      g3vvwuokVL8ElW3bns2ZSCmMBVa4fGeM9qEAq5EE9eV5/Kvvn+Tc8XIKfLtzUcMkSSBLOGQT
      ZTYLZfk5QgB7mvhypvOH5zK2xeKT27o/z0o4zmd3x7jRN834XAiP08rZxjJePHmI2rLc37vA
      3AvsvRYLMmv8kQD0/l3mwvfojzOJbVnu/Lquk0yrDE4Fef/6IN2j82iaTn15Hv/2zRbOHa/A
      5bBmzqx7FCGAvcjKMAz8U+Zx808zuzFnEVXTmF+OcvObdfuJ+VUK/S5eaanm/IlDNFbmP/5N
      9ghCAHsJXYPFezDwS3AWZJY5XYVZe/tkSqF/YpGPvh6hf3yRSDxFc20Rb7c1cLK+hLyc/ecZ
      EALYK6ybWEY/y+y7f+wnmYJzz/q2ms5sMMJXPRN80THJcjiOx2Hju2drON90iPLCHMzy/rVI
      CgHsBXQNxq/A5DUoOJrJ6HzGPTkTKYXe0QWudo5zs38GWZY4WVfMHzedoLWh5PduVu1XhAB2
      O0oSRj/JlBktaclsTWh++oo6S6sxPrs7yq17s4zOrlCc6+btFw5zprGEuop8ZAM25zUSIYDd
      iq5DOgZDH2a2KKx+JXOT6wmrLOq6jqJq3J8K8puvh+kcmiOZVmiszOc//OgM545XYJEzZqaD
      1vlBCGD3klzLZHNGFzI7tFW88ETLnLquE1yLc713ii86xhmdXaHA5+R8cyWvnamhtjR347k7
      7QPYTWRdABMTE4yMjNDY2Iiqqty/f5+amhpcLhc9PT2Ul5fj9/txu91MTU1RXV0tiuT9LrEl
      6P+HzI2uxh9CwZEtd35N0xmYXOJq5wR37s+yvBbneE0B//FHZ2hpKCEvx7nNjd9bZDUZTlEU
      2tvbN6rD9PT0cOzYMbq6urBarTQ0NNDb20t+fj6pVAqA+vr6jdcbVR9sPbYsy4YUqIBMeSmL
      xYIcmcV8/100VUGpf2tL1Vd0XSelaNzom+FK5wTDM8uYTBIvHCvjpVNVVBX7sFoenuSnqiq6
      rm8yJu0k6599zxfI0DSNUCjEzZs3sdvtOBwOzGbzRqcym82YzWaSyST9/f20tbVtKpKn67ph
      ReoAQ2MDSMtDmIbfA6sL7di/zOzR+QhSisrMYphP7oxya2CWaDxNbamfP/puM+eOlZHj3Nqm
      tpIkGe6FNurYZ3UE0HWd7u5uVFVF0zRsNtuGRdLtdhMKhdB1nZKSEnJychgaGqK5uXkjDffA
      pkPrOqnpO1jGPkFyFULDW+AueujTY4k0d+7P8tndMfrHF5FlibONZZxvrqS5ruiJrYI7aYl8
      EEaWSMq6HyCdTrO2tkZOTg6SJG16vLq6isfjQZIkTCYTiqJgMpk2ht4DK4DYEnr7XyE58+D4
      Hz5wY1pd11kOx/ngxhC/7Z5kaTWG3+PgrRcaONNYSlGu66lXcQ6yALI+6bNYLOTl/fPQnZub
      +8DHkKkqeeDR9YyFUU2iN/4Q6VudX9d1Yok0I7Mr/OraAD2jC1jMJo5VF/LvfthKU03Rvr5L
      uxOIZVCjURKw2I/iq0O2+5DIrOTMLUe40ZdZwpxeXKPI7+bHLx7h+eMVVBbmGH69sl8QAjCa
      hV5IRVEqj6IpOven5vn0ziidQ3OE40maaor48YUjtDSU4HUZM0XZzwgBGImahukbKO4yrk5a
      eP8fPmF2KYzXbefiqUO8erqGyiKvONtvI0IARrI8BIkQw65m/vLjPioLvfzZv/gOp+qK8T7h
      /jaCp0MIwCg0FQLtaBY3H49acFjN/OefvrBr/bT7lS0tIUSjUdbW1hgcHETTtO1u08EgPAPL
      I8zZGrjRH6DteNm+NJzsdrY0Aly+fBlVVRkdHeVnP/sZfr9/u9u1v9G1THqzbOGDMRcWS4qX
      TlYa3aoDyZZGgEOHDpFMJjl16pRIXMsGyTAsD7Foq+PLgWXONJRSkucxulUHki2NAI2NjVgs
      FnJzcw3bvXlfMdeJrql8MuMnnlrhjXOHH7prmmB72dIIcPnyZebn53nvvfeIRCLb3ab9jZKA
      2TsETYV8fj9CS30JNaViSmkUWxKApmnMzs6yuLjIJ598YmghiT3PQg96KsKNlRKWIyl+eL7R
      6BYdaB47BZqbm+Po0aPMz89TW1tLQ0ODYTnzex41DXPdJC0+Ph6WOFFbRH157uNfJ9g2tnQN
      EAwGicVimM1mXC7XI+9MDgwMMD09TV1dHU6nk76+PhoaGnA4HHR1dVFVVYXH48HpdDI3N0dp
      aenBubBenYC1Kb5OnCSwHOWnrzVj2cbyP4LH81gBFBcXMzExQXl5OdXV1Y/M4NR1nWQyycWL
      F5FlmY6ODp577jm6u7ux2WycOXOG3t5eAMLhMLFYbNP76bpumCtsvUbWtt3n0DXMM7dRzW5+
      2a9Tlu/h6KG8jc+7Ht+ItAdN09A0zfBjbwRbGgHMZjM3b96ks7OTt99+G6fz4b5SXde5cuUK
      JSUlmM1mbDYbFosFk8mE3W7HbreTSCTo6urie9/73iZHmKZphuW9rMffNqLzsDzEnUg1Uysp
      /s0PjmG3yhsxjfz8mqZt/+d/BEbGfqwAYrEYY2NjvPrqq3R3d5NKpR4qAE3TyMnJwev1EgwG
      MZvNDA8Pk06nsdlsDA0NEYlE8Pl8vPbaawwMDHD69OlNJhijDDGapm2vIWaih7Ru5r0RO7k5
      dl4+XbPJuaWqKlar1ZDrq3VDjFFTUUVRsFqtu9MQEwgE6OrqIh6P4/f7H1nQzmQy4fP5CAaD
      NDc3o+s609PTnDx5EpPJxNTUFKdOndpwgTU1NR2M1IpkGOa7uR/1MxTU+aPvHs5KhUPBs7Ml
      S2Q8Hsdut2+7QvelJVLXYeor1JHL/I/hRjoWbPzP/3SJHNfms23Wy6Q+AQfZEvnIo62qKkND
      Q8zMzIi1/6dFScB8F9OpXG5My1x6rv73Or/AOB45DkuSRHt7O3fv3qWhoQGbzcY777zzyItg
      we8QGoPIAu9P1uKwWWhrFklvu4lHCsBkMvHjH/+Y48ePI8syXq/XsGFyT6IpMHOLhZSDa1Nm
      zp8qozRfJL3tJh474TSbzSwuLnL79m1+8YtfEI/Hd6Jd+4O1GfTlUd6f8IFs5YdtDXu6nNB+
      ZEtLEYlEgqqqKhRFEdcCT8LsHZYSZn4bcNHaUEpZwbMXtBBkly0J4OLFiywtLXH48GE8HjGE
      b4ngINpCH/8wnk9advGvL500ukWCB/DYKVAqleLy5cvYbDZ6enpYW1vbiXbtbTQFZm8zFZb5
      IuDje2fryPUIH8Vu5LEjwPj4ONeuXSMQCOD1eoUhZitE5mFlnN9M+bHZHLx48pDY2mSX8lgB
      HD58mD//8z/HbDYjSZJhN6r2DLoOgbssRlSuBry0tZRTli/m/ruVLV0DXLlyhZWVFRwOB2+8
      8Ya4D/AoEiH0+V4+mvajyzZ+8Fy9sDvuYrYkAJvNRnFxMV6v17AiCnuGxT6CUYUvAj5aG0up
      KvEZ3SLBI9hSb25paSEYDCJJkpjLPgpNhZnbXJ/PYVWx8nZbg9EtEjyGLWVeBQIBOjo6+OUv
      f0kikXjkc3VdZ2BggFAoRCgU4ssvv2R5eZlIJMK1a9eYn58nFAqRSCQIBAIkk8msfJBdwXwX
      kfAaH8/4aaopoqZEmN13O1saAYqKijCZTCSTycc6d0KhELOzs9jtdoLBIC0tLfT09OBwODhx
      4gS9vb2UlZURjUZZXFykuLh40+uNutGm6/qzxdbSmGZuc33ew2zMzk9ba4Ctv+e6KcSIUkXr
      cY089rvWEAOZBoZCIVpbW8nJefiKhqqqG37gdYOH0+nEZrNhMplwuVy4XC7i8TidnZ1cunRp
      kyNMVVXDrHGapj3TnW7T2iRyeIH3piqoLfNzpNK/UQhwKxhtB9V1/Ynam+34RsXekgBGR0cZ
      Hh4mFotRU1Pz0FWgVCpFMBhkZGQEt9uNz+djaWmJRCKB2+1mcXGRcDiMz+fjlVde4d69e5w5
      c2bThfWe9APoGox2cX3ezkzUzp+9fhi/98numMdisY0TxU6zG/wAO+E3eRBbEkAoFOLUqVP0
      9vY+0hLpcDi4ePEi8XgcVVUxmUz09/dz8uRJZFmmt7eX5uZmTCbTRtnURCKx95dVY0ukFgb5
      aLqYskIvzx0rN7pFgi3yWAEsLS3R1tZGe3s75eXlW8oF+vbd4tbW1o3Hp0+f3vS8fVMjLNDO
      wLKZgZCTP32jDrtVLBXvFR453iqKwrVr13C5XLz44ovE43HC4fBOtW1voCRQAl18NO3H6XJy
      Xhhe9hSPFIAsy6TTae7cuUNvby9TU1PCEPO7zN5lYlnl1qKH11prcTv2yah2QHikACRJ4q23
      3tqo9/vOO+8cnF3ctoKShEA7/zSRi8vp5JWWanGjcI/x2Mmq3W7n7NmzO9GWvUdolOXQGl/N
      V/P95yooyhXljfYaYpfbp0VNo099zT+O+rDb7bz+nXpx9t+DCAE8LZE5luZnuLmQw9kjZZQX
      ipTnvYgQwNOg6zBzi2sBNyHFyg+erze6RYKnRAjgaUhFCM0M8uGUn+PVRdSKCi97FiGAp0Cf
      vc2NgJ3llI232xrE3H8PIwTwpChxlNku3h3Po6Eyn+PVhUa3SPAMCAE8KfM93JrSCKZsvHnu
      MFaLqPCylxECeBKUJMnZbj6Y9FFZ5KW1odToFgmekawKQNd1xsbGuHHjBtFolGg0yq1bt4hE
      IiSTSW7fvk0oFCISiZBKpVheXjYsD/ypWJ3k3uQyg2sOfvB8vTj77wOymrao6zperxe/309f
      Xx+yLFNTU0N3dzcul4tDhw7R29tLRUUFDoeDiYmJTdmigKEFMx7tTNLRpm7x3oQfv9fD88fK
      s9rWdVOKEZ9/3YVmZImk9Z+dJqsCMJlMKIpCV1cXDQ0NrK6ukpubu2F2yMvLw+PxEI/HuXnz
      Jq+//vomR5iiKIa5otYLxT1sRUeKLTE2PktHsJyfXKzEpKskEtmzEGqaRiKRMGRFyUjxrceP
      x+O71xCzVVRVxeFwbPgH7HY7sVhsw/QSiUSIRqP4fD7a2toYGhqipaVlTzjCtMlOPpjIwZ/j
      4rvfOYzTmd0d8kSFGGMqxGRVAJIkMTExwdLSEs3NzciyTHt7O83NzVgsFjo6OmhoaMBqtWK3
      27FYLMRisUfWHdsVJFYJTAxzfaGEH50/RK5HpITvF7I+BTp+/Pim3124cGHjcVtb26a/FRbu
      kTX0+S5+PWLH47TzamuNuPG1jxDLoI8jHWdxYoCvFzycPSIqvOw3hAAeha6jLw/z0f0UMd3O
      pedE0tt+QwjgUegqKyN3uBrI4URtETUi6W3fIQTwCPTwLF/cDxNM2vjRhSNGN0ewDQgBPAxd
      Jz5+i0+mfZysL6a+PM/oFgm2ASGAhxFd4Oa9AItJG288X4/FLA7VfkR8qw9C10nP9fDBuJu6
      slyOiZTnfYsQwINIR+m6N85ExM53z9SKnd72MUIAv4uuk5rt5t17ErleN21ip7d9jRDA76Km
      GOjv5/6qg7fbGsXZf58jBPA7qKEJPhzUyPG4aGuqMLo5gm1GCODb6Drj/R3cXvTwxvP15LjE
      NpD7HSGAbxOe4aO+NTxuBy80VYqktwNAVie4mqbR09PD4uIi5eXl2Gw2hoaGOHToEG63m76+
      PoqLi8nPzycnJ4exsTEOHz68Szbc1Zkd7OB6wMmF1nKK/Ls8RVuQFbLuBzh+/DixWIzJyUlW
      V1d5+eWX6ezsJJFIcPHiRXp7e0kkEiwsLOD1erFarZscSY+rQrld6LEVLvctk5Y8vHSycser
      V2qaZmiNLiOPvaZphlULzboAgsEgS0tLNDQ00NfXt6m2sMlk2rBAzs3NUVRUhCRJqKq64Qd9
      qhpdWWBpfpqrkxbOHimj2oDypuslpYyYdq1XiTTq2CuKYljsrApAURTu3LmDx+NhbGwMs9nM
      l19+ic/nw+Vy8eWXX+JyucjNzeW5555jeHgYr9e7USNM13XDLJG9QRuripUfnW80pA3pdBqz
      2WyYJdLIY59KpTCbzYaIX9KzaMVfL/WpaRqyLG9UmLFYLEiSRCqV2jjIkiRtnPXXv/T15xpB
      x+AM8ysxXjtTi2xAJxSeYGM8wVkVwLNipACeqUxqFhACMEYAYhlUcKARAhAcaIQABAcaIQDB
      gUYIQHCgEQIQHGiEAAQHGiEAwYFGCEBwoBECEBxohAAEBxohAMGBJus1wiYnJ1lYWODMmTPM
      zMwwMDBAXV0dTqeT7u5uKioqNtKjZ2ZmOHTo0C5xhAkOIlnf86OgoIDV1VV0XWd+fp62tja6
      u7uxWq2cO3eO3t5erFYr4XAYTdOwWq0br9V13TBXlKZppNNpVDV7db+eJr5RhhijHWlG1YbL
      6hRIkiScTicmkwld1zGbzVgslo0UX4vFgsViIZFI0NHRQUFBwYZDbN1HIBDsJFmfAk1NTTE1
      NYXP5wOgq6sLXdex2Wx0d3eTTCbx+/288sorDA0N4Xa7N02BjPIDqKqKxWIx1Bb47ZPFTsdW
      FGXTaLyTfNs0tdNkfQrkcrk4ceIEdrudoqIigsEgeXl5G35hn8+HJEnIskxzc7MhX7hAsE7W
      TfF5eZv30S8uLt54XFRUtOlvRp1tBYJ1xOlXcKARAhAcaIQABAcaIQDBgUYIQHCgEQIQHGiE
      AAQHGiEAwYFmxwSwnui2nnil6/qmXaEFAiPYsQpwIyMjTE5O4nQ6KSkpwev1Mjg4yIkTJ0Q6
      tMAwdmQE0HWdWCzGhQsXsNlsJJNJbt26JbwAAsPZ0SnQ+tTHbDaTn5/P2tqamAIJDGVHBCBJ
      Evn5+Vy5cgWLxYLdbufw4cOk02mi0ehONEEgeCCiPsA3iPoAB7M+wK4og75eoscoOyJkpmiK
      ohjmSluPb2SNMKNsiZDpA0awKwRgNmea8emnn3Lp0iVD2jAxMYGmaRw+fNiQ+Hfv3qW+vv73
      /BQ7xYcffmjYsf/888959dVXDRl9xY0wwYFmV10DRCIR3G63IbHXd0Qwyhdr9DWIkcdeFMkT
      CAxi102B0rFV5pfDAMRWF1laiz/mFQqRyJNXGV+aC5B6jPSTkVUS23BdrqkpArMLaICWijI9
      t5z9II+Kr6SJJYypzL5ONBLh24dfSUSIprZnASIeXmblIX1k1wkgPD3LrYF+dHRG+27QOxJ8
      zCuiTEwsPVkQNUx/VztTCw8Rl5pkZnaB5fEBFrehn6hKlK6vbxJKaCwO93JzYDT7QR4VPx5m
      evFxx3V7mZiY2PT/yMIoUyvbsTGXzszYPfruT/Kguc6uWAXajEyFx8RsMIhiy8Nhlpjov037
      /XFqmi6gLt4nrDmp9JsYnF2h9mgtM0P3mJrqoeHkOaqLcx4bYXVykqKms4QXJw2PZsAAAASG
      SURBVImr8FnfDDJwqraczokZqg5VEg5rVGzbdFyioKiQ5cUl1qISFTkyq3OjfHmjE2dpPWVO
      ncrDDQwPjdJ8/Mh2NYI7d2/Teqye2yNLmFbHWY2pWAtqKTUH6RmcpaShhbNHD21b/OHbdyg6
      08rw3dtUF9hQo4t0D0KVN0VQL6a62PXMMbRUhIipABdrqKkwHYOznKl1cnvUhLw2tPtGAIDc
      inJGe/rJL8gDXSUUSVFa7Gc+sITF4aftXCsrUYWLL71EdZGXsvpm2p5rwaRs5XStMzg+znhf
      ByOjk8RVE0daz3G0poB4NEn1sTM0VuSjadt7aeTJzSMSGET2lAAQCoXILylleWmJ0gI39zrv
      4CqqyXpcTdNIJeIoio6mqijpJKmUgt1XwssX2/DbzUyMT1FcXoHLmv0zgK5rqOkY8RRomoqq
      pIgnMvcAZFcB5tgig9NrlBc9e+cHCAdnGR7oZ3pogJHlFKqqkkrESSYSmP2lu28EsObk4HX6
      yPd7yS0oIiXpmCJOImsmyov8eF0SsgSNtWXcvHaVysZGfD4nZquMy7mFVQQ9TUHVCU5XlbE8
      N0kqEqan/7eUFpdzvCKXqM0KJpWC3BwcshnrNhwhk2wlx5+PVY/jrihgbVHDY1VIzQeoPlRG
      TmEpKz2TnCzIfqLg2twYXaOLNLecJpyc53rnIL6SGnxOQDLj87opamqie2QWb2FF1uOn4ivc
      vtlLZVML7kSAzuu3cXtzsbrceM0y3nwrd0J+LFlZENJRNRuvvvkWXjnK2FSEHG2VOwNpCsuP
      oSzdF6tA6bVlItYc/Pbdcy4IjPaj5FRSkW/MsqRhqHG6ekZobDqKTd7myYmmcL+3XQhAcLDZ
      ldcAAsFOIQQgONAIAQgONEIAggONEIBg2+m9+v/4Lz//FWlN4xd/8V/5pyv9D33u/d4eYqrG
      jc9/zcjCQ9yCiSX+18//gvszISKBe/zlX/0fPrreRWDoPgsPTYtJ0t31z3H/78//G3/9N/97
      990HEOw/FOy4LBGWV5dISh7sySRdX33KwEyYsxcvMtnxFStrEYprj/P5P/4N5ae/T6ElxPDn
      H9JXWMVbL58hvjzJh5dv4C6pp1IboicQ4QIQXZlH8pRx/kQ1v/j5f2fF38Af/ugl7nx+BTWv
      mvM1Tm7eD+A0K/z6vc/5yc/+PeeaqtHtBfzkT/5UjACCnaEy30f/ra/wN56A+By3x1ReP3+c
      Gze/YmRykQvnTzIxFaSxsYnX33gRh2zh1AuvERjrBuDulzc4evF1pPkO7EV1HD/7Ig1lPoqO
      nOeVpgL+9ldXOdLQxCtvvI4lPE8wmuCzK1eILk6woOVx4eUXaG5u4VxT9bdaJQkBCHYASaK8
      /hDXvp6hqdKJ5MglJzXJLz+8QlF5DRarDbMsI5tMlPpMfPDrqyRlM1aLGdmcSceori3m6q/f
      ZXzNSa7bismUuVU8N9rNta97sTtc5Bc6ufr+R0zNBwglTOS4bCBbKS0tQpYcpFdGuN47DkAy
      NM3f/+1fixthgoONGAEEBxohAMGB5v8DWO2jGEQfUuIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q1.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.4' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q2.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.3' width='192'>
      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
    </thumbnail>
    <thumbnail height='104' name='Q3.2' width='192'>
      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
      ngAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q3.3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q4' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Q4(2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOyddYBd5Z33P9f93pk77u6ZzMQdAgECFAstlCJF6qW723Zr27fblq2+W1uq
      0HehRaPEXSeZSUaScXd3ve7nvH9MSAiEMqEU6dzPn+ceee45z+/R7/N9JKIoigQJMk+RftAJ
      CBLkgyQYAEHmNcEACDKvCQZAkHlNMACCzGuCARBkXhMMgCDzmmAABJnXBAMgyLwmGABB5jXB
      AAgyrwkGQJB5TTAAgsxrggEQZF4TDIAg85pgAASZ1wQDIMi8Rn61g4FAgOBCsSDzgasGwMzM
      DDab7f1OS5Ag7zuS4JrgIPOZYB8gyLxmjgEgIgQCBAThUt9AFIQ59xVEUbzi2mtGFJlsOcPh
      qp63HBcFAeFv3FcURQKBAIIgXrpGEAIEAgLBqi/IHANgmue/uolPfe95hq1+QKRh2w+59cFv
      c6Z78h2vdvaU8m+/fPFdJ1IM2Dlf0YFao7nyB8HLqef/wNbSjre9dqr9LN/8zC18/8UqfEDA
      2sdffvokT3zhGQaucr7PPU1DfRN2T+BdpzfIR4c5N4E05jDiFWrGHU5gmp4ePcsWx/0Dk3YZ
      r93KWMBHcpT5XV0fsmA1McONjHnBNjWDPi6eGK36PU5lkI8iVx0FuhoShYnFCSJ1PVPkBvrp
      jMknbaYFEBisO8GWXccYnfZiXLaJb9yTSdH2VzjeOIzKVMBnH0oFYLq7nC3byln1xGfQNx/i
      5SPncdm9ZGz6Mjdximeb0/nhlzbQtv+3lCtu4bGN2SgkMDNcj1eWT2TobHI9kx28+OxztE0L
      2MZcrM7dyHjbWba9dpTeKRchObfwtcc3oJFIZhOvTiE9ZpT2Xgex091oQ9JRy52AQNXuP7K9
      rJ+AIGflvV/ihuQxTh45xz3RsRTt/h+KWp2o4vP57AN3MlaxmX1nO/FIdRRsfIBNyRa++5ej
      LAqB6sZuCj77M54wl/PYn5oojPPQ2e9i42f+ncXyBrbsOM6IXULi8o3ctyqWI8dPcMvHv4Cv
      5kWOOvLIGCmhK3Ejj60LY/svfkfEA19DUfsah8racAe03P7Fr7E+zRTstL3HXMP7lBKblcxY
      Wx/d7VOkZkdfulil1WMyGFFIHVSWVNPTXk75TCzf+8nPeerfP0EIQE8xv3z+CKm33k9hhAqN
      0YRRp0MuTlF+roWwZTcSPVJG8/g4LY0O8gtTUUgABAYbazAXLriUoYfrjjIYewc//PFTfGJN
      GgrBz4Xju6josaCUuCjfeYT+Kxr4EiLiUpju62diYIjwtDhkzN5bGxKOSavBPzNMbW07bsTZ
      foPXTU/vCMnLbuaRe28hXD3JhZpp7vvaj/jPx6+n6nQpNlFEkIdz75e+y3ceXERz5wiIItrw
      TB761//kkdWR9A6NULbvZWqGfcgEKyeLipm0ehAF4WLaRASpkuwFCXS0dmEbaqdBlk2W0MDW
      AyX4FCqwNHHgeCPev+dLB7kqc64BAOQxC0g/80f2SPO4Z20oJQBeO0VHT6JZfi/f2NjL91/t
      IyAIyJQKZFIJElEyGyiJq7g9xcH5lnZuTHKyZUcFK77wZXKGD/PD01LQp3Pj6ijObnkRS9KN
      3BOlBEB0tlPelsDdmwxcLM8JeH3I1FoUkosdcSAgD2Ht3R/jofWZeB0e1JIr0x4dnUht1Qkm
      JpP4+PUqjgPYm9m9q5sbv/NV1DU7ONR7OWrkulA+8Zmv095yged+/TTrH7kTkCGXSZHJ5EhE
      AQFApUGvlOFVXH6VcpUOtVKGXKEAQKI2cuP9X+QTy6PxeP3I3eOU+gMEAl7sNjt+iZSI3MUk
      7XqZHWdjSS5Yhl6cRJmwhCe/8jjhKgGPT4biWj5WkDlxbTWqJJT0tAC9wx6MBu3sMZmS6Cgt
      dYe3suNULTa3QHj6UvKkXfzipz/hF3/YyzSAVM7SW+4mfPAUx7v8JEcGOPTyixws78AfEAEJ
      idmFDNW1krs4DaUEQGSyuQ5PXi4xsss5Oip3NZKql/nZr/5AafsUAamcgiULGTyzjV/+5mme
      21KE9U1JN0ZGIulpwpaYTejrt1KGE2mcYPcLf6W4cQjhDef73dOUHtnFmQsdSHWhhBiTyM9R
      s+MPP+O/XzpF7splmOb00uTkL19D+6Fn+fVvnualg+V4UCBOtPPMH//AqbpBfAJINPGsLgiw
      v3iYnPQ49HG5rI+08bvf/Irf/PZZSlrGr0hfkPeGOU6ECXhcLqRKHVLBjdsvQaNS4PN6kSqU
      SAUvTpcXqVyOiBStVoXo9eBweUCqRKeV4/YKaNVK/B4XAZkKmeDB5Qkgl8sQJXK02Cg/e4bT
      bU6e+PT9ROgViH4rR156Dd26j7EuPfJSakRRwON04A2ATCpDrlKhlIm4XS68fhGpXIlOq0Iq
      kSAEfHh8AmqVAq/LhajQoJYJuNwBVFolfpcDt09ELpchkSpQKSV4PX4UKiU+twOvT0AiV6LV
      qCHgxeX2ICBDo9UgR8DpDaBVKxH9HtyCHK1cwOEFrUZJwOvGj+JS2nwBEZlShValwOdx4rn4
      XKlCiVohR/C5sHtEtFoNcikEvB6cbg8CUlQaLSqFDMnf+EpBrp0Pz0ywpYf9Ja2kLFxBTnwI
      Ugm4J7t5Zc8pbrn3YRJClB90CoP8E/LhCYCrIAT8uD1eVBoNMkmw7Avy3nPVAPD7/QhCsMUZ
      5J+fq44CCYKA3+9/v9MSJMj7TnBeJci8JhgA7xGi38nklIPA+9yjEv0epmasBIQPbVfuQ43s
      hz/84Q/ffHBWPfnGPoCLqsO7KBvwkhQbjUImYartLFuPN2GOj8WkViAGvLSUF9Ht0RNn1r2r
      xIw1n2b7sVYiUxMwKOW4LH0c37mLMXUiiWGad77B32Co7gSvHTpDbV0jYx4N8dFm5NJ307EW
      GO2oo30MYsL1s4dED93FezkzrCdR0c9re49QVV1L76SPyNgYNPL3pgM/0VxEozOcuDeMiFn7
      athxspHs7AyUb5grsU91Uls3QVhMGPKrFnMBhlvKOXLkPLqUHEJU4J7s5fiR/QwQS3KE9j1J
      84edOdYAblpKDnCopIkxmxvw0VZykvLaRvpmXAB4bP1UNwxg0OvA2cfmX2+m9xoTM95RxZkT
      x6jsm53Gmuqv4uzZUuq6p+d2A1Gg/sgODpzveovUebCtjkl1IssXpdJ1ZDslPW+eKpsrIqMd
      NVQ2D1864hptZ0+Dmw2rUgkMVHPBGsbaNSsQuk6zr6gRp2WUXdteo8fiepfPnGWi+RQVPY4r
      jg31dWGOSUetuPJT2ic7qShvxfO2YxkBhlrqqL1wiuKmCURRYLijja66Yk41T/xd6fwoMWcp
      hNwQRp5KQveUnWTNDM22NBbETwEQcIxSWV6PJCQEr9tJR2cJJZVnGX9FwfLla0n0jzCtMjDR
      2U1S4WqUE1WU1vajjslm1fKFmDWzyhykGvILY+loHSaQY2a0vZ/Y3HQUUsBvp6GshPp+GzHZ
      y1i7KJmJxiIapxQ4RgbQJCxkZZLIgZPFTOgHEG3XsXbdYkJe1w9IFJijE8jMT8BRf4Lqfhsb
      UpU0nTtDXf8MURnLWZ2jobKsj8x1yzEFpmlo6CQpK4OuspN0TLgxJxWwamnmW97NYEcrhtgM
      zCopFkBrjiU9Ixuls5mdJf34VicQk5aK0W+j4nwDOfmL0XuHKW62szjHQOXZCgZmvERnrWD9
      4lj6Ks9iNyYz1jrIotuWYm+6wLmGISytQ4jr3/hkFz3tQyTedjevVzJTvbWUVDQxPj2InSw8
      9jEaB2ZIy03H3tvClCaWzJiQi9fLSFiyDG9jPfal6xiemSQhNp5RAHw0FR+hbsBObM5Klucn
      M9N5ntZhB1PjYyhi8rhpec5bAu+jxtxTL1GSkWWgrXOcme4upJmpGAECbs6fOkb7jIxIpYXd
      rx6DmAQijZFkLconMUxHf10RL/5lB76wZEICrWzZUUVIeh5C1xn2nmnE94ZSSp2SS1hPMyPu
      ITrGYsiMUYDop7v8EMeaHeTkxtF57GXOdLoZqD7M+QFIyUyivug1el0m0uOiiE3JJCc9Fqlr
      hrGxCWwuL4gBHJYphrraqO6SkJqoY7jyEPvrLGTlpdJXvIWTbXaGaw9Q3m7FOlhDaeUYAakP
      QWYgOjKMpuIDVPa+df3D9OQ0xvAIpBfnKryOGcZG+qmr7MKUEo/MM8Xpc2U4HA4azp6jZcLK
      UEMJVf0WcPuQ6UOIi5ByfttOWm0eWot2sfVIJYroaOytpbx6rJHM/AUkRuiveG5gsoFObzbp
      UarZA+4uXnv5MMTkkpkUgRxwW0eoqWzEGQgw2lpLY//UFfeQGzIwy9sZnXZhmXQSGT0bHDN1
      +9hR7SQ9L5v2oi0UN40wUHeGs11OUhPCqD5dRL/dM+fs82HlGsJXgik9G2VbHaVdPhakmZEA
      otdNe3MNLW3NNPbOEBVuwhQZjVlnJiU3i9hQLSAjecVGNixKQzPWxnjyaq5fupClyzOxDHTj
      e+PaE3kCGYkj1JyqwZmZR6QcEL30ts2QuXwFhQWrWbtAT237IBKplOiUbHJzCjCrnfgVISRE
      hREZl0JqopmJhmK2bd1LVfc4gt9Gw9kD/PJnv2I662bWJKnobe4nbcX1LMpfxnX5kTT3OFh2
      4zJ6Ks7SeKGe6NWr0M30cq60gur6RnqHp7C736rJ9Ho9oJDxuk5htP44v//p9zkxncFdN+df
      VLWC1BDGshQVNQ0dVLdaWLggEctgC+fLqqhr6mBkZAS7DyQyJQvW3Mq6pSlY+vsIT1nO4gW5
      pMQYuTwf6KenvJrQ5YsJvViBMtRBuzaP9WsLyEiNYS4rHuQKDWaznsH2EialBcQYpUCA3sYq
      UtfewdKFhSxPj6K/d4SATE1UUjoLcjIJUUvw/hPMFV1b/aVOIkPbyLnhAJG62dJIolAQExlN
      fPYaHnr4QW6/PgeVXIlWaWWgZxK72w8oMehVIJGgiElC111D88AYnY1dKM3RyGVvfIiEqNRE
      LhxvIiX1YlUtURAVp6SzoZWR0U5qW6ZIiY98c+oAUGkkTI2MYbX5SVx5J1/5lye4PjcOqSKE
      Fbc/xNe+8giS7nJahz1EJYTSWV/L8EQ/1S3DxMdFEZWyCIPjHKc6w1mbHYpntJNJQz6b7ruT
      zIird8QNej3uGdulJZ8JK+/lW9/7FjlCM6W1ffgvjdAoyCzIob+inC5BTnq0gZGuLlSpa7j/
      nhtJMM1mWYlUgl6vR4IEQ4ie8eFOxibGGJ1w8HrnRnRNcL5PxbL0N0jyQiMwT3XTPjDGxMgk
      LkAiEXE4ppkYGaarewD3m6d3pHLizSE0F59GtyCX2bpERmxyGl3VpQyMjdDYPURYpBkZb0bA
      7bTh8gYIeF3YHO6PnGBvjqNAIm6Hh/CUPBLC5Lgk4SzMiifg8xOZlEZ+djLTLWUcP1fFlBBG
      bl42ieEeig6X4AmJJ8GoQBMeR1yYHqkungTdECcOn8IWtoi7b1mBUTUbh36PE3lIHOkJkdj8
      AksW5KASfShCk1m8NA9xoIpDp+sJW3oXdyyLI+C2o4rMJD5EjtvtIjopi4Q4M2PN56gfFEhK
      T+L17oXf40QZlkheXi7ZoR6qOl0sWr8O3VAVh4oqMebfwZ2rU1AppEw2VONMv44bsiORm8Jx
      tZVQ1e0gMS2VpJQUwlQiCmM0idGzmU8uWilrHmXxwixkfhceTQwLM9PJTA+nrbGL6KR4QEZK
      UhL6iAgUI12oUlaxMD2GiDADPfXnaJuWEhcVR+qCTDR+F8aEXKJ0EkwR0SimWjhY0owsJIzk
      rEKSw1RY+puonpKxbmEmitdHfzTRxOpGOXW0mEmZmbSkVDLTk/CNN1Ja309YUiaJKUkXa2UR
      v9uDMjSO7ORQBkaVrFi/AJ3fiU8Xz6JlK9AOlnCkqJKIJXdy0/J0pD4nSnM8CWY1Lq9IfEI4
      3aVH6BbiMVnqOFI1Rlpm/EdKtn1VKYTX652nM8FOil/5M6fHw3ng4XtJD5/bUKDgHmffX7cR
      fdfjLI/R8n7IlhpObaWFhWxan4MsKJN61wQD4D1CsLVzojLAuuuz37IY5x9BU9lBlOk3kR4e
      VMn+PQQDIMi85kMthw4S5B/NR3sWI0iQv5NgAASZ1wQD4APAMdnDmdMV2H3B1ucHzTVYI36c
      h77/PCMXrREbt/8Xtz74bYovWiP6HCO89N8/YFtZD/jtdDV0Yb/GxDTs/Cn3PfolvvHNb/C9
      X7xAx+Qkp5/7LdvL+q/xTm+Pe7SF//qfZxizXuM0vuijav+zfP6T97KjyX3VU0Z6WxmxXP23
      S/gtFL+2HWd0FtrXlVgeC1v+9DTH28be7uH0lG/hyftu5Y9nJhAB91ADv/7mQ3zh/x7kakb2
      bvsIra19BB0e/zZzNsdVGQ1ESpSMORzADN1dKhYtjL5sTCtVULjxAW5fnAiuIXY9u5vBa0yM
      IDOw7v4n+elPvscabRdnWyYQA/73VusuivgD154rBJ+PzmEbGzYUUF/dclWTqtIjr1DeOfM3
      7+Puv0CFK5OV6aZL2iHE2fXPf2s8QhQFEleswllVhwOYmJgkOSEZ6dtIuoWAB4fDTXCI428z
      d2tEZQiFcQL1vdPkCIN0RCwgzdYGosBoczFbdx5jwOIjadnHWEgJJa3ldHzLwg2bHiGp/xgV
      Th3+GQfX3/kxhk+8RFH7DOqQJG775KdYmRbGFd9RKkOlkF2RIVyDtbyweTedYzNootbyb/96
      J7aqgzz/WgkehYk7H/8yUSNFvLS/Arcg57oH/41bCyMv/cGuit1s3nMOq8dDh5hIwD3D2ZN7
      OFLWiVsdxX2PfZqokVL+uq8YR0DFyvu+xKYlsZee73P1MzwmcvMDN9Py7GkG78zHdeFVjjQF
      0PochIb62H+8CuHCTxm45RHuK7TyzPPHsQmQe9PjPH5TJuCjvbaByJzbMMnA2l/FC3/dwaDV
      x5hVygMbAvTWHGPnviKGbDKyNnycJzYWXCqlJGFLSPVU0jNxPa6RHkLiUpB3Azg4+twfONU+
      jkQRyW2Pf56MQBtlZz0kJOnY/dIzVA76CM9Zw2P3rqeneDMHzrbjloew5q4HWalq4g+HGokS
      LTT3WPj4d39Nfv9f+O4JL3nyEbrtej79lX/FNHiEHfsvMBlQsvTmT3LPuuwr1iB8FLkGZzgp
      CdnJVLf20eOeJCU3manyNvDZOX1wN82TauI0Ls7sLOJjf76ftWeU3PHfXydLDHCu00L/iIav
      feXzhI8eYvN0Lt/60Z1MnH2JA8XnWZR8Kxo54LNSdugFbDUmfPI4HsgOY6Rp9ukSpY7wsDBm
      3C5ay0/TMVJA2d5mbvvaUyyPkOEebeUXW47ijUxEb+vi4GuniLBIKSodZfHtGxg5foZFD3yP
      9eHD/PTlU8wMNbBn/1lUiWn4+8rYV7aaW73t+CNyue+m1STGGWgo2s7h8wPk3/oQy4VqxjT5
      RMXlEKbfxcColRC/ncF+H1/69hdINatQeKeQLv0ydy+Oovfo00xq0th0x2qyE18PJC/TEyJh
      BTokQGvxblj8aZ66IYrt//scgtfBqX1b6bTGECGdYv+eIu7bWPAGAy4VUXFmRgcH8Q+6Sc6P
      RNINIMEYHkn4RID+rlaqmvpJzvDj9fhwOSbpGrSz+OZPsnpBBmrfIBV1Fh74+lPEjBXxo72l
      5N2qw6+O5fEnv0br5u9Q3G1hgcSDNn4ZX3h0Gfue/T59I30Mv7KNfk0uocIIR06WcNPyTMza
      tyqEPkpcmzVibC4pxc+xX5bFx1aFcJZZ/32fPIR1d97NxoI4/K4AJokFqcSH1ysgygH0ZC9Z
      SrROis/nQdQYUMkkKDUaCPgvL16R6ym88UYevzkHjUqDVuNnBAAPDUWH6FcW8vhnVvPqT3Yi
      Bvz4JBoMWgUSiQQpAl59Mvc/9hmSdVL8ARl6vZyM/ABqnZ+tu0Gv1yIKAUQRBMGPKbGQex59
      iGitQECuRy3Eo25tpGzHs+zP+Dj/selW4gr8KLVySv90jq5WGT/7z+NMDk7gb+1lg1JF0sJC
      UkOVSACpCD7/bFMmYvmDfMbURO3plzkUWMv/+ffbMSJDrZXi881OMnq8HnRGAzJm909AFAlo
      Irjxxoe4Pjscr1fCm8UYsVHxlDXvwyJdyvWGi4ty+svZUeHlsScfZ/TIX6h/Q7NHF5bCpx57
      hMa6cn7zu2IefPg6kChRKeSoVGokgp8AINfq0SoUKN6g71do9ajlchRKOeBHponmlvseY02S
      Bq8ov6Th+ihzTQGAJJzMVDcnOz0YjbPLHiVKLcsL03nxyE4Gq42YzHl8/OHl5KS5ePEXf+Tm
      O+5Cj2S2rSqRoExZwyLPMzz9q1qkflj8sU+her0QkUhR6wyEhoZcTNjrs9EyQsPMjJ08zR5/
      OBMOLxgSuWW1gW2/+SXGECPr7vw4H1ugYPP/e56oUBWp+Tdzy80LMGsBBHIWxLH/+V9QE6Zj
      yCYhJCqLtNBStr/8PEadjpy1t5PgqKXkQjd2QYlWq0SlNaDSgmhtoWY4nv/zq2+RpxPoLdvG
      nyo6EXO42AafbQYkxEawZeef8VvvY7FpkDOljXgcEvRm9cUzlMQnGjk2MIZAEqkFqzi05U/8
      7kIUIyMOYlRaluZlsO3QFrrKTehjF/PpB66/QlwWHR/D8PYdhD3wMGouBoA+AqP7APt3H8Aw
      ZYPwy+e77QOcO36aYbcLrcGM1pRMVmIJW575Nfh9LFi5CROdc/j4YSxamcKunc/TFhZCePZq
      PrYohJPnOrnl5tX0VhxlOuYGbsgLf+dbfYiYszWiw2pBrg1F5rdh80ox6tW4HU5kGi1K/Ngs
      Vlx+AYVKT0iIFsFpY8rmRmMMQSV48MvUaNUKJIDHMYPF7kGq1GIy6i+pGb0uGx7U6DWKixlG
      wG13ICg0qKU+pi02RJkSuQCakBAUooeZ6Rl8ogxDqBmV6GZ6xoZflKDVh6DXKS+1n/0eJxaL
      DUGqQCJXEGrUEXA7sNidCMjQGU0oRTdWm5MAMvSmEHSq2TAUA16sNi/6EP1sae1zY3UJ6JTg
      CcjRa1VIJOD3OLBY7EjURgwqAYvFTkCUoDGGYrj4nwRrK3/+3UnWfeVz5OgFrNMzeAUpcoUC
      rV6PAh82qw2PX0Sh0RNq1CJBxO9x4vTLMGhk2Cw2FPpQNLiZdoHJoMQxPYUrIEWtlCNRatHI
      /bhcIhqdHMeMBbdfQKHWYzJoEbxOrDY7AakKk8mIXPBg94qY9Fp8zhncUgNanNgEFSFaJS67
      BZR6lHixWG34AqDSGdCrJFjtHoxGPV6HhYDCiEFzbWXqB01QCvG+I9JZ+hplU8ls2rgE7Xu0
      YD7IuyMYAB8AAZ8Hh8uHzqALWj5+wAStEYPMa4LWiEHmNR/9cawgQf4OggGASMDrxOr0vu/7
      BgsBH3ab/X22UxQRvC5mbK7gPslcgzNc3ck9HDzbgPOignG6s4Itu08yeNHtTAx4abtwhuru
      d+8qNtFVS0335PvqLCD6XdSd3MvJhgHGO6vYs30LW7Zu5+jZRpzvVUICLlorqhmwXymUswxU
      sWNXMXY/YB+muKKZd5DSvSd4ZzrZ/upW+mzBEJhjALhoOPEaO0/WMm5zA37aiw9zsrSS7mkn
      MGuNWFbRhlypAmc/23+/g2vVcI42l1LaOvruA0AUqDu8gyMNA3Mu3Wxj7Vzo87M8O5rRxmLa
      HCHkZScydn43+y8M43YOsWvLdgZm/o49Gv0O6k6V0H2FNaLASEsNuqzFGBSAtY9DJ6twvvun
      gL2T7X/dQ//fvIkEdWQOty5QcrioEc88j4G5WyMaw1ignLVGTNJYaJpJY2HSrGdnwDlOXXUb
      hvh4pIKX7voySspLmIxVsaxwJXGBUSxKPVM9fcQvWIZyqp7zjYOoozJYuiiHEPXV9SSOkRaK
      K1pwSzRkLVpJeoSCnu4OYlIXIpnppNdlJFlrp3FcINQ1hC00i/DkdLRmE6LHQkPVeTrGPCTm
      LWVRvJrapn7CQgW6x+WsWJSNWiFlpL0eadRCwg1yJoHQuHTyC9KJtDXzbHMPtxVkk56ZgU42
      Q3XZGOlL8pBZ+mgcC5AXraD6QjVjThlxuYtZmqihunGACLNA94SC5XlxdNefp31glObBGa5w
      MvIMUd2iYMXnoq5eCnlmqK2qomvYijoygw1r83B0ljMZupx0s4SexjJ0KStx9l3AozAxPjRK
      em4mqVlZhGrBPtrGuYpGfOpIlqxagdHdR9ugH5l3FCFqIVkL1yB/bh/DlhySQz7aep6/h2uw
      RlSRkamjrXsSa08XYnrKrEgr4Kb6zAlaJwIYGWfXluP4QsMwaozEJScRblDSW3WCvzy3hWlV
      OFpfO1u2nEUaHoul4Tj7zrbwdutCvE4nUl0IKmGYw/uOMTZtpbL8DNNusPbVUtrcj3WggZ2b
      /5eKfhGTTkXb+SKq+6boqDpFRbsFo8LJ4e0HGZwZ5cTBrew63oTaZEJ2UX46OTpASHzMJfc2
      n9uBZXKAioY+EpLjkLjHKDlxkgm7QEXxXnrGHfTWllLTMYnX6wK5HpPUwq6dR5m2jnLswFb2
      nmxGbTIxUHWIg+dHiIyNxaB+Y1kjYu1uYjI2l8S3cV4JeD24BRlms4rOYy9ROgCjtQepGZmt
      HxvOHWDQBs3FW/nfzUUEdGY0vj6O761gJjDGie3HsapDCYzWsv9INWP9Nbzw7Cs0TINZr0Qu
      D0GicjBtcVw9AfOEa5i3lhCSkcPIkRrKPFryM8Jo6Zu1Rmyuq6DGFsqwQYVenUlI7EVv0MUL
      SRIDjCAhcdlGbluRg7d+GyPJ63hy7VLGQ6fYVtaBz5+H4i1uSn4G2qsorxhHKswwLU/F+zYy
      fmn4Qj5xz3UohQDdF4/11p7lQqeGyQg9ClkcggQQjKzbdBeL3+D343I6UCqVl3ZfbD65mR/s
      GUS94jGeWpeIYGsFQKEyk5NoprmjF1XvAFlrb2aqp4Rz5Y2Ifgc9gybc4uwzrvWz5MkAACAA
      SURBVPv4PSwMUXGioouk5Y+yqkDJwJn6y6WN4KahcYzcvPy3MZEScVoGqa44h9UrMtLXQawd
      oq76WXQsvH4DaxelIp25MHtsspsztS0YHHa0EjmJhXIQICJ9MRtvWItZISHg9gHSWRHePOba
      hBuaZDJUL3F8eBmfLTTQwqw1YkR4NOmZN/LpW7KxjU6hkQmo5FbGRhwkmZWACqNBPWuNGBWH
      qrue7olMplu7kRkLkF2qgUX8Pi9ulxulwkNHYxv5d3yThZSy+cgwIMHjcmGzTmLt6cWhSAZA
      azLyZnec0Oh4EuU5fPFTq3GPT6GQe0Gtx/AmBaPRZGZwxoIgztoeLrztce5JGuGlnVVU9S1j
      4etGylIF6elxlNaUYJ6MYEm8ic7yDkKX3MHdiZOM/bVu9jy1AePsJseE6PU09fczkxKOxeG6
      1ATyOyz0uQSWRYZckRZR8ONxuXBLJIz3tTKly+fLj+Zx8LezRvNSqZSZqQmmhy30jgvEAyiV
      6LWaK9dTGMNJiQgj445PszpBic0RQBzuQ6vRo7hY1QlCAIkYQKOa375Cc7RGFLDP2AhLXUhi
      qIglYKYwJwGP20VkUiaFuYkM15xi74lzjHhDWbAwl0Szg4OvHcVpSiBBL0UZFkdChAGpPpEE
      VQ/7dh1kylTIptvXEHIxU3otg5SfLaGstBqrIo7FOaGUHD3GpDSM5IQYMjLSkVu6OXa6EnVE
      GvHJSSSFKnHJjGQlRQPgslvQRiVTuCAHX185Ow+doWtaQV5uAl63SEpaMnrF5TavVLTT1DhB
      Vl4quG1IQpLJzc1jQYqcivIuYpLjELwiCWkZREcYmGptRbfsNpYmmTAaFbQWH6PDriU8Jp78
      nAQ8bpGUjGR0MinmqBgmao5ysqoPjTmBnMIswjVKpgfraB1Us2RJFqrLaj0Gu2soOn6aC1WT
      LLp1Nf6OMooaJ4mICichZwlZ8SbOHdhB05SOvPQQYpLzUPqm0UelExuqBsHDjE1OakEhOfEy
      yg7t48yFVuQRKcSHKfFJQklNnXWNdo7VUNmmYeWa/MtLM+ch894Yy2vtY+vWEyy96z6yo/Tv
      w0bUIg1HnqHZeA8fXxXzAUzEiIiii/JXn2VkwWPcVRA6ryeD5vN/B0BpTODemxfQNzD1Pk0M
      2XF5U1m56IPI/LO4hjoYjL1x3md+CNYAQeY5Vw2AoEI6yHzhqt0fSVCjHmSeMN+bgEHmOf+0
      AWAfbqPoQlNwA2nAM1THwQtdH3QyPpTMMQBmePFbD/LEj15k1DZrjdi86+fc/dj3ONc7u+ug
      3znGlt/8mO1lPeB30t/Wf83CrqY9v+DBzzzJN7/1TZ56ejM903PTRtZt/z5/KXvD7o2ii1P7
      D+DXRlyeIHKP8PKPfs+FmbdPVX/Ji3z280/wSvEAAuAfqeRHX3+SHzx9FMtbzhZxWUbp6Bv9
      cPeZBDd1ZRfwiLNzHz7HMLuf/Tnf/c53+MFP/si5jnH8zmna+kev6bbTVdv43sul/4gUv6/M
      MQAEZGolBr+EMbsDsNDVDjlZYfgCsxNmIpC19i42LkoE1wDbfrf9mtWgftSsvPdL/OTH32Wp
      tJkzc9yw2e9x4vZfzoTC+AWqp+IpSI+43J8RBbwuN/6/kVkFvwdTSg7+nhYcAYHR7mEi81JQ
      uq++VsDnmmFk/K2h8WEi4LTSboWchFm7ElvfeWrGUvjqUz/m35+4nRiDEvdgLb/bduKa7iv6
      PTg9H/2RwmuwRjRRGC3S2G8hh0E6zHmkOToAgYn2UrbuOEzvjJ+MIRc53lNXWCOmDhVR5dXj
      Hptm7R13MVn8CsebJtCEpfOx++9jSXLoFVP5EqkCnVbOmNdDT+Vhtu8/w7hLw4pND3FHroKj
      23dwtmUYdWwhX/j8A29KqUh32Sm0iz5DuBKmu8+zdes+uqcdDLdJyBF9DNef4KXXTjLplrLk
      jsfZtDb1kiZHH5aCStLP1LSd7jE3aVFhTExAwOvkyMu/4lSrDakxmfs+/TBhY43UdYSzLEXO
      zldfparfjj7zBr5x/xLOH9zG0eoeRG0c9z76KBkzp/ivgwNkycZpHYdNX/42aYM7ePrUNKHi
      KKMk8MUvPIyi9zTbD5Yy5dOz8p4HWKvt5kCvhsduX03b3p/SlPw4voOvEPP4v7DWPMkLT29l
      2UOfpvfYi5Q0jaCKzOWTj36SzLBZLyLrZC8ewoiaNUhCGRKN3LqfMyVJLM7JINao4MBfX6C1
      1M23rGPc88iDKOq3sLtiEJ8ylI2feIwcaQ2bD9Qj81noGIYHv/0fZP89ue5DxDX0AWQk5SQx
      2NJLb9sISbnxs9HjtXNq/y7arDIi9T5ObTtOwq33sjZrHV/976e4f2UKXtcEbZ127n3ic+RL
      azg6nMrXn/oJ9y2SUVRUcdnB2GfjwpEt/PbpP3FmLJrF8QL7du9mUmIkVDbKzl1FNJUf4UDl
      IJHRZqZrdnO8+c0e1B5Gh6aIi41GAlQWH0FecD8//v7XWJcVCfZRdm/fx6TUQLjKyuEtx3lj
      PaPUGjDJVAyPjGLze4gIn9XrSKRgikggLiYaZ0c9F7qGCHhd2J0eHOMDNA152XDPAzx86xJs
      /XWUD2r56vf/i39Zr2f7wWpcPhd+XTIPf/X7bCqQ0dA9TsDrRh6ziC9//RsUGmx0DvZzYOc2
      JjFiCAyw+UApgt+NwzW7FsHvtuKWmlmUK1BS3oeto4wuTSEhI0d59UwfpsgoptuLOXmhl9df
      6VhnLYqkwkv6JF3UYj77hbuQDNXz8p//zOl2CxvvfZSsdXfy3099lVVpEWhDo0mIjUU+1U1p
      TQc+rxu3IoZHv/5tPrnQT2v/+7Fs5/3h2qwR43JIOvsih+Tp3LTCRCkgCgJudCy54XY25EVz
      v1dKhMSBFD8+n8Bs01NHzvIVxOll+PpdCIZQtAoZGqMBSa/nsoOxXEv28tXcd2M2er0RrX+S
      k5pw1m+4m/x4PQFRzlTtbuIWrOHeO5Yjv+9TqEM09DVf+Zc0WgUejxfQ4PL4MYYYkSIiiiAG
      /DjlZq6//R4KYvQIASXmKy7Xkh1t4WhrLWG+eMJNVgDc45UcO2fn9ifuJtK/lTcuKNQnFPDo
      J9VUXTjG/+xS88h9KSg1elQyOTqTCb/bjZ9Z+0GdUo5SebG+kUjR6PSo5HIUCjmiGABNONff
      ei+FcRo8Ei1MlBEI+BECXpwuHyAndd0NiL86yN4+JwXrv4TC9hrm7FVs+vhq1FIRtTFstmTz
      j9NQ5yT/0fhLe/wG3HbkUQu451N5xO/6I4cqW1mzTgJ+Hz5BRCZ2c2RPPYsff4L0sAB1F7Xq
      qtdtEhWy92UXzPeLaxsFkkaSlWKjZcBDiOHiRtkqHcsKUmkvPsKuPXs5cbYRp9pMVqqDzU8/
      T1HzMCBFJpPOWiOmrmahvYQ//v4P7DjZS9aiQlSvh6FEhj40nNjYaMxGLSpDKCsyoik5upfd
      ew5QXDNA/MKlaMYq2bFrF/uPFtE/8+Z2qJykjHS6W9vxAdlZ2TQeeYH/fWUvrSM2JIYIblgY
      Tsn+vezas4+zVV1vWoYoJT47iZHz5xCT89C9vsu7woTM3U1xUTF9k64rVq3ZJ/upPH+ecZuI
      WqEgNCGHKKGD5579A7/d08x11y1EP4fXq1CbKMhMpPToTvbsPcCZ+l40+hBmGov4fy9t53zH
      JCIgDS0gx1DDnnYzq9J0hOWsJcVaw7bXdrH/yBm6x+yIgKu/li7jQrJCL4v/nH2V/OX/Pcsf
      n/kzJ9sDLCvIQG2OJs3VxtPP76BxOIBWMUPpqSLahqZ5RyN51yBHdu+hewZaS3Zzun6Ij1LP
      YI7GWAGsExPITVHIvVNMueREhOqwWSwo9UbUEh+TE5M4PAFU2hAiI434bZOMTLnQmyPQCi68
      ci1GnQoJ4LKMMz7jQKY2EREecsli222bxinREqpXXRSlifjdDiYmpnAHQGMMIzJEhX1qkimb
      C4lCTXhkJFLnBC6FmdCLskbR3cHvf3GIW578Eul6H5MT43gEGTKJktDoMJQBF+Njk7gDIlpD
      GGFmPTLA55zB4lcSrpcxOTaFMjQaLQ5m7GAKVWMdG8Luk6NRKVHqDWgkbmxeOSEaKdOTE9g9
      Akp9KNFhery2GcanbaDUExUZisxnZ8ItJypEi8s6iVtmRI8DS0CNWa/AbrEg0xpRCi4mJqfx
      BCRoTGYi9XImJ8ZxBhTolQJyYzRGlQTH9AhTXjVxkSakEhH71DhTNhfI1ZjDwtEp/VTtepW+
      lJvZtDjh0pcUfC4mJyZxevwotCbCw0wopQK2qQmmHALmyAhE+xjTDhGNTo1cocWgCmBzQ4hJ
      h8cyiVdlRo+dSY+CSIOUsfEZ9GHRCLYRPPIQzEb1+yAqfG/4p3WGqz/+KvWSBXzyxvx56b7m
      tw7x6vbDrLzrATIj5rbh93zknzYA/G47M26RMJN+Xko7BL+Xaasdoyn0kvlwkLdy1QB464KY
      IEH+ObnqKFAgEAjKoYPMC/5ptUBBgsyFDzwABJ/7n2JKPchHkzlOhHloPltE67gLiUxBREoe
      i7MTUcv/3vjxM3D6VY5rNvLEmrg3HPcx2NSCNyKNlLcZwfDODFJaWY8hZTmFqWakgoPW8vMM
      EcnSpbmzbmtBgrwDc8zBTqpPHsCiiiM6REHprl3UjVmv8VGDvPbnzfS9QTsmeqao6JKyItv8
      pnM9tJWcpKbv7YVmntFWtp08SsXRKuwCCNO9HK0rpWRXMVO+t54/3V/N5t0ncXmDnfsgl5m7
      NaJKR9KCZSwy9tFc1kzALxBwTlBbVceoU0p6wRKS1TZqBt3ESCcYlycRIU7g12gZHZwiLS+Z
      7MJCQt9QoFuH+5k2RpBsUAEg+N0MtNbSPDBCW98kMUtmbRerK+sYd8vJLFhCWuTlOVVV2CJi
      jZ2MTF2Pvn+EqIxkAp2zgdlbd4aWIQdKUywFBXmo9REU5IYhl3jpa6qjqW8KVXgKqwrSCUz3
      UVXfhltuZuHihURJLVQ0DyP3TzFul5K9ZCWxgQEqOi3gmsSjjmJRQS56wUpTbQ1DDjlpCwpI
      1Hnom/KQlpiAY6iBCXUyqrFOfFFZJIepGGytQojMx+Tu4nxtNxJDDIuWFhCqCg5TflDMuQ3j
      nBri5f/5Hk/94nlcqYvIDlNSU1xE65gbpauPnduLGBlp5qUtf6W4ahS5HOpPb+dPz+/HKlMj
      l41wdOtJJt7gMTs61EdoeBKqi1tzTnSdY+eBSqQa/ezscMBF5elTdEx6UTh6eG3HmSt0+TKF
      khCjiYnxcYamrcSYIy7+4sdqcaJQaxmoPM6J6l6mh+o5XlzN9HAnx06XI1Gq8bqdeK1jHNy7
      h36nBG9/BS/tP49vuoNtu48zJarx9pxjZ3EH1p5SNh+tw69Q0Xj6ABe6J2gqO0rdoBOZY4Bt
      e04wMdRO8YU6fAKM1x+hvNfJdNsp9p3vRRRGObWjiDH7AIf2leJSqLG0F3PgTPtVd50P8v4w
      5xpAa47l4U/9mBXmYbY98xKlTWGMVJZQa9ETplOi1uvwokWhTuOOB+7EIHoZENTkbbidm5em
      AS1vuqOHrrZeEjfcxuv7xI23t6FauJ4brktE3tLAlMtKTeVZmuwGzFolWpMJzxtvIVWQEqGh
      ZLCfKKuV+IVpQCf4ZmiqKKPJLsU6NE5Gqh3xogmbUhOCUeqhsbWNxLRCLNZRJkUD9954E5H+
      GFp+Ws7gulwUhniWrFqFKO2kut2BECfFnJDN8pWLcXVUYXd5GCs9SPlMIpFGJZjyrkwbAApy
      167lwJ8raI0w0Bu/nLvdHTxTWUXMSD9ylGTH+95ZbxPkH8Y1e4JJZHJkATeOgJSw0EgKlt7D
      ozdlYhkaw+NoRhpiwiAFAoBSjUmnuvqNbG10WZNZEqO+dEip0+DoHsHljsTucCEqlYSFRLJo
      9Sd4eH0qlqHxN1kgSomKj6DvcBUyeQqLjBcrNEc7zSPxPPGDB2h95Y+X/EIBAnI1y26+j6Wu
      fra9eoqo+FsJ2KYZmrIimepiKtTEm3skV38REBaVSk7hPXzxtlxmRqdx2ztxOpx4XVP09I8T
      CAdpWC45pp3sORBF/qYV6EIHiQ9N4I7PfoWCUJEpu/vaP0KQ94w5WiMGGG5t4PjxQ5wuqUKT
      fzN3rSsgKy2ajpL9bDtwkiGPmdx0M1afhoL0OEDEPjOFNjqFuFAt4GFi2EfKwnR08gC9p/cy
      lHYTqxIvu7EZw2NxtB1j14lqBG0kGYVLWbcokdaiPWw/WMSIP5wFufEoAcFrZ8KnZvGibOQd
      TQgFG8iLlDA5GiBl2SpUY6fYf7IRQ2wKcQnJJJjlOANakiM1VBzZzqFzrYQsXMvGlYvJi5Kx
      f/tmzg2o+eQjdxGn8jNil5OXk4jUNYNFFklmpBSLJIK8ZDPOmSm0Maksy09nuOIQ2/YX0e3W
      s6owHWtbGXuKOzBHRRGVmk+SWYdR5aZqTM1dNxSiN8WTHm5h35ZtnDjfhDY2h8QoA/PXoPyD
      5YMxxnKPsfW5vSx46BHyQt6mhggS5H3gA5kIc9tt6PPySdfPb2fiIB88QWvEIPOaoDVikHlN
      0BoxyLzmAxfDBQnyQRIMgDch+pxUnS9naNr1zicH+chzzQEw0XOa//3TQSxXEZzN4qfu8J95
      8uHPc7zXB4hMt5Xy4689yE/2ts3xKQEso8NM2d8sEvBQuev3/MsX/pVvfuub/PA3LzNge7fz
      qF7qdj/N5tKRK466LEPUVtcjyGblpO7pXrb+/kd859vf4ZfP72Ngys7mZ35E3dA7B0jDoed5
      oaj9I+WSMN+45gAI+N3YbC7e3nNWxOsUScwMo6WmB78oMjgyQVJUGBbn20bNm3ByfscrnHiL
      NaKIxwnL7vsK//cnP+AGQyPbzw28y421RbxOKw7PlQFkGWzAF7KYCIMcsHN+5wsMRNzGf/zX
      j/nsplWY5CIO2ww+/zsPFHhdduzuuf7nIB8Ec5uF99i4UHKYY2cqmXK7UYWtY3roPCeKvdz2
      yFJa9xzGnrWM67JjL11izFyOvr+aUWcMI2PTRMfHUA+4pns5smM7FZ2TJBTeyG03r8F2/lUO
      t/vwjvdgNS/mkbUqdp8sYaqml4G2O3ngxgXYbHaMkZGAn+nhXjp6pKjCYlFJvLim+zm+Zxvn
      WyeJWrCO2zfkUb5tGym3fZYFql5ePtXDvTflsPvPv+RowwxxSzfxn/9211v+pui1UV/fQfaa
      21BKAPsAFXUC655ajEklBVU4Ae/rJb/IYP1hfv8/f6XNrmX1p77EF5fr+P3eKm5Kh1pHGjk+
      H1Mj/TRVj9PcA7fdvg6jKtjq/DAxt68xcI6Xz8v58lM/5xufu40wZqXLVosLARG3zfqWVV1y
      dSJJiW5aLhynx51LTrwOCNB64E9MFXyen/78Z6zV9XK4qBGHw4Eucz3f/sZXiPGM4E9cwT03
      rmXT5/+Drz10C4w1cPr0aVqGbICPvvpSnvn5D9lvLeSLt2QwVPwiXfEP8OOf/Zj14cMcPjXM
      dWuyOF18ltoL54jNXERguheHMo2bNqwiUFdNs/3NLtEiM03HqNOuZ23KRV8ihQqN3I3d/tZm
      liiKDHX3YsxZyYZliZwrPY/P42JydJy4VZ/kibtXocJNb+VetpyY4Prbrgtm/g8hc/si4bHE
      zLRxoaGDnq4hnIBEKsE23UdXSwvNnYNvUUJKpHKSIiOoO36C0MULmBU8yEjIzqer9BiNbS1c
      aBskOjH6KtWQDL1JwkBnOwNj00QsuIXPfe5zrM+NADQsvPl+vvedLxHWd5aTLWOYU3KZrDxF
      TVsn1Y2DRKVEEpNdSNRYA8W9kLcgDtvYMF5TGuvXLSU6RP2WJ4oBJ7UNVhblxF1+KaoENm5M
      4+SO16hubqe2vp5J2+V+yeDQIFE5q1hTmInhdUWHTofudRsShYFFtz7Bhph+9h6vxuUPLsb5
      sHFVMdxbUEeQYHZSWVaNUxtNdno6GWkpBCwtNPc5Sc7NJy0lnjDDbMYSBRFdeByZyWFM200s
      X5uDAQGZKZ6Fi5ZitjRQWtVCzLI7uWlpKnJRQB8RT7xZhyBVkJCYQnJiJGOtVfQ7VaQkxqK8
      qBYTBRFjVAKpGdnkp6hp7ZghZfE6EsQOyi80El54Kzcvz0CtUuHtOExn5D18rDASQ0gorqEG
      uqZlpKRlkpGTgkkuRR+ZTGyoGp91lDNNHSxesoIQzeshKSUkKY+YQA8V5+txKCJJT41DKYPY
      xAySo3R019Xh1MaRkp5GXkoMUqWe9KQ45FIJohBAF5HCssU52MdGiIiNQ6MIyt4+TPzTGmOd
      3fJz9vdE8uUnP02C4Z27OqPNJ9hfIXL/wxswBI2k5g3/tAFwrYy1ldIrz2FpashHxtcyyN9P
      UAsUZF5z1baBz+cLqkGDzAuC43JB5jXBAAgyr5nzemwh4MPnCyAiQa5QIJNK/7Fb5Ygifr8P
      f0BAIpWhUMiRvs0DRSGAzy+iUMqDHdgg18TcAiBg5cyWFynptiBTaMlZdQsb1+Sh+QcOabsn
      W9n88h6GHH7kxgjW///23ju8jvLM+//M6U066r03q1nuNu7GFIPB4ADBAQJZQjaFTXbTNqS+
      SX7v7pv3zV7JpiwhgdDBgHHFvUm2JKvYsixLsnrvvRydPmdmfn9I2BQDMiWx4/P5Q9elOTPn
      3PPM3PM8zzz3/b033s+CGC9tLU6SspMwvOO3Pb0n+O+XHHz1J3cROtsfkNx01DcixM4hMfj9
      C2N+rg9m5wBTrZSeV3H/L39IkuJgbMqLRlBQZAVZUQABQSUgoKAgoBKmF6wQVICMPBM5J8z0
      GsrFSDph5n8ZZebz6ae8zOCFU/SGLueJf12FxzaMQ9bhGK/hyN4e7k+NJ9L4YcXaFGRZRlFA
      EFQzCT7ytG2ArCgICGi0OgSVgKIol7HBz/XA7GRRNGoG6oo52zSKoDMRGxeLyt7Btj//D9uP
      nKTocAG95ngMzSc40acmJ8FIwZP/w0DaCgI7j/O7v7zK8YID1PcHkZXl4I+P/57GsRaqeyDY
      1cDzL2/l6JFjtNiCyMyIQScIaPFQUVRE94QXnSWchGAHu5/fSsHZaprbWwids5KoGZVEn62d
      svMii9bMwQSIY0089Zv/Zn9+Eafr+ohMSae98GXOTsWQaR7nD28cJjUhjKKt+/FlpSOdO8yT
      L77OiaJSnMFZZESZ/zat7+fvzuwmwZoINj36ZVZnBNJwcgdvHDxLT305nZblfP8nP2DD/GhU
      nsvHuaiNgQTo1Kh8HurPVjDqAY/XQ9T8O3n45jhK9h+kZdiFLE5y5mg+vTPBluakpXzlkc3E
      aSc49NpzFLQb2fjQnSxfcCv/9v1/J9F+mj/91y95ettJJt6VNiDRWbwTln2Nn/38Zyy3jnCm
      pvNDQqZFBru6kIJT2XjPFpanBM+y6fz8IzC7IZBzjEG3kbyVN5EQIfCXneeYMBkQdHrUgoLP
      J83cYBJer4TP7cDm9GJglPxXdhH7uR/y5dgG/vC/K1CAgJBEMtNi0AiDyOoI7vrKI6xPC0V0
      udAYAGRsI8NgTWDNbemEe/+H3edayLtFQJK8+CSZsOTFfO27i0AQEHsK3mWuoiioVCreHpqh
      KCBLiD4fbtcUTvc7PUbH3E0PEtLZxKm3nuZgyn38/IFln0bb+rkGmJ0DuIY5vvMAfeN2QMOc
      lZtJTpcJKH2Z3/62DPWkjbg4FUGhFpq2b+XJlmSkURcRmEhKC+eFN55mLNt0KWJUmPmjD2H1
      2hSefekpzpgNxKQt5a7NNxGulpnqrWPX0TImPAqCNpCb78/CapzALO3gmT9OcM+X/5XcGS1c
      UZDpqDnA7/+zhvjU5dy5ZjPSs0/z/8r0aIMS2HxLItSVs+PNvzCcEsOIy3jp3GQv7VUlHClt
      YsqhITI04NNrXT9XPbPTBVLk6dXhi68ktagE8IleJNlNxc6tdEXfwgNrk/F6RRRBhVoAlVaL
      IPvweiUEjQpBFtDo1EheCbVOOzNZlhBFEUlWUKm16LQaBGF6UnppuwatVouAgiR68ckKWp0B
      tept83x4POJ0EWn1dNV1WfQgSgpqjQ6tRo0i+xBFEVRqBEGFVqNCEiUEjfpi76CgQqvVolH7
      l0euFz4FYSyJodYmbMYY0mKsn7J5fvx8tviV4fxc11x2DqBWq/3iWH6uC/z5AH6ua/yzPT/X
      NVepAyh4p0YYsbn/3ob4+Qdnlg7gonz3i7x2+DR27/SIaaQunyef30372CV5Ec9wM/tKaj+5
      VYqXC4d3c6JpGICp3lqKSlum1xHcgxTuK2X0k/+KHz+zd4CmkoMcOlXPoM0FeGkoLOBcXQNd
      E3a6Kw+w9Wg1npF2jpyeLoZX99avef3s+McySrKPUmXTMC9xOrbTPtBIWUX7dDVF7whlRyu4
      3DcrssT+15+iuvtKaxi/H7etk22vvkHfpJPqQ6+x42TLJ/5OP1cfs84HUAeEkmeAttEpUo3j
      XLCnkxs3/Rw2BISRZooEZQBQGG2v5OiJ09SZ9TgGV/Hlm9OoLi3kbMs4UbnLuXVpEn2VJ2iw
      6RjvasWQsISb18zFPBPiPDHSg6AOJsJq/GCD8NB86hhtbiOj3Z2EZa9l9aIkYhOSCQ2QOX38
      CPFLbyZMGaKwto+VC9JpqyyirHGIqOzl3LwgjsbyGlRxZloax1ixJJPG0mM0Dkskz1/Fkgwz
      iUmJqO1tHD5UQLuuHcm5gjlWL1PhS1mVZqWjppypoAxy40M+29wIP58Zs58DCDrmZAfR0DzE
      WEsL2sxUppe9FIaayylveFtkVsASlkhGYhgJuctZk5dAy+mDHDxvZ/mSdDoPvMiJLjtdFUeo
      GjEyb2k6TUfeoPGiDKjCYFsN2sR5WLQfdld5aCo+QLM7gnkLYqnYt52eCZnK4oP0TAh0Xiik
      omWQwdazVDf20XOhiKNn+oiNtlK9ewdn+gapOXmAN/eXEpqUhrOzlKIGZspJsQAAIABJREFU
      kTm52YSa1HgcQ5QVleDURjEnPYGkzAUsmZtJuHaUg28VMyq6KTtxCJvPX+PxWuYKJsECgWnZ
      GBqrKG7zMTftg1NP9AGhRIZaCI1NIT02hL6uUZIXLSEzbznr5kJ183TPEZ2SQ2ZWNuEGF963
      193kCeqrxsmdl8Db8jyCALIsociA14tTq0YLCGo18em5ZMyZQ6Dage+igqGGubmZtDc00dzQ
      RGxaNrauC9S1dlDf3I0pJgqLWg3oWHTL51iVFUtIXApR6iHOlp6mqW8caSZnQaUPJCo8lLCo
      BJLjooicdyvpnKexuoge3yKy4gP9T/9rmCt7C2RMItNSS1GvRKQl8MN3NQcy1NlCz5idiKgA
      2qtr6Ou8QNkFH3OSPijkWMHbVUmjdQlzgi6ZZoxMgPFq6hvbqSg9jTs+jqiPMDUhPZPxgXM0
      tHvIyownODaRyPAEbrv7Xu6+bTlhBg1gIiBgetwleDXk3LyRZTlR1J0pZNz5tjcJGEwqRvq7
      GRqbRFYFMT8rgfzXdpN4640Ea2fVcn6uUmYnjYiC1+0jIjmH+DAdoiaCvDlxKLJMZEIiVq2C
      NiiOhDAjXm0g2UlRBEfF0lORz7kxA3fctAL9RCOHiuoIX76ZO+dHI4tezDEZxFpVeNw+olIz
      CdJ7OX/kGLr5q8l9O9sF0FsiiAsWKSk4SY+QyIP33UKoUYPo9hKUkE2ESUH0QlxKGlrFTXRS
      FuERViyjvbgT1rA8L4qQ8DiC5F4KTpbRNiyTlp2KURCISE4ixKDFYx+gpKCAxl4XC9ZtJCcx
      CEXRkpCcSlRUKOOtZ6ju9ZKYmoJVHuBgjcwjD6zF7H/6X9NcVSvBkq2H57YeZf3nt5Aaavp7
      m3NZvK0F/PSZYhZt2sKWlRl/b3P8fEKuKgdwjnZT1TLI/IWLMH3oBNiPn08HvzSin+savzSi
      n+uaqzQWyI+fvw1+B/BzXeN3gI+J7Bun8MBxht3++ZLkGKWgsJBRx7VXEXOWDjDOC9/fwpd+
      +SIDNh+gULf9P9n0pR9T3DG9qis6BnjlN/+bHae7wGenpaYV+xUa03l2H7/+5c/42c9/yW+3
      HmXC6Wako5XesfcUtJNc5D/7FLsrO67wF64ccWqApuYB3nVpJQeVbzzPYPxiwvSXNlfvfY7n
      91d9YF1g+0Az//nNjXznj/mIgOweZ8+T3+PhB39N22X2l2UXTRdqmXBe3fOxsf56unvc6HTX
      XljIrHsAY3AI0Ro9w04HMEFnl4lF8y6VRRXUepbc/gVumx8H7n4OvniAvisyRaKmvJi0O7/J
      L376A+5bk4NB46W+4CClTX+/4Gdn3zn27K3C8Y5t3pFW8gcjuDnbesWpowGpc0mY6KDXAx7n
      FBiCiQ/7gFV1RUHy+T5mHeS/HUMdDZiTczFfg6+uZ+2ygjaQebEKFzonyJR6aYvIIcXWBIrE
      QH0RO/aeZMDmJWb+BvLU5ZQ0n6H1p1Os2bSF+K5jlDtMKHYPazbeSs/xrZR02tEFxHDLPfdz
      Q1oYKkFFXHwce07uI8S3hMw56dg7T/FW/ilGKtrpb9/AQ5tvJeRyAaKKREv5W+w8VMWYVyDz
      pnu4P0Pi2eJ+vn7/7dgqXmKbcz1bLIX8R7HEYv0goaseInLwBPtLGnBJFtY+8AiZY0d5unSC
      aGmEthGZz3/pAc7uOUxFjYPJ/2jjkX97nIwAmf6OZgyxCQSpAfcw2555ivMDEt4pO6kbFmLr
      rWX/zn00DTkITF7Blx+8hVDDTFPrYslJt3GhZQqzvgmPKZMgwygg01b4Oi/nN+ATfeRs+Bp3
      36Dh1OFDrInLpX7frzl43oYmPIXP3/d5VO372HW0FqfKyJwVm9icZ+RPr2wj3KCnuaWL+Du+
      xUOR9fx8bwd55inqux3c+rUfsczUyuuv76V7UiIqdw33bVjMqd3PMO/u7xPYe4y32g0sVbdQ
      6svlKxvTOf7MU8g3fZWYvnz2nazGLupZteUxNsyNmn56in3UXIBFj0Vfk+PpK7BZRUx6AkMt
      3XS2jpI8Z7oBFK+DkqP7aRj2YBAclO4tJu6WTaxIX8Hj//Fj7lmahCw7GBrXcv+jj5JNLSWO
      uXz3Z7/ggRusnCk7h1cCEMi95WG2rE6jv7aQZ1/dixS9mLvWr+SOh7/Ntx64laHSF/jVr/5A
      fsPQe2wTMJgCsQZb0IpDlFQ2oSgy0tv6prI0HdwmS7hsXhZu/iorwsbZf+g4TnQokw28VdiA
      IksYI3J47Hs/ZVOWSLsnmofu28Dipffy/Z8+TkYAgIJ9yo3FGIAATDUepVK9kid+/nMeWp+F
      Dmgu3Udhwyh6jUzt0RO0TLneZW14cga25jYGWjsIzUphOpxIQR8YSrDZgtY3SVVZLfaZHkBR
      FDpb2gjNWsWWezaSHO7mTFEz6x77ET/65zvoOlfGoNOLTwjgxi3f4HsPraCrpx9FkdEGp/LA
      v/yQLSuCaekepu74G5R1e9FrZU6XnKB7yIEs+VAUUBQJSZaJS0umv7MNx2gv511RZBt62LP/
      OA5Bj8bVzoGjVbydq+fsqGEwci6Jlmvv6Q9X0AMAaKKzSSl5lgOqTDbeYKUMAAWfNoS1m+9i
      w7xYRKeIWRhHJYh4PTKKFsBM+vw8Ikyq6fUFnQmtSkCj04IsMT2NFJkYdxE/bxUpKfH86Q+v
      0zK5CkEl4xWnb4K0lVv41lIZrRZOlV2yS/J5yT92lKT1j7PeXs6L1dPf6BN9yJKXKbsLZeb6
      BKfmMSfair2vC0NkJnd94cskB6tx+7Q4azvQmkzoNVo0mpkDVAKyz4ssKSgqAUEQ0Ot1SPZp
      eUXJ40EwBaBXK0iSBFqQVQZy132ORzbMBY8Xfci7wzoCw9JQNx+kpCuJzy3TUw3g6mTfG5Us
      +MbXSBw8xkv575hcCwI3P/R9Ojrq2fGXP5K9+V5kRY1Oo0Gt1qIWQEIBrRGzXotao+HtEFW1
      wYRRq0GrUQMKChoW3/ZFHlwZi+TzYdCqaJVkJNmH02FH9JkISsxgzlQ5+ys1BCWmEaQWEELT
      eeCLj5Bo1eIVVdN1n2Un58/1k7NgIboruZGuIq5w1hJMSrKPglYPgQHTF1XQmVk8L5VXD79J
      R7kFa1gu9zy4hMw0N6/+9inW37GJQJgeKwsC2qTlzPc9wx//+xxqRcfijatnagB7qT+5h/Le
      KRRJRp08l/SgYJxpURw59DIvTd7E5ltWYrUAkgsYo/DNF2gtiGDuTRsJt+oo2fcmXcHglBLQ
      mgMwDFTx5DMjhIu9yDkzpyBMS7KbQ+OYF61l+8vPYDWZSVh6G0svc8a6kER048/yzJNTfOGx
      h0g0C4SGhzDUNIIMWDNXEbH3OX7zu9MYnWOYF0Jy7kJKth7m6c4yTJZENj18J0nmSwUNDAFW
      DPYBhoNXEf52H6wJJCpc5Nj210gNdCGReckIxUPViQPUjooo+kAshiiSFkdx9MXfcVwNIZlr
      iTLM5hbUkL7sRo698gp/vhBMYEwWd928HK1njNf++iRxFh+uiAgEfThrlpl5Ym8tDz/6VSzh
      BlYn6nj9hWcJMhtJXnALd6zLQrGP0eLWsSZiWk6ys3w/NWI6K3MVCg53sPqOmwi3XN0T41kK
      Y8m4HU5UBgtqyYVTFDAbdXjdblR6A1oknA4nXklBrTVgseiRPS7sTi86kxmt4kNSadHPVHAR
      3Q4cLi8qrQGTyYBGJQAKotuF0+1BRoXBaMag06BIXhwOJ4pGj9lknM4RUBS8bgdOt4iCgN5k
      Rqt4cbhFNBotqNSYjVrcTgceH+g0KtAaMQgiTkmNxaCdnmCKHuxOFzIq9EYzekHEI2swGbSI
      LjuSxoReA27HFB6fCnNgAFoVKK5+tj+5jYR/+gZLw7R47DZcPgWNWoNGp8egVeF2OnCLEiqN
      HrPZOF04W/Lh8njRGwz4PE58ggGzDpxOEb3FgOxy4PBIaLQaBDQYTRo8Tjdaowmfawq3V0LQ
      6DCZTKgVEYfDiYQao8mETq3gdIsYDQaQPDh9KkxaBacoYDHqED1OfIIegwZcDjsen4xaa8Bs
      0uNzO3B5JbRaHYJGg0mvQ/G5mXSKmExmdBphuq0cbmRAbzRj1GsZbirmcJWbz91zExaNgOh2
      4FG0GHXgcooYzSbUqqt7aORXhvtYKNjaTrKjXOHue9YRor+6L/JnxfmDf6E99C7uWnptToDB
      7wAfG0WRcNpd6M3mmR7s+sPjtKFoLRi01+rt/wEO8L4KMX78/INyVeUD+PHzt+ba7bv8+PkU
      8DvAB6BIPiYnxhElfwf5j8wVO4BjvI3TpQ24pMt/Lvu8VFUU0zPmuvwOM4i2bg5tf5UXXnqN
      M+0fT0Hus8Q53szOrXsZ8SjAFOcO7ua5557j+Ze3UdUxjiTLnC89Qu/EJ4+AdNu7KC+swfH3
      eu8guWg7m89LL7zAG/vKcX70Ef8wXLED2EebOVV0AfcHOIAieagoLaD7QxzAN9XNjr8+R7cu
      mSWL5iDaPrmU4aeLwnhLBe6EZYQbVcAU1UfKMGcvZ2GGhX0vPU/TkJuzRfvpfneJyo+Fx95J
      cX4V9r+DAyiKREvpW7x4qIHsxUtJNchMfORRdkpeeYETLR+959XOrJfpxrvOU1h2geHxbuyk
      ofjcNFYVcq51jIiMxSyfl4pR887XgQrjvXWUlp5nQjKRuXQlC5LCEATobSzngpTBj26/AdPb
      r9B8Nk4X5NMyLJKyYBWLs6LprjxE47DA1KSdyMQEvINdjGujWLdqAY62GjpGxhgcthGRkg6D
      bQx6Lay7/TYCRyupVzJZlGCio64cdfQCvF0l9IxLDA+OEJS2iDXzU3D311NQWo3HEMvaG28g
      0jKzmqrYqC7rY8FD6bx9SoLaQHx6FnMDk6ksL2NwbOrimY52VVFSVs+UEEDeDSvIjrMy0VFD
      QXkdsjWFW9fmMtJwhjONg4SkLGD1onSMmvc/exSfh9rCQ9T02DFHz2H1sgUEqqa4cLqEmh47
      iQtWsyxRR3VZCY3DIkHmSBZtmI/9XCvmvEyiDE6qC3tJXpOD2F5BQVkjqpBkVq9dToCnh8Lj
      xQyLBrKXrmVucghqQPa6OVl8luV3fZfFuVGQC0gOmirLOdvYj8qawK0bVmIYrqVsyEjIVBPj
      egPFJwux93twrlzFjUtzMF7dC74fyOx6AHcb2557C29YOqnxoWiA0fYSDhZ3ExhkovLQW1R2
      j737GGV6PcEQGEaAr4/ndx2f3gg4p2wEBUVeKkaneGk49jonOlWkpwdTtv05Kro8NJzaQ92k
      iSjrJId3lWIIj6a/LJ/THQM0lRZQNQDxFifb9xcSEJeEWL+XI3U2HK1FFLVOZyM0nc2nbcRL
      fcl+zvYpxIXpOHT0KKP9Hew9mI/PGAzdxbySX3fRcLG/jvP6ueSFXWoeRfExOTbCQFcVA2NG
      QoMuVZP0eTwYgiIwujvZvr+Asa4LvLj1AKb4NJIirAy3n+FwYTPWIBMXDu6hvOvyT05ZEfHK
      OsLCw+gsOszJhm5qC95k//lJsrJSsOo1XCh4k8N1duakBFN75CTdbhv1+WV0Ob3AKOX7Khif
      auLN7WWoQiJwtxWx+3gdDSW7qBy3kJQQjVry4HFMMDIyypTLiVOSCbe+ozqmz4vTpyEiOhx7
      zU72VI7g7Czn6Ve20WozEx8TTXRYKHFp2aTFhXMZX75mmJ3f9jZTb8jll+uX4G4Zo6rWzljD
      GcoaR3GLIwiaMAy697SCItN9oYJTVf2o3GO0eeZc/MhgNjE5OTIdoakSQJ6ivtLBkofXsiTe
      iru5jLqOQWK1ehIy5pIdInKmYojMvDxsFWfwiiJaTMRlZDLXqkfVNMjiBYvRNbzBSYeHy6Iz
      kZiezfz4SQ5U9TE13s+FqtPohxwYNGrCjDMSb4qPpnPNpMxbjukdHZrkHeXIa89SZw1m/cNf
      JytSx5mZz1qrT1Fa5wLXMN1GI6ODHeii5rN22VJMGmg8dIwzte1MeMZRGy0Y3lOFUhG9+BCQ
      HH1UFJUwpDEx1DZAgN1Ba98EC2/cxMLcaS28Nw/1kLdqMwvn+DhrOMvlpuhibxNFDU1kyQ40
      GMgM1BBqzUA5V0OFOMi8FfFoKw+wp2SU+bfchk5QGLM7ADMA7qlRzp0uYtCtYbKzi+BJNwRA
      RPIN3H7HOozCJE1hoXjSsshICJvVLXS1MjsHCA4jZOwkzb0jGAdGcGHAEptIUkw49z5yNwFu
      O1j17zpEkX00t3UyZ91DLFCqaDx2aZwfnTKP0AOvcfTcYlal6ukfdhOXJFN2tolcvZX6VieJ
      i0Kg7r2GzA5BrWa8r4/RvkmaeqeYe5l9DCYroeEJ5G56kGWxGoanpptC8dipG/WRMTf8Xftr
      9JF8/l+eYMWMJKosXRqwt7a0knfr90izl/DcWS8WazjjPcW09C8iUiOgCoshLlbLvQ/fR7Bk
      QwwwACD57EyOuWguO48vbhFqRzt9nmQeeuwmSv/6HIpKRWSAmtLKCyyOUSHKJkLNRmpaOxgN
      MzHhcAECKrWDob5Reoaa6PeIaMKjSA0OZ+XmLzE3CBySGtnh5u57Uxhpyafw8Bm+/u0HeWI1
      KLJIZU8a+47kkx21AaW7jyn9MA0OK9/+yueoer2HCzPnqQ0MxCgAqDGaJLr7hrClWDDpVXg8
      EgaDDtHtRmUwortGSs3OThrRGEWsuZ9De48xRAhpSanMW7qccG8jBw8X0DAgkjwnjRDjdJCZ
      0+UiOiGDlHANFQUnGNNEEJWQzKI58QiCgMYUzsK8eM4d2U1+SR3WjCWsWr2AscrD7D9ZR/rN
      X+TmeZGIjkkCYrKJNMt4fSaS02KQ3W4CY+MJ1kJATAJRFjUOzMxNjUV02VCHZ5KVFkVL/j7O
      9inkZicQk5CORXARGJ1GdIAGhyiQlTuPnDgzp47so7iiBX18BmlRgdhH2jhfN8yi5UvekeEk
      4Zz0EpE5h5CLQZcKLruNqKQckkNVlB4/id0cT3xiLIsXLiErXGLvrr2c75NYumoNsapuDh08
      Tm2nk+SsDEJNWtyTbez861baDdk8/MDNhFvD8faXUlTVR2RyOinpaSxZOB+5q4ydh8vxBiWw
      Zkk2/eeOUVzTwUCXm9yNN5IVLlJ48DgDunAywmJJWbqUueEuTuw/SHldJ0HxmVi9rRzcd5yW
      cR3rNt1BWoQJFSAIamJSswnztLNjz2Fa7AGsWT2fwNFWDpW3ERQVRWxqHslWGZchhpz4IEBH
      eEwgtScP0GgzEGMZ49DhOmLjginbfwB7ZCLRFsNncsN+2vhXgt+FQkfJqxwZWcijm7K5qjP8
      XL08959vMv+Jr7Mw4Nq42a5G/A7wLnzUFexFyLubrNBrowv388nwSyP6ua7xSyP6ua7x9/N+
      rmv8DuDnuuYf1gG6LpRxrmnwsgtFfvy8zSwdYIJXfvQI//x/XmFwaloasWHPr7nvKz+ntHPs
      I4/+uHido3R2DCLOJKeN9zbRPzmb6Esv58tK8Bks7/tk/zM/oaBp6jLHTOMa7+V337ubf/v9
      EURAER0cfe4nPPLAr2idpd2Sx05LZw+i9O6sOsdgC7/+wSP8+w9/wo9//P/xelHDB8oofiTj
      bfz2t8/S6fzkwXjXM7N0AAWt2USIomHY4QQm6WjTkJMVjvQZvjGaHKhi767Si1GSdcef52TL
      LBRHpxrpdqSQHG3mva/yfaIX6cOyPRUFfWwKMWOddHtA9DhwSzpiggNm3ZuIY128uucQ9veE
      zCqKgiFxMd/50f/ix/+8hobDxQx8XA9QZESveNXLJl7tzF4aUWclL1qhvnuCTKWPttBsUuwt
      gMxA3Um2v1XA4KSP8GV38/gKPb96voR5aRp6NXnclyWybedRBr0alDEzD/7Xw3Q+eYi4r36e
      XFMfr/6fc9z0g1tp2/cGxyo7UAXEctudKzm7fR8lF2wMeVpYPj+HkycbGDj9f+lsuYvHVway
      e89BmvqnCM1czz8/eCNmFYBEd2kxpmX3E6oFUHD0VvH8y3sYcOpwO1zcth7O7nuKifQvsjpi
      gh3Hyli/YTORgTPxQNoo5mXYqWmaIiy4AZs2i1DTMEhumov38PLRWhS1nmWb/olbF7l48lsv
      oc0KpbtrjMWbvkRIw4tUl/byf0fHufmeB1k/Lxb1u1sTlVaLVlGQFS+txXt45XA1strAgg1f
      IMdbyO7uLP7lgcVU73uFoYg15GkvsH1/BWOihqz1m3lw3ocVEfczW65IGjEuI57+5m46W4ZJ
      zIy+eFG1xgBCwyIIMno5XXgWmyzhGOlDl3oLj25cyOnikwTf8CC/+N7DxOrApyiILg/TyVYS
      HpcXsb+CrQeqUQcG4+6t5cR5FxsfupMVyzbxne9+n9tvu51NazO57dEf8sR9i6g6cYCKDgch
      gWouHNhLw9sdg3eEkno1y+eGzDz9HZzde4jAtY/xi188wcrk6RvH53VPZ3spMh6vB/ldj3eB
      iIwsJuqb6W9sIWhuBnoBpPEWtp8a59EnfsZPvnk7dQd20GOX8KmCWP+Fx/nyHXMYbu9jycYv
      kbd8HT/8wbe5JV1ix9N/4ndbjzDpEnF0nuP5P/+RP7xQSMJNK4jxdHIwv5/Pffun/PvX76a9
      eA+++KXoe07TNTxBR/8oiYnR6E1WwqLCsQhjnDpTe7GOsZ9PxhVKI2aRWPoSh9Xp3LLUSjmA
      10HpyZMo6et5YFESvXumJ55qaxKL5iWiV3x4JAWr1QKKB/nikMmHzyfjdTjxyAqK6MEYv4B7
      HridUA2o9Gak8XJkyYesyCiKCgEBnygiK3q8koGc1WvYvDwNRfRhNgIoTHa3MRSeRNrFB6SE
      y6lgDQpApci8LXahKNNShqLHidv7/oGEMTQDc90eTtQmsOmfTNPjf58Pr86ARadGTQB6wY3k
      A63WgNGgQ9Jqp+NrEBB8EqKsoJij2HDfFkSVDp2zH2NMFsuXziX/aCXJseGopBFEwYjZqEYt
      BKBTe1GbE1iQZqG6dC8TxhWkRurY9+Z+gpY+xtKsGl6r/oCIVz9XzJWlMQihpCW6KezwcG/A
      dOgsag1BQXrOnS5ACFPh9M5sF1RMy+WoyElP5o39LzIQFUTbiIPV6ImIcbH3r8/RkKxnwmdA
      EzefJZZydrz6BiFWKznL1zMvOhqV/RhbX/aw8d6HiEpMZc/+Z3lp6nY2LMikYlc+r3efw2SO
      YsOWe7BoFLq7eomLz0V1cfRvIW91Ok+9+Vd642KZGvWyCDCZtOzd9TzD8UGMON5/qnqjFYs0
      QpVxCdEz/aQ6LIXbEst5+sk/ESBPYV20iRjr+4/VBgSRrh3hhZe2su7WO1icHo4KsLsHUGkN
      xGev4hGLwuu7tmF6aAtrchXeePJPBKhdWNJuJibEQnhOEsf+vIfl33kQs0ogOEDH6cLDTATJ
      uHzh7/9RPx+LWQpjSTgmJlFbQtCINia9aoIsBlwOBxqjGbXPybjNgUarRxY0BAfosNm9BAYF
      oEZBEt1MTkwiuobY9vtjrPvVv5LpczJmc6IxGtFIaswhZiTHJBNTLhRBg8UahEmnwjE5htML
      1tBwtLKTsfFJFH0g4QE6piYncHh8qLUmQkKtqBU3+19+huj1X2Zh/KUJsCJ5GBsdR0SLTgNG
      SzAa2cH4hAOVzohGq8YyI3AlSz7sDjtGcyA+5yQewUSQScXkhAtTSCAqr4PRMRuyoCUoNASD
      xsfkmBtTUCB4Hbh8agLMOjz2SSYcImZrMBajFgGQJZEphxOzJRCNIGEbn0RtDsIgeBgbtyGh
      wRoSgk6eoqE0n+01Et/7l/swCwpe5yQTU260egOoNQSb9UxOuWbkGq/mqL2rm7+tMpw4ybmi
      RmLXLibiM4gXl8bP8edXu/nC1+6amQBfm4gTLew7XE/GqjXkxF6mi/HzqfEPJY2oiA7GHCqC
      g4z/uCt8fj5VLusAPp/PL43o57rAnw/g57rGP1Lwc13jd4DPAJ/XhdPlxd+3Xv3M0gHcVB/f
      zWuvvca2nfu40DXOJ5PMFOmrKaJ+8G9TWHm8tZwd+47QMTpT2s3Ry6Gdb1FW3/fxg9E+EB9n
      DrxKwfneaypOx+fo50R+EYNT116x60/CLB3ASdWJQ3iC5xBtcfLma2/SN+H+6MM+EJG2kreo
      6PnbRDIO1Rxi55Eiztb2ICkKE42nOFZ6mpIz7Xy6l1tB7CnlRGsgixYkTpdzuurwcuHYTg6e
      6XrXVpXGiKunlrK67o84vp/df3mexr9f6eZPlVmvBGv0JuKyF7IqJIYL1a/SNT6Ou62B2s5x
      9GFJLF+cC6PNdLkCUA12oE3PI1oZ5MzZepzGSG5YuoiIgMsUcvPZqCgsonNSJnXBKuYlWWg/
      e4rqzhF01niWrFiM2d7B+boBnO5xnNoIVizLwzfQQvfoFCP9A8hBaaxfOxfVeDvHT57DrQli
      +fp1RJku+XdCWjaOkXa8vmhq6kQWzo9hRALJPUV1RTEtQ24C47JYMT+FyfYGeiYdjPQPoA7L
      ZM3KLBjroPjUOexYWLr+Zqy2BgrK6vAZo1l303KCtALgpebESaJWfo0ovYqR1kpquidx2KYI
      ik5Abe9jwGFi6ZobiNG7qCw/TeeoSGLeMhamWumsLKXXa2BisJ+Q1MUsyAyis7aTmNxslNFO
      +t1GEgJ9nG9swTU2yaQ6jLQImfaOYSJyVrEkI4zBhjLO1PVjjJrDimU5ONrP0DAo4hwbRheV
      yYIEmYJjBXSY+1F5VrB8yQIC9eCdHEKxRuHrq6WuN4LMWMv001F2UV10gpZhN+GpC1i6IJjU
      nAWEB0BH7Sk8+nBG+ifIXLaUUP37L+/VzqznAIos43baGehvY9itIlSnxekWsQQa6Tx1iBO1
      vQzUF7L12ec5P6HBqJpkxwsv0ecLICTAgCJfTk3XS+PxtzgzKBFodHB06xu02rxM2X1YrEGM
      1R7lrdJ2xroq2HPoPGqLhbYTRzndOUjH2XwOn+4iOFRL5fYd1A3ArPLWAAAF2klEQVQNsG/b
      YeyGQAyTVby8veJd1d2Dw8OxT03iHBuiQ20m8aI4lQeXCIEmNZX79lLZP0xL6RHyzw8QEqqi
      fNsumoZ62f3cS3TIIUSE6hFH2nl9VyFCgBWlM58XjzVPD6UkG22tBtJTpvMQuiqPcbRmBIPa
      xcE9u7FpjIydP8jx873UHt9Ffr2NKKvIsZdfonbMRfXhN6jog6BAD8d27qR3fIKyo4WMe2G0
      vYay6nbsA83sOlSELshA+9E9lPZKhKv6efO1kwwPVvLa4Xp01kC6zuzh8Lk+2s7s50jNCBaL
      loIjb9FrVxEcFIA1NJKosKCLsoZumw3MgQTqB9n1/AGGZsKNfJ3FbC3tJygsFJXbgYchCrYd
      ZcAN5w/+mT9vL0LUW3ivMOC1wqx7ANfEILuf+w0VURHc/PkvEm+ZYmdJMS12GGnvRVjiJhMw
      ZazmwU0rEMdKGbXn8sidNxH5vl+REb0ygmSjuuwc1XYjQxYtptA4lMkxqs6U0uKQcQ32EB5r
      R7ZqCI1JZ9GyxTgrz+MRRUBDdGouy1aF0Lz7DLb+bgqrKjEPDKID4jIV3uly6qAosnraKW3t
      J8AaRIB2CibAPdHF2eJTDIgKPfU2sjxegtASl57HslV66nedx9bbwWlhDr+6ey16YKIhn7PV
      p4kYHkAAUpIkJEDjE5lyq0g0zIx91AZi03NYlCtT2TLA/PlLiRgo4/TkBBfaXCy78y5WpIQh
      dXyXqpYJgjUaUucuY3FMGJXFW/F+wATFGJbA4qULGT5Whj57MTdY9RwubKCnqZIzNdXYJroR
      NBZiVRKyWkdseh7LFhs5W10L+hBSEmLxheUyLzN55hvd9Defp/hUD3rNBENjybh8gB40IXHE
      iKWcO+8lbd4KhHfYpGgDWbp6I2uWXbtF8mbtAKaQaL7wyM9ZkzD9/1j3BXpsMfzTNzdz9uUn
      L0pqW62BqACVIRJFPEBLxwjGCA0anQmTQY3T4UV2dFPVpiLvcxZ0MYEkWW/jG3fNQxwfQJhs
      pmo8mn994l7a3/yfi/qbH4UqwEqcJYTcLd/kxkQ9I0O2dxdvFkzkZuv4r/IablxyCwbv9Fh3
      oqeJCcsSvvFgDjt/88r7EmgA1NYQokaPUt42yeJwLz5NECEBcdz+2HfIC5EYHfNN3wA6I+FW
      JyOjEgR+iLFaPZGBHhrqe1gcNMGFdi3pN1m4nKC822PDMeVgqLWVKeOHB8FZI6KJjBTZ8vgj
      xGlcOHw62lveu5eAViczPjaBWxTRqbWoVDZqihtY8tBPWakv5r9/fyn3zeXWc+uDj6ByNPH6
      yztJzn3oUrtoNFjM0wpziizhkxQ0WjWyzwcqzVVfIhVmK42IhG10kvC0PMJmip5rdVbcg6c5
      fKoJa0wSSWkZRJtlJFMM6XHBqDVW0hK0HN+5jZMNYySlzyHEDJ0lu3hqezkptz/A7TnxJGZn
      MFC2l917j9PpMpG15AaChsvZW1BPcHQckfFppIRp8BBMWmo43kk7lrgEQtQ+NMFxJEWZsQ07
      iFi4ihtzLRx57VUOFp5GHZFLanwQGkC0jyFa05g/N5aRuh6yVq/GKjjwGcLJykllvO4IJ2tH
      CI9JIi0nDasiogtPJCHcwOSwk6hFa1g3N4Ajr77A0fI2UtbeydoU2P3qVo6X1GBKyiM10oJK
      MGClgSONFpbkROKzjyMEJZAUqsfukUlNSQWXDSF0DutWZdFTvp83D1eTtvFL3JYbgmN8nIDk
      +USbRWwTHhIzF6CZqGLv4TJMCTkkxseSEGrELuvJSonDOW4nKC2TKKPI2KSWrPVrSVfa2L19
      N2V1A0SkZRGidqEOTSUlVM+k3Ul8UiZJcaG0n95PcauDtIwMzFojkREy+7fvoV9tJTkkmoy8
      NMwawNnP7m2vU1TZxZx197IiNxj7sEh8XgZqxzCB8XOJtmpxdp7hlV01JCyMo2rnqzRIcaRF
      mj+7O/dTwr8S/CmjOLp45qkdrHr0W2SHXqOi+dcR/z81X3MGYT4L6AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
